import 'dart:convert';
import 'dart:io';
import 'package:cloud_functions/cloud_functions.dart';
import 'package:firebase_app_check/firebase_app_check.dart';

import '../widgets/format_method.dart';
import 'dart:ui' as ui;
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:file_picker/file_picker.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter_signature_pad/flutter_signature_pad.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:image_cropper/image_cropper.dart';
import 'package:image_picker/image_picker.dart';
import 'package:m_food/components/step_approve_widget.dart';
import 'package:m_food/controller/category_product_controller.dart';
import 'package:m_food/controller/user_controller.dart';
import 'package:m_food/widgets/circular_loading.dart';
import 'package:m_food/widgets/custom_text.dart';
import 'package:m_food/widgets/watermark_paint.dart';
import 'package:open_file/open_file.dart';
import 'package:photo_view/photo_view.dart';
import 'package:quickalert/quickalert.dart';
import 'package:scroll_date_picker/scroll_date_picker.dart';
import 'package:uuid/uuid.dart';
import 'package:m_food/widgets/widget_service.dart';
import 'package:connectivity_plus/connectivity_plus.dart';
import '/components/signature_widget.dart';
import '/flutter_flow/flutter_flow_drop_down.dart';
import '/flutter_flow/flutter_flow_google_map.dart';
import '/flutter_flow/flutter_flow_radio_button.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import '/flutter_flow/form_field_controller.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';
import 'form_general_user_model.dart';
export 'form_general_user_model.dart';
import 'package:google_maps_flutter_platform_interface/src/types/location.dart'
    as google_maps;
import 'package:google_maps_flutter_platform_interface/src/types/ui.dart'
    as ui_maps;
import 'package:geocoding/geocoding.dart';

class FormGeneralUserEditWidget extends StatefulWidget {
  final Map<String, dynamic>? entryMap;
  final String? type;
  const FormGeneralUserEditWidget(
      {@required this.type, @required this.entryMap, Key? key})
      : super(key: key);

  @override
  _FormGeneralUserEditWidgetState createState() =>
      _FormGeneralUserEditWidgetState();
}

class _FormGeneralUserEditWidgetState extends State<FormGeneralUserEditWidget> {
  final userController = Get.find<UserController>();
  RxMap<String, dynamic>? userData;
  late FormGeneralUserModel _model;

  Completer<GoogleMapController> _mapController =
      Completer<GoogleMapController>();

  Completer<GoogleMapController> mapController2 =
      Completer<GoogleMapController>();
  late CameraPosition _kGooglePlex;

  Set<Marker> markers = Set<Marker>();

  final _formKey = GlobalKey<FormState>();
  Key _mapKeyDialog = GlobalKey();
  Key _mapKey = GlobalKey();

  final Completer<GoogleMapController> _mapControllerDialog =
      Completer<GoogleMapController>();
  late CameraPosition _kGooglePlexDialog;

  Set<Marker> markersDialog = Set<Marker>();

  final categoryProductController = Get.find<CategoryProductController>();
  RxMap<String, dynamic>? categoryProduct;
  bool isLoading = false;

  // @override
  // void setState(VoidCallback callback) {
  //   super.setState(callback);
  //   _model.onUpdate();
  // }
  //========================================================
  String checkID = '';

  //============= สำหรับ dropdown รูปภาพที่ไว้อ้างอิงแก่่่สถานที่ร้านค้าท้งหมด =========
  List<FormFieldController<String>> dropDownControllersimageAddress = [];
  List<String> imageAddressAllForDropdown = [];
  bool checkSummit = false;
  //===================================================================
  //===================================================================
  //=====================================================
  // ตัวแปรเก็บ ชื่อของ กลุ่มสินค้า ทั้งหมด ในส่วนของ food
  List<String> categoryNameList = [];
  // ตัวแปร ไว้เก็บค่าจาก dropdown
  List<FormFieldController<String>> dropDownControllers = [];
  List<FormFieldController<String>> dropDownControllers2 = [];
  // ตัวแปรเก็บ ชื่อของ กลุ่มสินค้า ทั้งหมด ในส่วนของ food
  List<String?> dropDownValues = [];
  // ตัวแปรเก็บ ชื่อของ กลุ่มสินค้า ทั้งหมด ในส่วนของ food
  List<String?> dropDownValues2 = [];
  //ไว้ควบคุมจำนวน dropdown
  int total = 1; //จำนวนสินค้าที่ขายในปัจจุบัน
  int total2 = 1; //จำนวนกลุ่มสินค้าที่จะสั่งซื้อ

  int total3 = 1;
  List<Map<String, dynamic>> resultList = [];

  //===================================================================
  List<FocusNode?>? textFieldFocusSaka = [];
  List<FocusNode?>? textFieldFocusNameSaka = [];
  List<FocusNode?>? textFieldFocusRoad = [];
  List<FocusNode?>? textFieldFocusNameContract = [];
  List<FocusNode?>? textFieldFocusType = [];
  List<FocusNode?>? textFieldFocusPhone = [];

  List<FocusNode?>? textFieldFocusHouseNumber = [];
  List<FocusNode?>? textFieldFocusVillageName = [];
  // List<String?>? textProvince = [];
  // List<String?>? textDistrict = [];
  // List<String?>? texSubDistrict = [];
  List<FocusNode?>? textFieldFocusPostalCode = [];
  List<FocusNode?>? textFieldFocusLatitude = [];
  List<FocusNode?>? textFieldFocusLongitude = [];

  // List<FormFieldController<String>> dropDownValueControllerProvince = [
  //   FormFieldController<String>('')
  // ];

  // List<FormFieldController<String>> dropDownValueControllerDistrict = [
  //   FormFieldController<String>('')
  // ];
  // List<FormFieldController<String>> dropDownValueControllerSubDistrict = [
  //   FormFieldController<String>('')
  // ];

  //============== ประเภทสินค้าที่ขายในปัจจุบัน =================================
  List<TextEditingController?>? productType = [];
  List<String?>? productTypeFinal = [];
  List<FocusNode?>? textFieldFocusProductType = [];
  //===================================================================

  List<TextEditingController?>? latList = [];
  List<TextEditingController?>? lotList = [];

  List<String> addressAllForDropdown = [];

  int total4 = 1;

  List<Map<String, dynamic>> resultListSendAndBill = [];
  List<FormFieldController<String>> dropDownControllersSend = [];
  List<FormFieldController<String>> dropDownControllersBill = [];
  List<TextEditingController?>? sendAndBillList = [];

  List<FocusNode?>? textFieldFocusSendAndBill = [];

  //=====================================================

  //======================================================================
  List<String> imageUrlFromFirestore = [];
  List<String> imageUrlForDelete = [];
  List<String> imageUrl = [];
  List<XFile?> imageFile = [];
  List<File>? image = [];
  List<Uint8List> imageUint8List = [];
  int imageLength = 0;
  Reference? ref;
  //======================================================================

  List<FilePickerResult?> finalFileResult = List.filled(5, null);
  List<List<String>?>? finalFileResultString = List.generate(5, (_) => []);
  List<List<String>?>? fileUrlFromFirestoreList = List.generate(5, (_) => []);

  Reference? ref4;

  //======================================================================
  List<List<XFile?>?>? imageFileList2 = List.generate(5, (_) => []);
  List<List<File?>?>? imageList2 = List.generate(5, (_) => []);
  List<List<Uint8List?>?>? imageUint8ListList2 = List.generate(5, (_) => []);
  List<List<String>?>? imageUrlFromFirestoreList2 = List.generate(5, (_) => []);
  Reference? ref3;

  //======================================================================
  List<String> imageUrlFromFirestore2 = [];
  List<String> imageUrlForDelete2 = [];
  List<String> imageUrl2 = [];
  List<XFile?> imageFile2 = [];
  List<File>? image2 = [];
  List<Uint8List> imageUint8List2 = [];
  int imageLength2 = 0;
  Reference? ref2;
  //======================================================================
  String imageSignFirestore = '';
  //=====================================================================
  ByteData _img = ByteData(0);
  // var color = Colors.black;
  var strokeWidth = 5.0;
  final _sign = GlobalKey<SignatureState>();

  bool signConfirm = false;

  Image? imageSignToShow;

  String base64ImgSign = '';
  //=====================================================================

  List<dynamic>? provinces = [];
  List<List<dynamic>>? amphures = [];
  List<List<dynamic>>? tambons = [];

  List<Map<String, dynamic>> selected = [
    // {
    // 'province_id': null,
    // 'amphure_id': null,
    // 'tambon_id': null,
    // }
  ];

  List<TextEditingController?>? postalCodeController = [];

  DateTime dateBirthday = DateTime.now();

  //==OCR===========================
  Map textMap = {
    'idcard': '',
    'sex': '',
    'name': '',
    'surname': '',
    'day': '',
    'month': '',
    'year': '',
    'birthday': '',
    'address': '',
    'subdist': '',
    'dist': '',
    'province': '',
    'province_id': '',
    'dist_id': '',
    'subdist_id': ''
  };

  //=====================================================================
  bool checkStatusToEdit = false;
  bool checkStatusToButtonEdit = false;

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => FormGeneralUserModel());

    loadData();
  }

  ScrollController _scrollController = ScrollController();

  void scrollDown() {
    _scrollController.jumpTo(_scrollController.position.maxScrollExtent);
  }

  void loadData() async {
    try {
      setState(() {
        isLoading = true;
      });
      //=====================================================================

      print('fetchData');
      var response = await DefaultAssetBundle.of(context)
          .loadString('assets/thai_province_data.json.txt');
      var result = json.decode(response);
      provinces = result;
      provinces?.sort((a, b) {
        String nameA = a['name_th'];
        String nameB = b['name_th'];

        return nameA.compareTo(nameB);
      });
      //=====================================================================

      imageLength = widget.entryMap!['value']['รูปร้านค้า'].length;

      for (int i = 0; i < imageLength; i++) {
        imageAddressAllForDropdown.add('รูปภาพ ${i + 1}');
      }
      //=====================================================================

      if (widget.entryMap!['value']['ListCustomerAddress'].length == 0) {
        resultList.add({
          'ID': DateTime.now().toString(),
          'รหัสสาขา': '', //new
          'ชื่อสาขา': '', //new
          'HouseNumber': '',
          'VillageName': '',
          'Road': '', //new
          'Province': '',
          'District': '',
          'SubDistrict': '',
          'PostalCode': '',
          'Latitude': '',
          'Longitude': '',
          'Image': '',
          'ผู้ติดต่อ': '', //new
          'ตำแหน่ง': '', //new
          'โทรศัพท์': '', //new
        });

        selected.add({
          'province_id': null,
          'amphure_id': null,
          'tambon_id': null,
        });
        postalCodeController!.add(TextEditingController());
        amphures!.add([]);
        tambons!.add([]);
        latList!.add(TextEditingController());
        lotList!.add(TextEditingController());
        //===================================================================
        textFieldFocusSaka!.add(FocusNode());
        textFieldFocusNameSaka!.add(FocusNode());
        textFieldFocusRoad!.add(FocusNode());
        textFieldFocusNameContract!.add(FocusNode());
        textFieldFocusType!.add(FocusNode());
        textFieldFocusPhone!.add(FocusNode());
        textFieldFocusHouseNumber!.add(FocusNode());
        textFieldFocusVillageName!.add(FocusNode());
        textFieldFocusPostalCode!.add(FocusNode());
        textFieldFocusLatitude!.add(FocusNode());
        textFieldFocusLongitude!.add(FocusNode());

        dropDownControllersimageAddress.add(FormFieldController<String>(''));
      } else {
        for (int i = 0;
            i < widget.entryMap!['value']['ListCustomerAddress'].length;
            i++) {
          if (widget.entryMap!['value']['รูปร้านค้า'].length != 0) {
            if (widget.entryMap!['value']['ListCustomerAddress'].length >
                widget.entryMap!['value']['รูปร้านค้า'].length) {
              if ((i + 1) > widget.entryMap!['value']['รูปร้านค้า'].length) {
                resultList.add({
                  'ID': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['ID'], //new
                  'รหัสสาขา': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['รหัสสาขา'], //new
                  'ชื่อสาขา': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['ชื่อสาขา'], //new
                  'HouseNumber': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['HouseNumber'],
                  'VillageName': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['VillageName'],
                  'Road': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['Road'], //new
                  'Province': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Province'],
                  'District': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['District'],
                  'SubDistrict': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['SubDistrict'],
                  'PostalCode': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['PostalCode'],
                  'Latitude': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Latitude'],
                  'Longitude': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Longitude'],
                  'Image': '',
                  'ผู้ติดต่อ': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['ผู้ติดต่อ'], //new
                  'ตำแหน่ง': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['ตำแหน่ง'], //new
                  'โทรศัพท์': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['โทรศัพท์'], //new
                });
                dropDownControllersimageAddress
                    .add(FormFieldController<String>(''));
              } else {
                if (widget.entryMap!['value']['รูปร้านค้า'][i] == '') {
                  resultList.add({
                    'ID': widget.entryMap!['value']['ListCustomerAddress'][i]
                        ['ID'], //new
                    'รหัสสาขา': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['รหัสสาขา'], //new
                    'ชื่อสาขา': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['ชื่อสาขา'], //new
                    'HouseNumber': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['HouseNumber'],
                    'VillageName': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['VillageName'],
                    'Road': widget.entryMap!['value']['ListCustomerAddress'][i]
                        ['Road'], //new
                    'Province': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['Province'],
                    'District': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['District'],
                    'SubDistrict': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['SubDistrict'],
                    'PostalCode': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['PostalCode'],
                    'Latitude': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['Latitude'],
                    'Longitude': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['Longitude'],
                    'Image': widget.entryMap!['value']['ListCustomerAddress'][i]
                        ['Image'],
                    'ผู้ติดต่อ': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['ผู้ติดต่อ'], //new
                    'ตำแหน่ง': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['ตำแหน่ง'], //new
                    'โทรศัพท์': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['โทรศัพท์'], //new
                  });
                  dropDownControllersimageAddress
                      .add(FormFieldController<String>(''));
                } else {
                  resultList.add({
                    'ID': widget.entryMap!['value']['ListCustomerAddress'][i]
                        ['ID'], //new
                    'รหัสสาขา': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['รหัสสาขา'], //new
                    'ชื่อสาขา': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['ชื่อสาขา'], //new
                    'HouseNumber': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['HouseNumber'],
                    'VillageName': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['VillageName'],
                    'Road': widget.entryMap!['value']['ListCustomerAddress'][i]
                        ['Road'], //new
                    'Province': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['Province'],
                    'District': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['District'],
                    'SubDistrict': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['SubDistrict'],
                    'PostalCode': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['PostalCode'],
                    'Latitude': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['Latitude'],
                    'Longitude': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['Longitude'],
                    // 'Image': '',
                    'Image': widget.entryMap!['value']['รูปร้านค้า'].indexOf(
                                widget.entryMap!['value']['ListCustomerAddress']
                                    [i]['Image']) !=
                            -1
                        ? (widget.entryMap!['value']['รูปร้านค้า'].indexOf(
                                    widget.entryMap!['value']
                                        ['ListCustomerAddress'][i]['Image']) +
                                1)
                            .toString()
                        : '',
                    'ผู้ติดต่อ': widget.entryMap!['value']
                        ['ListCustomerAddress'][i]['ผู้ติดต่อ'], //new
                    'ตำแหน่ง': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['ตำแหน่ง'], //new
                    'โทรศัพท์': widget.entryMap!['value']['ListCustomerAddress']
                        [i]['โทรศัพท์'], //new
                  });
                  dropDownControllersimageAddress.add(FormFieldController<
                          String>(
                      'รูปภาพ ${widget.entryMap!['value']['รูปร้านค้า'].indexOf(widget.entryMap!['value']['ListCustomerAddress'][i]['Image']) + 1}'));
                }
              }
            } else {
              if (widget.entryMap!['value']['รูปร้านค้า'][i] == '') {
                resultList.add({
                  'ID': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['ID'], //new
                  'รหัสสาขา': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['รหัสสาขา'], //new
                  'ชื่อสาขา': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['ชื่อสาขา'], //new
                  'HouseNumber': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['HouseNumber'],
                  'VillageName': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['VillageName'],
                  'Road': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['Road'], //new
                  'Province': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Province'],
                  'District': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['District'],
                  'SubDistrict': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['SubDistrict'],
                  'PostalCode': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['PostalCode'],
                  'Latitude': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Latitude'],
                  'Longitude': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Longitude'],
                  'Image': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['Image'],
                  'ผู้ติดต่อ': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['ผู้ติดต่อ'], //new
                  'ตำแหน่ง': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['ตำแหน่ง'], //new
                  'โทรศัพท์': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['โทรศัพท์'], //new
                });
                dropDownControllersimageAddress
                    .add(FormFieldController<String>(''));
              } else {
                resultList.add({
                  'ID': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['ID'], //new
                  'รหัสสาขา': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['รหัสสาขา'], //new
                  'ชื่อสาขา': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['ชื่อสาขา'], //new
                  'HouseNumber': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['HouseNumber'],
                  'VillageName': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['VillageName'],
                  'Road': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['Road'], //new
                  'Province': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Province'],
                  'District': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['District'],
                  'SubDistrict': widget.entryMap!['value']
                      ['ListCustomerAddress'][i]['SubDistrict'],
                  'PostalCode': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['PostalCode'],
                  'Latitude': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Latitude'],
                  'Longitude': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['Longitude'],
                  // 'Image': '',
                  'Image': widget.entryMap!['value']['รูปร้านค้า'].indexOf(
                              widget.entryMap!['value']['ListCustomerAddress']
                                  [i]['Image']) !=
                          -1
                      ? (widget.entryMap!['value']['รูปร้านค้า'].indexOf(
                                  widget.entryMap!['value']
                                      ['ListCustomerAddress'][i]['Image']) +
                              1)
                          .toString()
                      : '',
                  'ผู้ติดต่อ': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['ผู้ติดต่อ'], //new
                  'ตำแหน่ง': widget.entryMap!['value']['ListCustomerAddress'][i]
                      ['ตำแหน่ง'], //new
                  'โทรศัพท์': widget.entryMap!['value']['ListCustomerAddress']
                      [i]['โทรศัพท์'], //new
                });
                dropDownControllersimageAddress.add(FormFieldController<String>(
                    'รูปภาพ ${widget.entryMap!['value']['รูปร้านค้า'].indexOf(widget.entryMap!['value']['ListCustomerAddress'][i]['Image']) + 1}'));
              }
            }
          } else {
            resultList.add({
              'ID': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['ID'], //new
              'รหัสสาขา': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['รหัสสาขา'], //new
              'ชื่อสาขา': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['ชื่อสาขา'], //new
              'HouseNumber': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['HouseNumber'],
              'VillageName': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['VillageName'],
              'Road': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['Road'], //new
              'Province': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['Province'],
              'District': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['District'],
              'SubDistrict': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['SubDistrict'],
              'PostalCode': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['PostalCode'],
              'Latitude': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['Latitude'],
              'Longitude': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['Longitude'],
              // 'Image': '',
              'Image': '',
              'ผู้ติดต่อ': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['ผู้ติดต่อ'], //new
              'ตำแหน่ง': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['ตำแหน่ง'], //new
              'โทรศัพท์': widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['โทรศัพท์'], //new
            });
            dropDownControllersimageAddress
                .add(FormFieldController<String>(''));
          }
          List<dynamic>? childs;
          if (resultList[i]['Province'] == '') {
            amphures!.add([]);
          } else {
            Map<String, dynamic> parentAmphure = provinces!.firstWhere(
                (item) => item['name_th'] == resultList[i]['Province']);
            childs = parentAmphure['amphure'];
            amphures!.add(childs!);
          }
          if (resultList[i]['District'] == '') {
            tambons!.add([]);
          } else {
            Map<String, dynamic> parentTambon = childs!.firstWhere(
                (item) => item['name_th'] == resultList[i]['District']);

            List<dynamic> childsTambon = parentTambon['tambon'];
            tambons!.add(childsTambon);
          }

          //================= find Province =====================================
          Map<String, dynamic>? foundMapProvince;

          for (Map<String, dynamic> map in provinces!) {
            if (map["name_th"] == resultList[i]['Province']) {
              foundMapProvince = map;
              break;
            }
          }

          if (foundMapProvince != null) {
            print(
                "พบ Map ที่มี id เท่ากับ ${resultList[i]['Province']}: $foundMapProvince");
            // resultList[index]['Province'] = foundMapProvince['name_th'];
          } else {
            print("ไม่พบ Map ที่มี id เท่ากับ ${resultList[i]['Province']}");
          }
          //================= find Amphor =====================================
          Map<String, dynamic>? foundMapAmphor;
          for (List<dynamic> innerList in amphures ?? []) {
            for (Map<String, dynamic> map
                in innerList.cast<Map<String, dynamic>>()) {
              if (map["name_th"] == resultList[i]['District']) {
                foundMapAmphor = map;
                break;
              }
            }
            if (foundMapAmphor != null) {
              break;
            }
          }
          if (foundMapAmphor != null) {
            print(
                "พบ Map ที่มี id เท่ากับ ${resultList[i]['District']}: $foundMapAmphor");
            // resultList[index]['District'] = foundMapAmphor['name_th'];
          } else {
            print("ไม่พบ Map ที่มี id เท่ากับ ${resultList[i]['District']}");
          }
          //================= find Tambon =====================================

          Map<String, dynamic>? foundMap;
          for (List<dynamic> innerList in tambons ?? []) {
            for (Map<String, dynamic> map
                in innerList.cast<Map<String, dynamic>>()) {
              if (map["name_th"] == resultList[i]['SubDistrict']) {
                foundMap = map;
                break;
              }
            }
            if (foundMap != null) {
              break;
            }
          }
          if (foundMap != null) {
            print(
                "พบ Map ที่มี id เท่ากับ ${resultList[i]['SubDistrict']}: $foundMap");
          } else {
            print("ไม่พบ Map ที่มี id เท่ากับ ${resultList[i]['SubDistrict']}");
          }
          //================= find Tambon =====================================
          selected.add({
            'province_id':
                resultList[i]['Province'] == '' ? '' : foundMapProvince!['id'],
            'amphure_id':
                resultList[i]['District'] == '' ? '' : foundMapAmphor!['id'],
            'tambon_id':
                resultList[i]['SubDistrict'] == '' ? '' : foundMap!['id'],
          });
          //================= find Tambon =====================================

          postalCodeController!.add(TextEditingController(
              text: widget.entryMap!['value']['ListCustomerAddress'][i]
                  ['PostalCode']));
          //===================================================================
          textFieldFocusSaka!.add(FocusNode());
          textFieldFocusNameSaka!.add(FocusNode());
          textFieldFocusRoad!.add(FocusNode());
          textFieldFocusNameContract!.add(FocusNode());
          textFieldFocusType!.add(FocusNode());
          textFieldFocusPhone!.add(FocusNode());
          textFieldFocusHouseNumber!.add(FocusNode());
          textFieldFocusVillageName!.add(FocusNode());
          textFieldFocusPostalCode!.add(FocusNode());
          textFieldFocusLatitude!.add(FocusNode());
          textFieldFocusLongitude!.add(FocusNode());

          // dropDownValueControllerProvince.add(FormFieldController<String>(''));
          // dropDownValueControllerDistrict.add(FormFieldController<String>(''));
          // dropDownValueControllerSubDistrict.add(FormFieldController<String>(''));

          latList!.add(TextEditingController(text: resultList[i]['Latitude']));
          lotList!.add(TextEditingController(text: resultList[i]['Longitude']));
          print('Success');
        }

        total3 = resultList.length;
      }

      categoryProduct = categoryProductController.categoryProductsData;

      for (int i = 0; i < categoryProduct!.length; i++) {
        categoryNameList
            .add(categoryProduct!['key${i}']['GROUP_DESC']);
      }

      //================ อ่านค่า สินค้าที่จำหน่ายในปัจจุบัน ==================
      for (int i = 0;
          i < widget.entryMap!['value']['CategoryProductNow'].length;
          i++) {
        productType!.add(TextEditingController(
            text: widget.entryMap!['value']['CategoryProductNow'][i]));
        textFieldFocusProductType!.add(FocusNode());
        // if (widget.entryMap!['value']['CategoryProductNow'][i] == null ||
        //     widget.entryMap!['value']['CategoryProductNow'][i] == '') {
        // } else {
        //   dropDownControllers.add(FormFieldController<String>(
        //       widget.entryMap!['value']['CategoryProductNow'][i]));
        //   dropDownValues
        //       .add(widget.entryMap!['value']['CategoryProductNow'][i]);
        // }
      }
      total = widget.entryMap!['value']['CategoryProductNow'].length;
      //=========================================================

      if (dropDownControllers.isEmpty) {
        dropDownControllers.add(FormFieldController<String>(null));
        dropDownValues.add('');
      } else {
        total = dropDownControllers.length;
      }

      for (int i = 0;
          i < widget.entryMap!['value']['CategoryProductOrder'].length;
          i++) {
        if (widget.entryMap!['value']['CategoryProductOrder'][i] == null ||
            widget.entryMap!['value']['CategoryProductOrder'][i] == '') {
        } else {
          dropDownControllers2.add(FormFieldController<String>(
              widget.entryMap!['value']['CategoryProductOrder'][i]));
          dropDownValues2
              .add(widget.entryMap!['value']['CategoryProductOrder'][i]);
        }
      }

      if (dropDownControllers2.isEmpty) {
        dropDownControllers2.add(FormFieldController<String>(null));
        dropDownValues2.add('');
      } else {
        total2 = dropDownControllers2.length;
      }

      //=====================================================================
      _model.dropDownValueController6 ??=
          FormFieldController<String>(widget.entryMap!['value']['ตารางราคา']);
      _model.dropDownValue6 = widget.entryMap!['value']['ตารางราคา'] ?? '';

      // _model.dropDownValueController7 ??=
      //     FormFieldController<String>(widget.entryMap!['value']['ที่อยู่จัดส่ง']);
      // _model.dropDownValue7 = widget.entryMap!['value']['ที่อยู่จัดส่ง'];

      // _model.dropDownValueController8 ??=
      //     FormFieldController<String>(widget.entryMap!['value']['ตารางราคา']);
      // _model.dropDownValue8 = widget.entryMap!['value']['ที่อยู่ออกบิล'];

      // _model.dropDownValueController9 ??=
      //     FormFieldController<String>(widget.entryMap!['value']['ตารางราคา']);
      // _model.dropDownValue9 = widget.entryMap!['value']['ที่อยู่อื่น'];

      // _model.dropDownValueController10 ??= FormFieldController<String>(
      //     widget.entryMap!['value']['ระยะเวลาชำระหนี้']);
      // _model.dropDownValue10 =
      //     widget.entryMap!['value']['ระยะเวลาชำระหนี้'] ?? '';

      _model.textController191 ??= TextEditingController(
          text: widget.entryMap!['value']['ระยะเวลาชำระหนี้']);
      _model.textFieldFocusNode191 ??= FocusNode();

      _model.dropDownValueController11 ??=
          FormFieldController<String>(widget.entryMap!['value']['ประเภทชำระ']);
      _model.dropDownValue11 = widget.entryMap!['value']['ประเภทชำระ'] ?? '';

      _model.dropDownValueController12 ??= FormFieldController<String>(
          widget.entryMap!['value']['เงื่อนไขชำระ']);
      _model.dropDownValue12 = widget.entryMap!['value']['เงื่อนไขชำระ'] ?? '';

      _model.dropDownValueController13 ??= FormFieldController<String>(
          widget.entryMap!['value']['บัญชีธนาคารของบริษัท']);
      _model.dropDownValue13 =
          widget.entryMap!['value']['บัญชีธนาคารของบริษัท'] ?? '';

      _model.dropDownValueController14 ??=
          FormFieldController<String>(widget.entryMap!['value']['แผนก']);
      _model.dropDownValue14 = widget.entryMap!['value']['แผนก'] ?? '';

      _model.dropDownValueController15 ??=
          FormFieldController<String>(widget.entryMap!['value']['รหัสบัญชี']);
      _model.dropDownValue15 = widget.entryMap!['value']['รหัสบัญชี'] ?? '';

      _model.dropDownValueController16 ??= FormFieldController<String>(
          widget.entryMap!['value']['รหัสพนักงานขาย']);
      _model.dropDownValue16 =
          widget.entryMap!['value']['รหัสพนักงานขาย'] ?? '';

      _model.dropDownValueController17 ??= FormFieldController<String>(
          widget.entryMap!['value']['ชื่อพนักงานขาย']);
      _model.dropDownValue17 =
          widget.entryMap!['value']['ชื่อพนักงานขาย'] ?? '';

      _model.dropDownValueController18 ??= FormFieldController<String>(
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า']);
      _model.dropDownValueController182 ??= FormFieldController<String>(
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า2']);
      _model.dropDownValueController183 ??= FormFieldController<String>(
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า3']);
      _model.dropDownValueController184 ??= FormFieldController<String>(
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า4']);
      _model.dropDownValueController185 ??= FormFieldController<String>(
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า5']);
      _model.dropDownValue18 =
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า'] ?? '';
      _model.dropDownValue182 =
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า2'] ?? '';
      _model.dropDownValue183 =
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า3'] ?? '';
      _model.dropDownValue184 =
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า4'] ?? '';
      _model.dropDownValue185 =
          widget.entryMap!['value']['รหัสกลุ่มลูกค้า5'] ?? '';

      _model.dropDownValueController19 ??=
          FormFieldController<String>(widget.entryMap!['value']['รหัสบัญชี2']);
      _model.dropDownValue19 = widget.entryMap!['value']['รหัสบัญชี2'] ?? '';
      //=====================================================================
      _model.radioButtonValueController ??=
          FormFieldController<String>(widget.entryMap!['value']['คำนำหน้า']);
      //=====================================================================
      //=====================================================================
      _model.radioButtonValueControllerVat ??=
          FormFieldController<String>(widget.entryMap!['value']['vat']);
      //=====================================================================
      _model.textController1 ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อนามสกุล']);
      _model.textFieldFocusNode1 ??= FocusNode();

      _model.textController2 ??=
          TextEditingController(text: widget.entryMap!['value']['วันเกิด']);
      _model.textFieldFocusNode2 ??= FocusNode();

      _model.textController3 ??=
          TextEditingController(text: widget.entryMap!['value']['เดือนเกิด']);
      _model.textFieldFocusNode3 ??= FocusNode();

      _model.textController4 ??=
          TextEditingController(text: widget.entryMap!['value']['ปีเกิด']);
      _model.textFieldFocusNode4 ??= FocusNode();

      _model.textController5 ??= TextEditingController(
          text: widget.entryMap!['value']['เลขบัตรประชาชน']);
      _model.textFieldFocusNode5 ??= FocusNode();

      _model.textController6 ??=
          TextEditingController(text: widget.entryMap!['value']['PhoneNumber']);
      _model.textFieldFocusNode6 ??= FocusNode();

      _model.textController7 ??= TextEditingController(
          text: widget.entryMap!['value']['วันเริ่มจัดส่ง']);
      _model.textFieldFocusNode7 ??= FocusNode();

      _model.textController8 ??= TextEditingController(
          text: widget.entryMap!['value']['เดือนเริ่มจัดส่ง']);
      _model.textFieldFocusNode8 ??= FocusNode();

      _model.textController9 ??= TextEditingController(
          text: widget.entryMap!['value']['ปีเริ่มจัดส่ง']);
      _model.textFieldFocusNode9 ??= FocusNode();

      _model.textController10 ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อร้านค้า']);
      _model.textFieldFocusNode10 ??= FocusNode();

      _model.textController11 ??= TextEditingController(
          text: widget.entryMap!['value']['เป้าหมายยอดขาย']);
      _model.textFieldFocusNode11 ??= FocusNode();

      _model.textController12 ??= TextEditingController(
          text: widget.entryMap!['value']['ระยะเวลาการดำเนินการ']);
      _model.textFieldFocusNode12 ??= FocusNode();

      // _model.textController13 ??= TextEditingController(
      //     text: widget.entryMap!['value']['เดือนสิ้นสุด']);
      // _model.textFieldFocusNode13 ??= FocusNode();

      // _model.textController14 ??=
      //     TextEditingController(text: widget.entryMap!['value']['ปีสิ้นสุด']);
      // _model.textFieldFocusNode14 ??= FocusNode();

      //=====================================================================

      _model.textController15 ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อนามสกุล']);
      _model.textFieldFocusNode15 ??= FocusNode();

      _model.textController16 ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อนามสกุล']);
      _model.textFieldFocusNode16 ??= FocusNode();

      _model.textController17 ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อนามสกุล']);
      _model.textFieldFocusNode17 ??= FocusNode();

      _model.textController171 ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อนามสกุล']);
      _model.textFieldFocusNode171 ??= FocusNode();
      _model.textController172 ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อนามสกุล']);
      _model.textFieldFocusNode172 ??= FocusNode();
      //=====================================================================
      //ค้นหาสถานที่ของ map
      _model.textController18 ??= TextEditingController();
      _model.textFieldFocusNode18 ??= FocusNode();
      //=====================================================================
      _model.textController19 ??= TextEditingController(
          text: widget.entryMap!['value']['วงเงินเครดิต']);
      _model.textFieldFocusNode19 ??= FocusNode();

      _model.textController20 ??=
          TextEditingController(text: widget.entryMap!['value']['ส่วนลดบิล']);
      _model.textFieldFocusNode20 ??= FocusNode();

      _model.textController1Company ??=
          TextEditingController(text: widget.entryMap!['value']['ชื่อบริษัท']);
      _model.textFieldFocusNode1Company ??= FocusNode();
      _model.textController2Company ??=
          TextEditingController(text: widget.entryMap!['value']['วันจัดตั้ง']);
      _model.textFieldFocusNode2Company ??= FocusNode();
      _model.textController3Company ??= TextEditingController(
          text: widget.entryMap!['value']['เดือนจัดตั้ง']);
      _model.textFieldFocusNode3Company ??= FocusNode();
      _model.textController4Company ??=
          TextEditingController(text: widget.entryMap!['value']['ปีจัดตั้ง']);
      _model.textFieldFocusNode4Company ??= FocusNode();
      _model.textController41Company ??= TextEditingController(
          text: widget.entryMap!['value']['เลขประจำตัวผู้เสียภาษี']);
      _model.textFieldFocusNode41Company ??= FocusNode();
      _model.textController5Company ??= TextEditingController(
          text: widget.entryMap!['value']['ทุนจดทะเบียน']);
      _model.textFieldFocusNode5Company ??= FocusNode();

      if (widget.type == 'Company') {
        if (_model.textController41Company.text.length == 13) {
          FirebaseFirestore firestore = FirebaseFirestore.instance;

          QuerySnapshot querySnapshot = await firestore
              .collection('Customer')
              .where('เลขประจำตัวผู้เสียภาษี',
                  isEqualTo: _model.textController5.text)
              .get();

          if (querySnapshot.docs.isNotEmpty) {
            querySnapshot.docs.forEach((doc) {
              Map<String, dynamic> data = doc.data() as Map<String, dynamic>;

              var fieldValue = data['สถานะ'];
              var fieldValue2 = data['รอการอนุมัติ'];
              var fieldValue3 = data['บันทึกพร้อมตรวจ'];

              if (!fieldValue && !fieldValue2 && !fieldValue3) {
                checkID = 'orange';
                setState(() {});
              } else {
                checkID = 'red';
                setState(() {});
              }
            });
          } else {
            print('ไม่พบเอกสารที่ตรงกับเงื่อนไข');
            checkID = 'green';
            setState(() {});
          }
        }
      } else {
        if (_model.textController5.text.length == 13) {
          FirebaseFirestore firestore = FirebaseFirestore.instance;

          QuerySnapshot querySnapshot = await firestore
              .collection('Customer')
              .where('เลขบัตรประชาชน', isEqualTo: _model.textController5.text)
              .get();

          if (querySnapshot.docs.isNotEmpty) {
            querySnapshot.docs.forEach((doc) {
              Map<String, dynamic> data = doc.data() as Map<String, dynamic>;

              var fieldValue = data['สถานะ'];
              var fieldValue2 = data['รอการอนุมัติ'];
              var fieldValue3 = data['บันทึกพร้อมตรวจ'];

              if (!fieldValue && !fieldValue2 && !fieldValue3) {
                checkID = 'orange';
                // setState(() {});
              } else {
                checkID = 'red';
                // setState(() {});
              }
            });
          } else {
            print('ไม่พบเอกสารที่ตรงกับเงื่อนไข');
            checkID = 'green';
            // setState(() {});
          }
        } else {
          checkID = 'green';
          // setState(() {});
        }
      }

      imageSignFirestore = widget.entryMap!['value']['ลายเซ็น'];

      widget.entryMap!['value']['สถานะ'] == true
          ? checkStatusToButtonEdit = true
          : widget.entryMap!['value']['สถานะ'] == false &&
                  widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == false
              ? checkStatusToButtonEdit = true
              : checkStatusToButtonEdit = false;

      widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == true
          ? checkStatusToEdit = true
          : checkStatusToEdit = false;
      //================================================================

      // resultListSendAndBill.add({
      //   'ที่อยู่จัดส่ง': '',
      //   'ชื่อออกบิล': '',
      //   'ที่อยู่ออกบิล': '',
      // });

      if (widget.entryMap!['value']['ลิสต์จัดส่งและออกบิล'].length == 0) {
        resultListSendAndBill.add({
          'ที่อยู่จัดส่ง': '',
          'ชื่อออกบิล': '',
          'ที่อยู่ออกบิล': '',
        });

        dropDownControllersSend.add(FormFieldController<String>(''));
        dropDownControllersBill.add(FormFieldController<String>(''));

        sendAndBillList!.add(TextEditingController());

        textFieldFocusSendAndBill!.add(FocusNode());
      } else {
        for (int i = 0;
            i < widget.entryMap!['value']['ลิสต์จัดส่งและออกบิล'].length;
            i++) {
          resultListSendAndBill.add({
            'ที่อยู่จัดส่ง': widget.entryMap!['value']['ลิสต์จัดส่งและออกบิล']
                [i]['ที่อยู่จัดส่ง'],
            'ชื่อออกบิล': widget.entryMap!['value']['ลิสต์จัดส่งและออกบิล'][i]
                ['ชื่อออกบิล'],
            'ที่อยู่ออกบิล': widget.entryMap!['value']['ลิสต์จัดส่งและออกบิล']
                [i]['ที่อยู่ออกบิล'],
          });

          if (resultListSendAndBill[i]['ที่อยู่จัดส่ง'] == '') {
            dropDownControllersSend.add(FormFieldController<String>(''));
            dropDownControllersSend.last.value = '';
          } else {
            dropDownControllersSend.add(FormFieldController<String>(
                resultListSendAndBill[i]['ที่อยู่จัดส่ง']));
          }

          if (resultListSendAndBill[i]['ที่อยู่ออกบิล'] == '') {
            dropDownControllersBill.add(FormFieldController<String>(''));
            dropDownControllersBill.last.value = '';
          } else {
            dropDownControllersBill.add(FormFieldController<String>(
                resultListSendAndBill[i]['ที่อยู่ออกบิล']));
          }

          sendAndBillList!.add(TextEditingController(
              text: resultListSendAndBill[i]['ชื่อออกบิล']));

          textFieldFocusSendAndBill!.add(FocusNode());
        }
        total4 = resultListSendAndBill.length;
      }
      //================================================================

      imageLength = widget.entryMap!['value']['รูปร้านค้า'].length;

      for (var element in widget.entryMap!['value']['รูปร้านค้า']) {
        imageUrlFromFirestore.add(element);
        imageUrlForDelete.add(element);
        imageUrl.add(element);
        imageFile.add(null);
        image!.add(File(''));
        imageUint8List.add(Uint8List(0));
      }
      print('รูปร้านค้า');
      //================================================================

      for (int i = 0; i < widget.entryMap!['value']['รูปเอกสาร'].length; i++) {
        for (int j = 0;
            j < widget.entryMap!['value']['รูปเอกสาร'][i]['key'].length;
            j++) {
          imageUrlFromFirestoreList2![i]!
              .add(widget.entryMap!['value']['รูปเอกสาร'][i]['key'][j]);

          imageFileList2![i]!.add(null);
          imageList2![i]!.add(null);
          imageUint8ListList2![i]!.add(null);
        }
      }

      // for (var element in widget.entryMap!['value']['รูปเอกสาร']) {
      //   // imageUrlFromFirestore2.add(element);
      //   // imageUrlForDelete2.add(element);
      //   // imageUrl2.add(element);
      //   // imageFile2.add(null);
      //   // image2!.add(File(''));
      //   // imageUint8List2.add(Uint8List(0));
      // }

      imageLength2 = imageUrlFromFirestoreList2![0]!.length +
          imageUrlFromFirestoreList2![1]!.length +
          imageUrlFromFirestoreList2![2]!.length +
          imageUrlFromFirestoreList2![3]!.length +
          imageUrlFromFirestoreList2![4]!.length;
      //===========================   file pdf url =====================================

      for (int i = 0; i < widget.entryMap!['value']['ไฟล์เอกสาร'].length; i++) {
        for (int j = 0;
            j < widget.entryMap!['value']['ไฟล์เอกสาร'][i]['key'].length;
            j++) {
          fileUrlFromFirestoreList![i]!
              .add(widget.entryMap!['value']['ไฟล์เอกสาร'][i]['key'][j]);

          finalFileResultString![i]!.add('');
        }
      }

      //================================================================

      // imageLength2 = widget.entryMap!['value']['รูปเอกสาร'].length;
      // for (var element in widget.entryMap!['value']['รูปเอกสาร']) {
      //   imageUrlFromFirestore2.add(element);
      //   imageUrlForDelete2.add(element);
      //   imageUrl2.add(element);
      //   imageFile2.add(null);
      //   image2!.add(File(''));
      //   imageUint8List2.add(Uint8List(0));
      // }
      //================================================================
      print('load Data to Map');
      late double lat;
      late double lot;

      if (resultList[0]['Latitude'] == '' || resultList[0]['Longitude'] == '') {
        for (int i = 0; i < resultList.length; i++) {
          if (resultList[i]['Latitude'] != '' &&
              resultList[i]['Longitude'] != '') {
            lat = double.parse(resultList[i]['Latitude']);
            lot = double.parse(resultList[i]['Longitude']);
            break;
          } else {
            lat = 13.7563309;
            lot = 100.5017651;
          }
        }
      } else {
        lat = double.parse(resultList[0]['Latitude']);
        lot = double.parse(resultList[0]['Longitude']);
      }

      _kGooglePlex = CameraPosition(
        target: google_maps.LatLng(lat, lot),
        zoom: 15,
      );

      markers.clear();

      for (int i = 0; i < resultList.length; i++) {
        if (resultList[i]['Latitude'] == '') {
        } else {
          double latIndex = double.parse(resultList[i]['Latitude']);
          double lotIndex = double.parse(resultList[i]['Longitude']!);

          markers.add(
            Marker(
              markerId: MarkerId(resultList[i]['ID']),
              position: google_maps.LatLng(latIndex, lotIndex), // ตำแหน่ง
              infoWindow: InfoWindow(
                title: 'จุดที่ ${i + 1}', // ชื่อของปักหมุด
                snippet: resultList[i]['Latitude'],
                onTap: () async {
                  await mapDialog(resultList, resultList[i]['ID'])
                      .whenComplete(() {
                    _mapKey = GlobalKey();
                    if (mounted) {
                      setState(() {});
                    }
                  });
                }, // คำอธิบายของปักหมุด
              ),
            ),
          );
        }
      }

      // _kGooglePlex = CameraPosition(
      //   target: google_maps.LatLng(13.7563309, 100.5017651),
      //   zoom: 14.4746,
      // );

      // markers.add(
      //   Marker(
      //     markerId: MarkerId("your_marker_id"),
      //     position: google_maps.LatLng(13.7563309, 100.5017651), // ตำแหน่ง
      //     infoWindow: InfoWindow(
      //       title: "", // ชื่อของปักหมุด
      //       // snippet: "Your Marker Description", // คำอธิบายของปักหมุด
      //     ),
      //   ),
      // );

      // _kGooglePlexDialog = CameraPosition(
      //   target: google_maps.LatLng(13.7563309, 100.5017651),
      //   zoom: 14.4746,
      // );

      // markersDialog.add(
      //   Marker(
      //     markerId: MarkerId("your_marker_id"),
      //     position: google_maps.LatLng(13.7563309, 100.5017651), // ตำแหน่ง
      //     infoWindow: InfoWindow(
      //       title: "", // ชื่อของปักหมุด
      //       // snippet: "Your Marker Description", // คำอธิบายของปักหมุด
      //     ),
      //   ),
      // );
      //====================================================================
      List<Map<String, dynamic>> addressThai = [];

      // List<String?>? textList = [];

      for (int i = 0; i < resultList.length; i++) {
        // resultList.add(false);

        List<Map<String, dynamic>> mapProvincesList =
            provinces!.cast<Map<String, dynamic>>();

        List<Map<String, dynamic>> mapList =
            amphures![i].cast<Map<String, dynamic>>();
        List<Map<String, dynamic>> tambonList =
            tambons![i].cast<Map<String, dynamic>>();
        String? provincesName;
        String? amphorName;
        String? tambonName;

        //====================================================================
        if (resultList[i]['Province'] == '' ||
            resultList[i]['Province'] == null) {
          provincesName = '';
        } else {
          Map<String, dynamic> resultProvince = mapProvincesList.firstWhere(
              (element) => element['name_th'] == resultList[i]['Province'],
              orElse: () => {});

          provincesName = resultProvince['name_th'] ?? '';
        }
        //====================================================================
        if (resultList[i]['District'] == '' ||
            resultList[i]['District'] == null) {
          amphorName = '';
        } else {
          Map<String, dynamic> resultAmphure = mapList.firstWhere(
              (element) => element['name_th'] == resultList[i]['District'],
              orElse: () => {});

          amphorName = resultAmphure['name_th'] ?? '';
        }

        //====================================================================
        if (resultList[i]['SubDistrict'] == '' ||
            resultList[i]['SubDistrict'] == null) {
          tambonName = '';
        } else {
          Map<String, dynamic> resultTambon = tambonList.firstWhere(
              (element) => element['name_th'] == resultList[i]['SubDistrict'],
              orElse: () => {});
          tambonName = resultTambon['name_th'] ?? '';
        }
        //====================================================================
        addressThai.add({
          'province_name': provincesName! == '' ? provincesName : provincesName,
          'amphure_name': amphorName! == '' ? amphorName : amphorName,
          'tambon_name': tambonName! == '' ? tambonName : tambonName,
        });

        String texttt =
            '${resultList[i]['รหัสสาขา']} ${resultList[i]['ชื่อสาขา']} ${resultList[i]['HouseNumber']} ${resultList[i]['VillageName']} ${resultList[i]['Road']} ${resultList[i]['SubDistrict']} ${resultList[i]['District']} ${resultList[i]['Province']} ${resultList[i]['PostalCode']} ${resultList[i]['ผู้ติดต่อ']} ${resultList[i]['ตำแหน่ง']} ${resultList[i]['โทรศัพท์']}';

        addressAllForDropdown.add(texttt.trimLeft().trimRight());
      }
    } catch (e) {
      print(e);
    } finally {
      if (mounted) {
        setState(() {
          isLoading = false;
        });
      }
    }
  }

  @override
  void dispose() {
    // _model.maybeDispose();

    super.dispose();
  }

  void setAmphures(List<dynamic>? newAmphures, int index) {
    setState(() {
      amphures![index] = newAmphures!;
    });
  }

  void setTambons(List<dynamic>? newTambons, int index) {
    setState(() {
      tambons![index] = newTambons!;
    });
  }

  Widget dropdownList({
    String? label,
    String? id,
    List<dynamic>? list,
    String? child,
    List<String>? childsId,
    List<Function(List<dynamic>?, int)>? setChilds,
    int? index,
  }) {
    return StatefulBuilder(builder: (context, setState) {
      void onChangeHandle(String? selectedValue) {
        setChilds == null
            ? null
            : setChilds!.forEach((setChild) => setChild([], index!));
        Map<String, dynamic> unSelectChilds;
        setChilds == null
            ? unSelectChilds = {}
            : unSelectChilds = Map.fromIterable(childsId!,
                key: (item) => item, value: (item) => null);
        int? dependId =
            selectedValue!.isNotEmpty ? int.parse(selectedValue) : null;
        setState(() {
          selected[index!] = {
            ...selected[index],
            ...unSelectChilds,
            id!: dependId,
          };
        });

        if (selectedValue.isEmpty) return;

        if (child != null) {
          Map<String, dynamic> parent =
              list!.firstWhere((item) => item['id'] == dependId);
          List<dynamic> childs = parent[child];
          setChilds!.first(childs, index!);
        }

        //================= find Province =====================================
        Map<String, dynamic>? foundMapProvince;

        for (Map<String, dynamic> map in provinces!) {
          if (map["id"] == selected[index!]['province_id']) {
            foundMapProvince = map;
            break;
          }
        }

        if (foundMapProvince != null) {
          print(
              "พบ Map ที่มี id เท่ากับ ${selected[index!]['province_id']}: $foundMapProvince");
          // resultList[index]['Province'] = foundMapProvince['name_th'];
          resultList[index]['Province'] = foundMapProvince!['name_th'];
        } else {
          print(
              "ไม่พบ Map ที่มี id เท่ากับ ${selected[index!]['province_id']}");
        }
        //================= find Amphor =====================================
        Map<String, dynamic>? foundMapAmphor;
        for (List<dynamic> innerList in amphures ?? []) {
          for (Map<String, dynamic> map
              in innerList.cast<Map<String, dynamic>>()) {
            if (map["id"] == selected[index]['amphure_id']) {
              foundMapAmphor = map;
              break;
            }
          }
          if (foundMapAmphor != null) {
            break;
          }
        }
        if (foundMapAmphor != null) {
          print(
              "พบ Map ที่มี id เท่ากับ ${selected[index]['amphure_id']}: $foundMapAmphor");
          // resultList[index]['District'] = foundMapAmphor['name_th'];
          resultList[index]['District'] = foundMapAmphor!['name_th'];
        } else {
          print("ไม่พบ Map ที่มี id เท่ากับ ${selected[index]['amphure_id']}");
          resultList[index]['District'] = '';
        }
        //================= find Tambon =====================================

        Map<String, dynamic>? foundMap;
        for (List<dynamic> innerList in tambons ?? []) {
          for (Map<String, dynamic> map
              in innerList.cast<Map<String, dynamic>>()) {
            if (map["id"] == selected[index]['tambon_id']) {
              foundMap = map;
              break;
            }
          }
          if (foundMap != null) {
            break;
          }
        }
        if (foundMap != null) {
          print(
              "พบ Map ที่มี id เท่ากับ ${selected[index]['tambon_id']}: $foundMap");
          resultList[index]['PostalCode'] = foundMap['zip_code'].toString();
          resultList[index]['SubDistrict'] = foundMap!['name_th'];
          // resultList[index]['SubDistrict'] = foundMap['name_th'];

          postalCodeController![index].text = foundMap['zip_code'].toString();
        } else {
          print("ไม่พบ Map ที่มี id เท่ากับ ${selected[index]['tambon_id']}");

          postalCodeController![index].text = '';
          resultList[index]['PostalCode'] = '';
          resultList[index]['SubDistrict'] = '';
        }

        refreshAddressForDropdown(setState, index);

        toSetState();
      }

      return Row(
        children: [
          Expanded(
            child: Container(
              height: 55.0,
              decoration: BoxDecoration(
                border: Border.all(
                    color: FlutterFlowTheme.of(context).alternate, width: 2),
                borderRadius: BorderRadius.circular(8.0),
              ),
              child: Container(
                // color: Colors.red,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                child: DropdownButton<String>(
                  isExpanded: true,
                  // dropdownColor: Colors.blue,

                  icon: Icon(
                    Icons.arrow_left_outlined,
                    color: FlutterFlowTheme.of(context).secondaryText,
                    size: 24.0,
                  ),
                  hint: Text(
                    label == 'Province: '
                        ? 'จังหวัด'
                        : label == 'District: '
                            ? 'อำเภอ'
                            : 'ตำบล',
                    style: FlutterFlowTheme.of(context).bodyMedium,
                  ),
                  underline: Container(),
                  elevation: 2,
                  value: selected[index!][id]?.toString(),
                  onChanged: onChangeHandle,
                  items: [
                    DropdownMenuItem(
                      value: '',
                      child: Text(
                        label == 'Province: '
                            ? 'จังหวัด'
                            : label == 'District: '
                                ? 'อำเภอ'
                                : 'ตำบล',
                        style: FlutterFlowTheme.of(context).bodyMedium,
                      ),
                    ),
                    for (var item in list!)
                      DropdownMenuItem(
                        value: item['id'].toString(),
                        child: Text(
                          '${item['name_th']} - ${item['name_en']}',
                          style: FlutterFlowTheme.of(context).bodyMedium,
                        ),
                      ),
                  ],
                ),
              ),
            ),
          ),
        ],
      );
    });
  }

  trySummit(bool checkButtonSuccess) async {
    try {
      final isValid = _formKey.currentState!.validate();
      FocusScope.of(context).unfocus();

      if (isValid) {
        _formKey.currentState!.save();
      }
      if (mounted) {
        setState(() {
          isLoading = true;
        });
      }

      Uuid uuid = Uuid();

      String docID = uuid.v4();

      String signatureUrl = '';
      if (signConfirm == false) {
      } else {
        signatureUrl = await saveSignatureToFirestore(base64ImgSign, docID);
      }

      List<String> listUrl = [];

      for (int i = 0; i < image!.length; i++) {
        String fileName =
            '${DateTime.now().day}${DateTime.now().month}${DateTime.now().year}${DateTime.now().minute}${DateTime.now().second}${DateTime.now().millisecond}.jpg';
        if (image![i].path.isEmpty) {
          listUrl.add(imageUrl[i]);
        } else {
          ref = FirebaseStorage.instance
              .ref()
              .child('images')
              .child('Users')
              .child(userController.userData!['UserID'])
              .child('Customer')
              .child(docID)
              .child(DateTime.now().month.toString())
              .child('${DateTime.now().day}/$fileName');

          await ref!.putFile(image![i]).whenComplete(
            () async {
              await ref!.getDownloadURL().then(
                (value) {
                  listUrl.add(value);
                },
              );
            },
          );
        }
      }
      //======================= รูปเอกสาร =======================================
      List<List<String>> listUrlList2 = List.generate(5, (_) => []);

      for (int i = 0; i < imageUrlFromFirestoreList2!.length; i++) {
        for (int j = 0; j < imageUrlFromFirestoreList2![i]!.length; j++) {
          String fileName2 =
              '${DateTime.now().day}${DateTime.now().month}${DateTime.now().year}${DateTime.now().minute}${DateTime.now().second}${DateTime.now().millisecond}.jpg';
          if (imageUrlFromFirestoreList2![i]![j].isNotEmpty ||
              imageUrlFromFirestoreList2![i]![j] != '') {
            listUrlList2[i].add(imageUrlFromFirestoreList2![i]![j]);
          } else {
            ref3 = FirebaseStorage.instance
                .ref()
                .child('images')
                .child('Users')
                .child(userController.userData!['UserID'])
                .child('Customer')
                .child(docID)
                .child(DateTime.now().month.toString())
                .child('${DateTime.now().day}/$fileName2');

            await ref3!.putFile(imageList2![i]![j]!).whenComplete(
              () async {
                await ref3!.getDownloadURL().then(
                  (value2) {
                    listUrlList2[i].add(value2);
                  },
                );
              },
            );
          }
        }
      }

      List<Map<String, List<String>>> listOfMaps = listUrlList2.map((list) {
        return {
          'key': list.map((value) => value).toList(),
        };
      }).toList();
      //========================================================================
      //======================= ไฟล์เอกสาร =======================================
      List<List<String>> fileUrl = List.generate(5, (_) => []);

      for (int i = 0; i < fileUrlFromFirestoreList!.length; i++) {
        for (int j = 0; j < fileUrlFromFirestoreList![i]!.length; j++) {
          String fileName2 =
              '${DateTime.now().day}${DateTime.now().month}${DateTime.now().year}${DateTime.now().minute}${DateTime.now().second}${DateTime.now().millisecond}$finalFileResultString.pdf';
          if (fileUrlFromFirestoreList![i]![j].isNotEmpty ||
              fileUrlFromFirestoreList![i]![j] != '') {
            fileUrl[i].add(fileUrlFromFirestoreList![i]![j]);
          } else {
            ref4 = FirebaseStorage.instance
                .ref()
                .child('files')
                .child('Users')
                .child(userController.userData!['UserID'])
                .child('Customer')
                .child(docID)
                .child(DateTime.now().month.toString())
                .child('${DateTime.now().day}/$fileName2');

            await ref4!
                .putFile(File(finalFileResultString![i]![j]))
                .whenComplete(
              () async {
                await ref4!.getDownloadURL().then(
                  (fileUrlValue) {
                    fileUrl[i].add(fileUrlValue);
                  },
                );
              },
            );
          }
        }
      }

      List<Map<String, List<String>>> listFileOfMaps = fileUrl.map((file) {
        return {
          'key': file.map((value) => value).toList(),
        };
      }).toList();

      for (int i = 0; i < sendAndBillList!.length; i++) {
        resultListSendAndBill[i]['ชื่อออกบิล'] = sendAndBillList![i].text;
      }

      for (int i = 0; i < resultList.length; i++) {
        if (resultList[i]['Image'] == '') {
          resultList[i]['Image'] = '';
        } else {
          int indexImage = int.parse(resultList[i]['Image']);
          resultList[i]['Image'] = listUrl[indexImage - 1];
        }
      }

      for (int i = 0; i < productType!.length; i++) {
        productTypeFinal!.add(productType![i].text);
      }

      await FirebaseFirestore.instance
          .collection('Customer')
          .doc(widget.entryMap!['value']['CustomerID'])
          // .doc(docID)

          .update({
        'CustomerID': widget.entryMap!['value']['CustomerID'],
        // 'CustomerID': docID,
        'PhoneID': _model.textController6.text,
        'CustomerDateCreate': widget.entryMap!['value']['CustomerDateCreate'],
        'CustomerDateUpdate': DateTime.now(),
        'ประเภทลูกค้า': widget.type == 'Company' ? 'Company' : 'Personal',
        'คำนำหน้า': _model.radioButtonValueController == null
            ? ''
            : _model.radioButtonValueController!.value,
        'vat': _model.radioButtonValueControllerVat == null
            ? ''
            : _model.radioButtonValueControllerVat!.value,

        'ชื่อนามสกุล': _model.textController1.text,
        'วันเกิด': _model.textController2.text,
        'เดือนเกิด': _model.textController3.text,
        'ปีเกิด': _model.textController4.text,
        'เลขบัตรประชาชน': _model.textController5.text,
        'PhoneNumber': _model.textController6.text,
        'วันเริ่มจัดส่ง': _model.textController7.text,
        'เดือนเริ่มจัดส่ง': _model.textController8.text,
        'ปีเริ่มจัดส่ง': _model.textController9.text,
        'ชื่อร้านค้า': _model.textController10.text,
        'เป้าหมายยอดขาย': _model.textController11.text,
        'CategoryProductNow': productTypeFinal,
        'ระยะเวลาการดำเนินการ': _model.textController12.text,

        // 'วันสิ้นสุด': _model.textController12.text,
        // 'เดือนสิ้นสุด': _model.textController13.text,
        // 'ปีสิ้นสุด': _model.textController14.text,
        'CategoryProductOrder': dropDownValues2,
        'ListCustomerAddress': resultList,
        'ตารางราคา': _model.dropDownValue6,
        // 'ที่อยู่จัดส่ง': _model.dropDownValue7,
        // 'ที่อยู่ออกบิล': _model.dropDownValue8,
        // 'ที่อยู่อื่น': _model.dropDownValue9,

        'ลิสต์จัดส่งและออกบิล': resultListSendAndBill,
        'ระยะเวลาชำระหนี้': _model.textController191.text,
        'วงเงินเครดิต': _model.textController19.text,
        'ส่วนลดบิล': _model.textController20.text,
        'ประเภทชำระ': _model.dropDownValue11,
        'เงื่อนไขชำระ': _model.dropDownValue12,
        'บัญชีธนาคารของบริษัท': _model.dropDownValue13,
        'แผนก': _model.dropDownValue14,
        'รหัสบัญชี': _model.dropDownValue15,
        'รหัสพนักงานขาย': widget.entryMap!['value']['รหัสพนักงานขาย'],
        'ชื่อพนักงานขาย': widget.entryMap!['value']['ชื่อพนักงานขาย'],
        'รหัสกลุ่มลูกค้า': _model.dropDownValue18,
        'รหัสกลุ่มลูกค้า2': _model.dropDownValue182 ?? '',
        'รหัสกลุ่มลูกค้า3': _model.dropDownValue183 ?? '',
        'รหัสกลุ่มลูกค้า4': _model.dropDownValue184 ?? '',
        'รหัสกลุ่มลูกค้า5': _model.dropDownValue185 ?? '',
        'รหัสบัญชี2': _model.dropDownValue19,
        'รูปร้านค้า': listUrl,
        // 'รูปเอกสาร': listUrl2,
        'รูปเอกสาร': listOfMaps,
        'ไฟล์เอกสาร': listFileOfMaps,
        'ลายเซ็น': widget.entryMap!['value']['ลายเซ็น'] != ''
            ? widget.entryMap!['value']['ลายเซ็น']
            : signatureUrl,
        'บันทึกพร้อมตรวจ': checkButtonSuccess,
        'สถานะ': widget.entryMap!['value']['สถานะ'],
        'รอการอนุมัติ': widget.entryMap!['value']['สถานะ'] == true
            ? false
            : widget.entryMap!['value']['สถานะ'] == false &&
                    checkButtonSuccess == false
                ? widget.entryMap!['value']['รอการอนุมัติ'] == true
                    ? true
                    : widget.entryMap!['value']['รอการอนุมัติ'] == false &&
                            checkButtonSuccess == false
                        ? true
                        : false
                : !checkButtonSuccess,
        'ขั้นตอนอนุมัติ': widget.entryMap!['value']['ขั้นตอนอนุมัติ'],
        'ชื่อบริษัท': _model.textController1Company.text,
        'วันจัดตั้ง': _model.textController2Company.text,
        'เดือนจัดตั้ง': _model.textController3Company.text,
        'ปีจัดตั้ง': _model.textController4Company.text,
        'เลขประจำตัวผู้เสียภาษี': _model.textController41Company.text,
        'ทุนจดทะเบียน': _model.textController5Company.text,

        'UserId': widget.entryMap!['value']['UserId'],
      }).then((value) {
        if (mounted) {
          setState(() {
            isLoading = false;
          });
        }
        Navigator.pop(context);
        widget.entryMap!['value']['สถานะ'] == true
            ? null
            : widget.entryMap!['value']['สถานะ'] == false &&
                    widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == false
                ? null
                : Navigator.pop(context);

        print('==================== set1 ============================');
      });
    } catch (e) {
      print(e);
    }
  }

  Future<String> saveSignatureToFirestore(
      String base64String, String docID) async {
    // Decode base64 string to bytes
    Uint8List bytes = base64Decode(base64String);

    // Upload image to Firebase Storage
    String fileName = 'signature_${DateTime.now().millisecondsSinceEpoch}.jpg';

    // String customerPhone = widget.data!['CustomerPhone'];
    // String cleanedPhone = customerPhone.replaceAll('-', '');
    String cleanedPhone = userController.userData!['Phone'];
    Reference storageReference = FirebaseStorage.instance
        .ref()
        .child('images')
        .child('Users')
        .child(userController.userData!['UserID'])
        .child('CustomerSignatures')
        .child(docID)
        .child('signatures/$fileName');
    UploadTask uploadTask = storageReference.putData(bytes);
    await uploadTask.whenComplete(() => null);

    // Get the URL of the uploaded image
    String downloadURL = await storageReference.getDownloadURL();

    return downloadURL;

    // // Save the downloadURL to Firestore

    // // DocumentSnapshot documentSnapshot = await FirebaseFirestore.instance
    // //     .collection('1000')
    // //     .doc('Company')
    // //     .collection('User')
    // //     .doc(userController.userData!['UserID'])
    // //     .collection('Employee')
    // //     .doc(userController.userData!['UserID'])
    // //     .get();

    // DocumentSnapshot documentSnapshot = await FirebaseFirestore.instance
    //     .collection('Customer')
    //     .doc(userController.userData!['UserID'])
    //     .get();
    // Map<String, dynamic> userMap =
    //     documentSnapshot.data() as Map<String, dynamic>;

    // List<dynamic> data = userMap['EmployeeAppointment'];

    // // int index = data.indexWhere((item) =>
    // //     item['CustomerPhone'] == widget.data!['CustomerPhone'] &&
    // //     item['Number'] == widget.data!['Number']);

    // int index = 0;

    // if (index != -1) {
    //   data[index]['CustomerPDPAImg'] = downloadURL;
    //   data[index]['CustomerPdpaConfirm'] = true;
    // } else {
    // }
    // await FirebaseFirestore.instance
    //     .collection('1000')
    //     .doc('Company')
    //     .collection('User')
    //     .doc(userController.userData!['UserID'])
    //     .collection('Employee')
    //     .doc(userController.userData!['UserID'])
    //     .update(
    //   {'EmployeeAppointment': data},
    // );

    // showImageDialog(context, downloadURL);
  }

  void refreshAddressForDropdown(StateSetter setStateIN, index) {
    List<int> dropDownControllersBillIndex = [];

    List<int> dropDownControllersSendIndex = [];

    for (int i = 0; i < dropDownControllersBill.length; i++) {
      int index = addressAllForDropdown
          .indexOf(dropDownControllersBill[i].value!.trimLeft().trimRight());
      if (index != -1) {
        dropDownControllersBillIndex.add(index);
      } else {
        print('Index not found');
      }
    }

    for (int i = 0; i < dropDownControllersSend.length; i++) {
      int index = addressAllForDropdown
          .indexOf(dropDownControllersSend[i].value!.trimLeft().trimRight());
      if (index != -1) {
        print('Index found: $index');
        dropDownControllersSendIndex.add(index);
      } else {
        print('Index not found');
      }
    }

    return setStateIN(() {
      addressAllForDropdown.clear();
      //====================================================================
      List<Map<String, dynamic>> addressThai = [];

      for (int i = 0; i < resultList.length; i++) {
        List<Map<String, dynamic>> mapProvincesList =
            provinces!.cast<Map<String, dynamic>>();

        List<Map<String, dynamic>> mapList =
            amphures![i].cast<Map<String, dynamic>>();
        List<Map<String, dynamic>> tambonList =
            tambons![i].cast<Map<String, dynamic>>();
        String? provincesName;
        String? amphorName;
        String? tambonName;

        //====================================================================
        if (resultList[i]['Province'] == '' ||
            resultList[i]['Province'] == null) {
          provincesName = '';
        } else {
          Map<String, dynamic> resultProvince = mapProvincesList.firstWhere(
              (element) => element['id'] == resultList[i]['Province'],
              orElse: () => {});

          provincesName = resultProvince['name_th'] ?? '';
        }
        //====================================================================
        if (resultList[i]['District'] == '' ||
            resultList[i]['District'] == null) {
          amphorName = '';
        } else {
          Map<String, dynamic> resultAmphure = mapList.firstWhere(
              (element) => element['id'] == resultList[i]['District'],
              orElse: () => {});

          amphorName = resultAmphure['name_th'] ?? '';
        }

        //====================================================================
        if (resultList[i]['SubDistrict'] == '' ||
            resultList[i]['SubDistrict'] == null) {
          tambonName = '';
        } else {
          Map<String, dynamic> resultTambon = tambonList.firstWhere(
              (element) => element['id'] == resultList[i]['SubDistrict'],
              orElse: () => {});
          tambonName = resultTambon['name_th'] ?? '';
        }
        //====================================================================
        addressThai.add({
          'province_name':
              provincesName! == '' ? provincesName : 'จ.' + provincesName,
          'amphure_name': amphorName! == '' ? amphorName : 'อ.' + amphorName,
          'tambon_name': tambonName! == '' ? tambonName : 'ต.' + tambonName,
        });

        String texttt =
            '${resultList[i]['รหัสสาขา']} ${resultList[i]['ชื่อสาขา']} ${resultList[i]['HouseNumber']} ${resultList[i]['VillageName']} ${resultList[i]['Road']} ${resultList[i]['SubDistrict']} ${resultList[i]['District']} ${resultList[i]['Province']} ${resultList[i]['PostalCode']} ${resultList[i]['ผู้ติดต่อ']} ${resultList[i]['ตำแหน่ง']} ${resultList[i]['โทรศัพท์']}';

        String resultString =
            texttt.replaceFirst('${resultList[i]['ID']}', '').trim();

        addressAllForDropdown.add(resultString);

        String texttt2 =
            '${resultList[i]['รหัสสาขา']} ${resultList[i]['ชื่อสาขา']} ${resultList[i]['HouseNumber']} ${resultList[i]['VillageName']} ${resultList[i]['Road']} ${resultList[i]['Province']} ${resultList[i]['District']} ${resultList[i]['SubDistrict']} ${resultList[i]['PostalCode']} ${resultList[i]['ผู้ติดต่อ']} ${resultList[i]['ตำแหน่ง']} ${resultList[i]['โทรศัพท์']}';
      }

      for (int i = 0; i < dropDownControllersBillIndex.length; i++) {
        dropDownControllersBill[i].reset();
        dropDownControllersBill[i].value =
            addressAllForDropdown[dropDownControllersBillIndex[i]];
      }

      for (int i = 0; i < dropDownControllersSendIndex.length; i++) {
        dropDownControllersSend[i].reset();
        dropDownControllersSend[i].value =
            addressAllForDropdown[dropDownControllersSendIndex[i]];
      }

      setState(() {});
    });
  }

  @override
  Widget build(BuildContext context) {
    print('==============================');
    print('This is Form Edit General User ');
    print('==============================');
    print(widget.entryMap!['value']['CustomerID']);
    userData = userController.userData;

    String getThaiMonthAbbreviation(int month) {
      switch (month) {
        case 1:
          return 'ม.ค.';
        case 2:
          return 'ก.พ.';
        case 3:
          return 'มี.ค.';
        case 4:
          return 'เม.ย.';
        case 5:
          return 'พ.ค.';
        case 6:
          return 'มิ.ย.';
        case 7:
          return 'ก.ค.';
        case 8:
          return 'ส.ค.';
        case 9:
          return 'ก.ย.';
        case 10:
          return 'ต.ค.';
        case 11:
          return 'พ.ย.';
        case 12:
          return 'ธ.ค.';
        default:
          return '';
      }
    }

    String formatThaiDate(Timestamp timestamp) {
      DateTime dateTime = DateTime.fromMillisecondsSinceEpoch(
        timestamp.seconds * 1000 + (timestamp.nanoseconds / 1000000).round(),
      );

      int thaiYear = dateTime.year + 543;
      String thaiMonthAbbreviation = getThaiMonthAbbreviation(dateTime.month);

      return '${dateTime.day} $thaiMonthAbbreviation $thaiYear';
    }

    return isLoading
        ? Container(
            child: Center(
              child: CircularLoading(success: !isLoading),
            ),
          )
        : checkStatusToEdit
            ? Column(
                children: [
                  SingleChildScrollView(
                    controller: _scrollController,
                    child: Form(
                      key: _formKey,
                      child: SizedBox(
                        height: widget.entryMap!['value']['สถานะ'] == false &&
                                widget.entryMap!['value']['บันทึกพร้อมตรวจ'] ==
                                    false &&
                                widget.entryMap!['value']['รอการอนุมัติ'] ==
                                    false &&
                                checkStatusToButtonEdit
                            ? 950
                            : 1000,
                        child: SingleChildScrollView(
                          // controller: _scrollController,
                          child: Padding(
                            padding: const EdgeInsetsDirectional.fromSTEB(
                                0.0, 0.0, 0.0, 5.0),
                            child: Column(
                              mainAxisSize: MainAxisSize.max,
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                // GestureDetector(
                                //   onLongPress: () {
                                //     Clipboard.setData(ClipboardData(
                                //         text: widget.entryMap.toString()));
                                //     ScaffoldMessenger.of(context).showSnackBar(
                                //       SnackBar(
                                //         content: Text('Copied to clipboard'),
                                //       ),
                                //     );
                                //   },
                                //   child: Text(
                                //     widget.entryMap!.toString(),
                                //     style: TextStyle(fontSize: 18.0),
                                //   ),
                                // ),

                                //========================  Approve Comment =====================================
                                const SizedBox(
                                  height: 5,
                                ),
                                approveComment(context),
                                //========================  ocr =====================================
                                widget.type == 'Company'
                                    ? const SizedBox(
                                        height: 5,
                                      )
                                    : ocrEdit(context),
                                //======================= checkbox คำนำหน้า ======================================
                                widget.type == 'Company'
                                    ? const SizedBox()
                                    : typeNameEdit(context),
                                //=========================== ชื่อ นามสกุล /ชื่อบริษัn==================================
                                widget.type == 'Company'
                                    ? nameCompany(context)
                                    : nameCustomerEdit(context),

                                //======================= checkbox vat ======================================
                                widget.type == 'Company'
                                    ? vatCompanyEdit(context)
                                    : SizedBox(),

                                //======================= วันเดือนปีเกิด/วันเดือนปีที่จัดจัดตั้ง ======================================
                                widget.type == 'Company'
                                    ? birthdayCompanyEdit()
                                    : birthdayCustomerEdit(),

                                //======================= เลขประจำตัวผู้เสียภาษี ======================================
                                widget.type == 'Company'
                                    ? idCompanyEdit(context)
                                    : const SizedBox(),
                                //======================= ทุนจดทะเบียน / เลขที่บัตรประชาชน   ======================================
                                widget.type == 'Company'
                                    ? companyFundEdit(context)
                                    : idCustomerEdit(),
                                //===================== เบอร์โทรศัพท์ ========================================
                                phoneEdit(context),
                                //===================== วัน / เดือน / ปี ที่เริ่มจัดส่ง  ========================================
                                dateToSendEdit(),
                                //=========================== ชื่อร้าน/แผงในตลาด ==================================
                                shopNameEdit(
                                    context), //=============================================================
                                //=========================== เป้าการขาย ==================================
                                goalToSellEdit(context),
                                //============================= dropdown ประเภทสินค้าที่ขายในปัจจุบัน ================================
                                groupProductEdit(),

                                //======================== ระยะเวลาการดำเนินการ=====================================
                                dateToWorkEdit(context),

                                //======================== dropdown กลุ่มสินค้าท่สั่งซืื้อ =====================================
                                groupProdutcoBuyEdit(),

                                //=========================== หัวข้อ ที่อยู่ในการจัดส่ง ==================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 5.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        'ที่อยู่ในการจัดส่ง (ระบุได้มากกว่า 1 สถานที่) โดยเลือก จังหวัด ,อำเภอ , ตำบล , รหัสไปรษณีย์',
                                        style: FlutterFlowTheme.of(context)
                                            .bodyMedium,
                                      ),
                                    ],
                                  ),
                                ),
                                //=========================== ลิสต์ที่อยู่ในการจัดส่ง ==================================
                                addressShopEdit(),

                                //==================== ตารางราคา API =========================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' ตารางราคา (MFOOD API) (เพื่อใช้ผูกกับที่อยู่ในการจัดส่ง)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                priceTableApiEdit(),
                                //========================== หัวข้อ แผนที่ ===================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 5.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        'พิกัด GPS (Google Map Pin location)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodyMedium,
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            5.0, 0.0, 0.0, 0.0),
                                        child: Icon(
                                          FFIcons.kstoreMarker,
                                          color: FlutterFlowTheme.of(context)
                                              .secondaryText,
                                          size: 24.0,
                                        ),
                                      ),
                                    ],
                                  ),
                                ),

                                //======================= แผนที่ ======================================
                                mapEdit(context),
                                //========================= หัวข้อ รูปภาพร้านค้า ====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      0.0, 5.0, 0.0, 5.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            8.0, 5.0, 0.0, 5.0),
                                        child: Text(
                                          'รูปภาพร้านค้า อัพโหลดได้หลายภาพ (ต้องมีอย่างน้อย 1 รูป)',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium,
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                                //==========================  รูปถ่ายร้านค้า  ===================================
                                imageFile.length > 3
                                    ? imageMoreThreeEdit(context)
                                    : imageLessThreeEdit(context),
                                //================== หัวข้อ กำหนดที่อยูในการจัดส่ง ===========================================
                                const SizedBox(
                                  height: 10,
                                ),
                                addressToBillAndSendChooseEdit(),
                                //======================= เงื่อนไขการชำระเงิน ======================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' เงื่อนไขการชำระเงิน (Dropdown จาก API)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                payChooseEdit(),
                                //======================== ระยะเวลาชำระหนี้ =====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' ระยะเวลาชำระหนี้ (Credit terms)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                payOptionEdit(),
                                //=========================== วงเงินเครดิต ==================================
                                creditPayEdit(context),
                                //=========================  สวนลดท้ายบิล ====================================
                                billDiscountEdit(context),
                                //=========================  ประเภทการจ่ายเงิน ====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' ประเภทการจ่ายเงิน (Dropdown จาก API)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                payOptionEditDropdown(),

                                //====================== เลือกบัญชีธนาคารของบริษัท =======================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' เลือกบัญชีธนาคารของบริษัท (MFOOD API)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                bookBankEdit(),
                                //========================= แผนก ====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' แผนก (MFOOD API)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                departmentEdit(),
                                //======================== รหัสบัญชี =====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' รหัสบัญชี (MFOOD API)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                idAccoutingEdit(),
                                //========================  รหัสพนักงาน =====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' รหัสพนักงานขาย (อ้างอิงจากรหัสพนักงานจากบัญชีผู้ใช้งานที่ Login เข้าระบบ)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                idCustmerEdit(context),
                                //========================  ชื่อ-สกุล พนักงาน  =====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' ชื่อ-สกุล พนักงานขาย (อ้างอิงจากชื่อผู้ใช้จากบัญชีผู้ใช้งานที่ Login เข้าระบบ)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),

                                nameEmployeeEdit(context),
                                //======================== รหัสกลุ่มลูกค้า =====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' รหัสกลุ่มลูกค้า กลุ่ม 1 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                idCustmerGroupOneEdit(),
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' รหัสกลุ่มลูกค้า กลุ่ม 2 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                idCustomerGroupTwoEdit(),
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' รหัสกลุ่มลูกค้า กลุ่ม 3 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                idCustomerGroupThreeEdit(),
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' รหัสกลุ่มลูกค้า กลุ่ม 4 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                idCustomerGroupFourEdit(),
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' รหัสกลุ่มลูกค้า กลุ่ม 5 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                idCustomerGroupFiveEdit(),

                                //======================  รูปสำหรับเอกสาร =======================================
                                paperAddEdit(context),

                                //========================== ลายเซ็น  ===================================
                                imageSignFirestore.isEmpty
                                    ? signButton()
                                    : signNetwork(context),
                                //=============================================================
                              ],
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  const SizedBox(
                    height: 10,
                  ),
                  //========================== เซฟไว้ทำทีหลัง  ===================================
                  checkStatusToButtonEdit
                      ? toEditButton(context)
                      : saveButton(context),

                  //========================== เฉพาะหน้า ไม่ผ่านการอนุมัติ  ===================================
                  widget.entryMap!['value']['สถานะ'] == false &&
                          widget.entryMap!['value']['บันทึกพร้อมตรวจ'] ==
                              false &&
                          widget.entryMap!['value']['รอการอนุมัติ'] == false &&
                          checkStatusToButtonEdit
                      ? saveButtonReject(context)
                      : SizedBox(),
                  //========================== เซฟแล้วดำเนินการต่อไป  ===================================
                  approveButton(context),
                ],
              )
            : formStatusFalseView(formatThaiDate, context);
  }

  Padding approveButton(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 0.0),
      child: FFButtonWidget(
        onPressed: () {
          if (_model.dropDownValue18 == null) {
            Fluttertoast.showToast(
              msg: "กรุณาเลือกรหัสกลุ่มลูกค้า ที่ 1 ด้วยค่ะ",
              toastLength: Toast.LENGTH_SHORT,
              gravity: ToastGravity.TOP,
              timeInSecForIosWeb: 4,
              backgroundColor: Colors.red.shade900,
              textColor: Colors.white,
              fontSize: 16.0,
            );

            return;
          }
          if (_model.dropDownValue18!.isEmpty || _model.dropDownValue18 == '') {
            Fluttertoast.showToast(
              msg: "กรุณาเลือกกลุ่มลูกค้า ที่ 1 ด้วยค่ะ",
              toastLength: Toast.LENGTH_SHORT,
              gravity: ToastGravity.TOP,
              timeInSecForIosWeb: 4,
              backgroundColor: Colors.red.shade900,
              textColor: Colors.white,
              fontSize: 16.0,
            );

            return;
          }
          print('Button pressed ... Confirm');
          Set<String> uniqueImages = Set<String>();
          for (int i = 0; i < resultList.length; i++) {
            if (resultList[i]['Image'].isEmpty ||
                resultList[i]['Image'] == '') {
              Fluttertoast.showToast(
                msg:
                    "คุณมีร้านค้า ${resultList.length} สถานที่ กรุณาอ้างอิงรูปภาพในทุกๆ สถานที่\nอย่างน้อย 1 รูปภาพค่ะ",
                toastLength: Toast.LENGTH_SHORT,
                gravity: ToastGravity.TOP,
                timeInSecForIosWeb: 4,
                backgroundColor: Colors.red.shade900,
                textColor: Colors.white,
                fontSize: 16.0,
              );
              setState(
                () => checkSummit = true,
              );
              return;
            }
            if (!uniqueImages.add(resultList[i]['Image'])) {
              // ถ้าเจอว่าซ้ำ
              Fluttertoast.showToast(
                msg: "รูปภาพอ้างอิงร้านค้า ต้องไม่ซ้ำกันค่ะ",
                toastLength: Toast.LENGTH_SHORT,
                gravity: ToastGravity.TOP,
                timeInSecForIosWeb: 4,
                backgroundColor: Colors.red.shade900,
                textColor: Colors.white,
                fontSize: 16.0,
              );
              setState(() => checkSummit = true);
              return;
            }
          }

          if (widget.type == 'Company') {
            if (_model.radioButtonValueControllerVat!.value == null ||
                _model.radioButtonValueControllerVat!.value == '') {
              Fluttertoast.showToast(
                msg: "กรุณาเลือกว่า บริษัทของคุณ มี vat หรือไม่ค่ะ",
                toastLength: Toast.LENGTH_SHORT,
                gravity: ToastGravity.TOP,
                timeInSecForIosWeb: 4,
                backgroundColor: Colors.red.shade900,
                textColor: Colors.white,
                fontSize: 16.0,
              );
              // setState(
              //   () => checkSummit = true,
              // );
              return;
            }
          }

          if (widget.type == 'Company') {
            if (_model.radioButtonValueControllerVat!.value == 'มี') {
              // ถ้าเอกสารนิติบุคคลมีvat [true,true,true,true,false]
              for (int i = 0; i < 4; i++) {
                if (i == 0) {
                  if (imageUint8ListList2![0]!.isEmpty &&
                      finalFileResultString![0]!.isEmpty &&
                      fileUrlFromFirestoreList![0]!.isEmpty &&
                      imageUrlFromFirestoreList2![0]!.isEmpty) {
                    Fluttertoast.showToast(
                      msg: "คุณยังไม่แนบไฟล์สำเนาบัตรประชาชนของกรรมการค่ะ",
                      toastLength: Toast.LENGTH_SHORT,
                      gravity: ToastGravity.TOP,
                      timeInSecForIosWeb: 4,
                      backgroundColor: Colors.red.shade900,
                      textColor: Colors.white,
                      fontSize: 16.0,
                    );
                    // setState(
                    //   () => checkSummit = true,
                    // );
                    return;
                  }
                } else if (i == 1) {
                  if (imageUint8ListList2![1]!.isEmpty &&
                      finalFileResultString![1]!.isEmpty &&
                      fileUrlFromFirestoreList![1]!.isEmpty &&
                      imageUrlFromFirestoreList2![1]!.isEmpty) {
                    Fluttertoast.showToast(
                      msg: "คุณยังไม่แนบไฟล์หนังสือรับรองบริษัทค่ะ",
                      toastLength: Toast.LENGTH_SHORT,
                      gravity: ToastGravity.TOP,
                      timeInSecForIosWeb: 4,
                      backgroundColor: Colors.red.shade900,
                      textColor: Colors.white,
                      fontSize: 16.0,
                    );
                    // setState(
                    //   () => checkSummit = true,
                    // );
                    return;
                  }
                } else if (i == 2) {
                  if (imageUint8ListList2![2]!.isEmpty &&
                      finalFileResultString![2]!.isEmpty &&
                      fileUrlFromFirestoreList![2]!.isEmpty &&
                      imageUrlFromFirestoreList2![2]!.isEmpty) {
                    Fluttertoast.showToast(
                      msg: "คุณยังไม่แนบไฟล์ ภพ.20 ค่ะ",
                      toastLength: Toast.LENGTH_SHORT,
                      gravity: ToastGravity.TOP,
                      timeInSecForIosWeb: 4,
                      backgroundColor: Colors.red.shade900,
                      textColor: Colors.white,
                      fontSize: 16.0,
                    );
                    // setState(
                    //   () => checkSummit = true,
                    // );
                    return;
                  }
                } else if (i == 3) {
                  if (imageUint8ListList2![3]!.isEmpty &&
                      finalFileResultString![3]!.isEmpty &&
                      fileUrlFromFirestoreList![3]!.isEmpty &&
                      imageUrlFromFirestoreList2![3]!.isEmpty) {
                    Fluttertoast.showToast(
                      msg: "คุณยังไม่แนบไฟล์แผนที่ในการจัดส่งสินค้าค่ะ",
                      toastLength: Toast.LENGTH_SHORT,
                      gravity: ToastGravity.TOP,
                      timeInSecForIosWeb: 4,
                      backgroundColor: Colors.red.shade900,
                      textColor: Colors.white,
                      fontSize: 16.0,
                    );
                    // setState(
                    //   () => checkSummit = true,
                    // );
                    return;
                  }
                } else {}
              }
            } else {
              // ถ้าเอกสารนิติบุคคลไม่มีvat [true,true,false,true,false]
              for (int i = 0; i < 4; i++) {
                if (i == 0) {
                  if (imageUint8ListList2![0]!.isEmpty &&
                      finalFileResultString![0]!.isEmpty &&
                      fileUrlFromFirestoreList![0]!.isEmpty &&
                      imageUrlFromFirestoreList2![0]!.isEmpty) {
                    Fluttertoast.showToast(
                      msg: "คุณยังไม่แนบไฟล์สำเนาบัตรประชาชนของกรรมการค่ะ",
                      toastLength: Toast.LENGTH_SHORT,
                      gravity: ToastGravity.TOP,
                      timeInSecForIosWeb: 4,
                      backgroundColor: Colors.red.shade900,
                      textColor: Colors.white,
                      fontSize: 16.0,
                    );
                    // setState(
                    //   () => checkSummit = true,
                    // );
                    return;
                  }
                } else if (i == 1) {
                  if (imageUint8ListList2![1]!.isEmpty &&
                      finalFileResultString![1]!.isEmpty &&
                      fileUrlFromFirestoreList![1]!.isEmpty &&
                      imageUrlFromFirestoreList2![1]!.isEmpty) {
                    Fluttertoast.showToast(
                      msg: "คุณยังไม่แนบไฟล์หนังสือรับรองบริษัทค่ะ",
                      toastLength: Toast.LENGTH_SHORT,
                      gravity: ToastGravity.TOP,
                      timeInSecForIosWeb: 4,
                      backgroundColor: Colors.red.shade900,
                      textColor: Colors.white,
                      fontSize: 16.0,
                    );
                    // setState(
                    //   () => checkSummit = true,
                    // );
                    return;
                  }
                } else if (i == 3) {
                  if (imageUint8ListList2![3]!.isEmpty &&
                      finalFileResultString![3]!.isEmpty &&
                      fileUrlFromFirestoreList![3]!.isEmpty &&
                      imageUrlFromFirestoreList2![3]!.isEmpty) {
                    Fluttertoast.showToast(
                      msg: "คุณยังไม่แนบไฟล์แผนที่ในการจัดส่งสินค้าค่ะ",
                      toastLength: Toast.LENGTH_SHORT,
                      gravity: ToastGravity.TOP,
                      timeInSecForIosWeb: 4,
                      backgroundColor: Colors.red.shade900,
                      textColor: Colors.white,
                      fontSize: 16.0,
                    );
                    // setState(
                    //   () => checkSummit = true,
                    // );
                    return;
                  }
                } else {}
              }
            }
          } else {
            // ถ้าเอกสารบุคคลธรรมดา [true,false,true,false,false]
            for (int i = 0; i < 3; i++) {
              if (i == 0) {
                if (imageUint8ListList2![0]!.isEmpty &&
                    finalFileResultString![0]!.isEmpty &&
                    fileUrlFromFirestoreList![0]!.isEmpty &&
                    imageUrlFromFirestoreList2![0]!.isEmpty) {
                  Fluttertoast.showToast(
                    msg: "คุณยังไม่แนบไฟล์สำเนาบัตรประชาชนค่ะ",
                    toastLength: Toast.LENGTH_SHORT,
                    gravity: ToastGravity.TOP,
                    timeInSecForIosWeb: 4,
                    backgroundColor: Colors.red.shade900,
                    textColor: Colors.white,
                    fontSize: 16.0,
                  );
                  // setState(
                  //   () => checkSummit = true,
                  // );
                  return;
                }
              } else if (i == 2) {
                if (imageUint8ListList2![2]!.isEmpty &&
                    finalFileResultString![2]!.isEmpty &&
                    fileUrlFromFirestoreList![2]!.isEmpty &&
                    imageUrlFromFirestoreList2![2]!.isEmpty) {
                  Fluttertoast.showToast(
                    msg: "คุณยังไม่แนบไฟล์แผนที่ในการจัดส่งสินค้าค่ะ",
                    toastLength: Toast.LENGTH_SHORT,
                    gravity: ToastGravity.TOP,
                    timeInSecForIosWeb: 4,
                    backgroundColor: Colors.red.shade900,
                    textColor: Colors.white,
                    fontSize: 16.0,
                  );
                  // setState(
                  //   () => checkSummit = true,
                  // );
                  return;
                }
              } else {}
            }
          }
          trySummit(false);
        },
        text: 'เซฟแล้วดำเนินการต่อไป',
        options: FFButtonOptions(
          width: MediaQuery.sizeOf(context).width * 1.0,
          height: 40.0,
          padding: EdgeInsetsDirectional.fromSTEB(24.0, 0.0, 24.0, 0.0),
          iconPadding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
          color: FlutterFlowTheme.of(context).secondary,
          textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                fontFamily: 'Kanit',
                color: Colors.white,
              ),
          elevation: 3.0,
          borderSide: BorderSide(
            color: Colors.transparent,
            width: 1.0,
          ),
          borderRadius: BorderRadius.circular(8.0),
        ),
      ),
    );
  }

  StreamBuilder approveComment(BuildContext context) {
    String getThaiMonthAbbreviation(int month) {
      switch (month) {
        case 1:
          return 'ม.ค.';
        case 2:
          return 'ก.พ.';
        case 3:
          return 'มี.ค.';
        case 4:
          return 'เม.ย.';
        case 5:
          return 'พ.ค.';
        case 6:
          return 'มิ.ย.';
        case 7:
          return 'ก.ค.';
        case 8:
          return 'ส.ค.';
        case 9:
          return 'ก.ย.';
        case 10:
          return 'ต.ค.';
        case 11:
          return 'พ.ย.';
        case 12:
          return 'ธ.ค.';
        default:
          return '';
      }
    }

    String formatThaiDate(Timestamp timestamp) {
      DateTime dateTime = DateTime.fromMillisecondsSinceEpoch(
        timestamp.seconds * 1000 + (timestamp.nanoseconds / 1000000).round(),
      );

      int thaiYear = dateTime.year + 543;
      String thaiMonthAbbreviation = getThaiMonthAbbreviation(dateTime.month);

      return '${dateTime.day} $thaiMonthAbbreviation $thaiYear';
    }

    return StreamBuilder(
        stream:
            FirebaseFirestore.instance.collection('ApproveComment').snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['CustomerID'] ==
                widget.entryMap!['value']['CustomerID']) {
              data['key${index}'] = docData;
            }
          }
          print('Approve Comment');
          print(data);
          List<MapEntry<String, dynamic>> entriesList = data.entries.toList();
          return entriesList.length == 0
              ? SizedBox()
              : Padding(
                  padding:
                      const EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 8.0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        'คอมเมนท์ผู้อนุมัติ',
                        style: FlutterFlowTheme.of(context).bodyMedium,
                      ),
                      Container(
                        padding: const EdgeInsetsDirectional.fromSTEB(
                            8.0, 8.0, 8.0, 0.0),
                        decoration: BoxDecoration(
                          border: Border.all(
                            width: 2,
                            color: FlutterFlowTheme.of(context).alternate,
                          ),
                          borderRadius: BorderRadius.circular(10.0),
                        ),
                        child: Column(
                          children: [
                            for (var entry in entriesList)
                              Padding(
                                padding: const EdgeInsetsDirectional.fromSTEB(
                                    8.0, 0.0, 8.0, 8.0),
                                child: Row(
                                  children: [
                                    Row(
                                      mainAxisSize: MainAxisSize.min,
                                      children: [
                                        CircleAvatar(
                                          child:
                                              Icon(Icons.person_pin_outlined),
                                          backgroundColor: Colors.blue.shade900,
                                        ),
                                      ],
                                    ),
                                    const SizedBox(
                                      width: 5,
                                    ),
                                    Expanded(
                                      child: Container(
                                        // color: Colors.red,
                                        child: Column(
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            Text(
                                              '${entry.value['PositionName']} วันที่ ${formatThaiDate(entry.value['DateCreate'])}',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium,
                                            ),
                                            Text(
                                              entry.value['Detail'],
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium,
                                            ),
                                            // TextFormField(
                                            //   readOnly: true,
                                            //   initialValue: entry.value['Detail'],
                                            //   // controller: _model.textController1Company,
                                            //   // focusNode: _model.textFieldFocusNode1Company,
                                            //   autofocus: false,
                                            //   obscureText: false,
                                            //   decoration: InputDecoration(
                                            //     labelText: entry.value['PositionName'],
                                            //     isDense: true,
                                            //     labelStyle:
                                            //         FlutterFlowTheme.of(context).labelMedium,
                                            //     hintText: entry.value['PositionName'],
                                            //     hintStyle:
                                            //         FlutterFlowTheme.of(context).labelMedium,
                                            //     enabledBorder: OutlineInputBorder(
                                            //       borderSide: BorderSide(
                                            //         color: FlutterFlowTheme.of(context)
                                            //             .alternate,
                                            //         width: 2.0,
                                            //       ),
                                            //       borderRadius: BorderRadius.circular(8.0),
                                            //     ),
                                            //     focusedBorder: OutlineInputBorder(
                                            //       borderSide: BorderSide(
                                            //         color:
                                            //             FlutterFlowTheme.of(context).primary,
                                            //         width: 2.0,
                                            //       ),
                                            //       borderRadius: BorderRadius.circular(8.0),
                                            //     ),
                                            //     errorBorder: OutlineInputBorder(
                                            //       borderSide: BorderSide(
                                            //         color: FlutterFlowTheme.of(context).error,
                                            //         width: 2.0,
                                            //       ),
                                            //       borderRadius: BorderRadius.circular(8.0),
                                            //     ),
                                            //     focusedErrorBorder: OutlineInputBorder(
                                            //       borderSide: BorderSide(
                                            //         color: FlutterFlowTheme.of(context).error,
                                            //         width: 2.0,
                                            //       ),
                                            //       borderRadius: BorderRadius.circular(8.0),
                                            //     ),
                                            //   ),
                                            //   style: FlutterFlowTheme.of(context).bodyMedium,
                                            //   textAlign: TextAlign.start,
                                            //   // validator: _model.textController1Validator.asValidator(context),
                                            // ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                          ],
                        ),
                      ),
                    ],
                  ),
                );
        });
  }

  Padding saveButtonReject(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: FFButtonWidget(
        onPressed: () {
          print('Button pressed ...');
          trySummit(true);
        },
        text: 'เซฟไว้ทำทีหลัง',
        options: FFButtonOptions(
          width: MediaQuery.sizeOf(context).width * 1.0,
          height: 40.0,
          padding: EdgeInsetsDirectional.fromSTEB(24.0, 0.0, 24.0, 0.0),
          iconPadding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
          color: FlutterFlowTheme.of(context).accent3,
          textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                fontFamily: 'Kanit',
                color: Colors.white,
              ),
          elevation: 3.0,
          borderSide: BorderSide(
            color: Colors.transparent,
            width: 1.0,
          ),
          borderRadius: BorderRadius.circular(8.0),
        ),
      ),
    );
  }

  Padding saveButton(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: FFButtonWidget(
        onPressed: () {
          print('Button pressed ...');

          trySummit(true);
        },
        text: 'เซฟไว้ทำทีหลัง',
        options: FFButtonOptions(
          width: MediaQuery.sizeOf(context).width * 1.0,
          height: 40.0,
          padding: EdgeInsetsDirectional.fromSTEB(24.0, 0.0, 24.0, 0.0),
          iconPadding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
          color: FlutterFlowTheme.of(context).tertiary,
          textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                fontFamily: 'Kanit',
                color: Colors.white,
              ),
          elevation: 3.0,
          borderSide: BorderSide(
            color: Colors.transparent,
            width: 1.0,
          ),
          borderRadius: BorderRadius.circular(8.0),
        ),
      ),
    );
  }

  Padding toEditButton(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: FFButtonWidget(
        onPressed: () {
          print('Button pressed ...');
          _scrollController.dispose();
          setState(() {
            _scrollController = ScrollController();
            checkStatusToEdit = true;
          });
          // trySummit(true);
        },
        text: 'แก้ไขข้อมูล',
        options: FFButtonOptions(
          width: MediaQuery.sizeOf(context).width * 1.0,
          height: 40.0,
          padding: EdgeInsetsDirectional.fromSTEB(24.0, 0.0, 24.0, 0.0),
          iconPadding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
          color: FlutterFlowTheme.of(context).tertiary,
          textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                fontFamily: 'Kanit',
                color: Colors.white,
              ),
          elevation: 3.0,
          borderSide: BorderSide(
            color: Colors.transparent,
            width: 1.0,
          ),
          borderRadius: BorderRadius.circular(8.0),
        ),
      ),
    );
  }

  Align signNetwork(BuildContext context) {
    return Align(
      alignment: const AlignmentDirectional(0.00, 0.00),
      child: Padding(
        padding: const EdgeInsetsDirectional.fromSTEB(8.0, 15.0, 8.0, 5.0),
        child: Padding(
            padding: const EdgeInsetsDirectional.fromSTEB(5.0, 0.0, 5.0, 0.0),
            child: Container(
              width: MediaQuery.of(context).size.width * 0.63,
              height: 200.0,
              decoration: BoxDecoration(
                // color: Colors.white,
                // color: FlutterFlowTheme.of(context)
                //     .secondaryBackground,
                borderRadius: BorderRadius.circular(10.0),
                border: Border.all(
                  color: FlutterFlowTheme.of(context).secondaryText,
                  width: 1.0,
                ),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(10.0),
                child: Image.network(
                  imageSignFirestore,
                  fit: BoxFit.fill,
                ),
              ),

              //  Signature(
              //   color: Colors.blue.shade800,
              //   // color: FlutterFlowTheme.of(context)
              //   //     .secondaryText,
              //   key: _sign,
              //   onSign: () {
              //     final sign = _sign.currentState;
              //     debugPrint(
              //         '${sign!.points.length} points in the signature');
              //   },
              //   backgroundPainter:
              //       WatermarkPaint("2.0", "2.0"),
              //   strokeWidth: strokeWidth,
              // ),
            )),
      ),
    );
  }

  Align signButton() {
    return Align(
      alignment: Alignment.center,
      child: StatefulBuilder(builder: (context, setState) {
        print(signConfirm);
        return Column(
          children: [
            signConfirm
                ? SizedBox()
                : Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                    child: FFButtonWidget(
                      onPressed: () async {
                        print('sign pressed ...');
                        // trySummit(true);
                        await signBottomSheet();
                        print('finish sign');
                        print(signConfirm);
                        if (mounted) {
                          setState(
                            () {},
                          );
                        }
                      },
                      text: 'ลายเซ็น',
                      options: FFButtonOptions(
                        width: MediaQuery.sizeOf(context).width * 0.25,
                        height: 40.0,
                        padding: EdgeInsetsDirectional.fromSTEB(
                            24.0, 0.0, 24.0, 0.0),
                        iconPadding:
                            EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
                        color: FlutterFlowTheme.of(context).secondary,
                        textStyle:
                            FlutterFlowTheme.of(context).titleSmall.override(
                                  fontFamily: 'Kanit',
                                  color: Colors.white,
                                ),
                        elevation: 3.0,
                        borderSide: BorderSide(
                          color: Colors.transparent,
                          width: 1.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                  ),
            //========================== ลายเซ็น  ===================================
            signConfirm ? signShowEdit(context) : SizedBox()
          ],
        );
      }),
    );
  }

  Align signShowEdit(BuildContext context) {
    return Align(
      alignment: AlignmentDirectional(0.00, 0.00),
      child: Padding(
        padding: EdgeInsetsDirectional.fromSTEB(8.0, 15.0, 8.0, 5.0),
        child: Padding(
          padding: EdgeInsetsDirectional.fromSTEB(5.0, 0.0, 5.0, 0.0),
          child: Container(
              width: MediaQuery.of(context).size.width * 0.63,
              height: 200.0,
              decoration: BoxDecoration(
                // color: Colors.white,
                // color: FlutterFlowTheme.of(context)
                //     .secondaryBackground,
                borderRadius: BorderRadius.circular(10.0),
                border: Border.all(
                  color: FlutterFlowTheme.of(context).secondaryText,
                  width: 1.0,
                ),
              ),
              child: imageSignToShow

              //  Signature(
              //   color: Colors.blue.shade800,
              //   // color: FlutterFlowTheme.of(context)
              //   //     .secondaryText,
              //   key: _sign,
              //   onSign: () {
              //     final sign =
              //         _sign.currentState;
              //     debugPrint(
              //         '${sign!.points.length} points in the signature');
              //   },
              //   backgroundPainter:
              //       WatermarkPaint(
              //           "2.0", "2.0"),
              //   strokeWidth: strokeWidth,
              // ),
              ),
        ),
      ),
    );
  }

  Padding paperAddEdit(BuildContext context) {
    return Padding(
      padding: const EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
      child: Column(
        mainAxisSize: MainAxisSize.max,
        mainAxisAlignment: MainAxisAlignment.center,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'กรุณาแนบเอกสารดั่งต่อไปนี้',
            style: FlutterFlowTheme.of(context).bodyMedium,
          ),
          Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Row(
                children: [
                  Icon(
                    Icons.check_circle,
                    color: imageUint8ListList2![0]!.isEmpty &&
                            finalFileResultString![0]!.isEmpty &&
                            fileUrlFromFirestoreList![0]!.isEmpty &&
                            imageUrlFromFirestoreList2![0]!.isEmpty
                        ? Colors.grey.shade500
                        : Colors.green.shade900,
                    size: 15.0,
                  ),
                  const SizedBox(width: 5),
                  Text(
                    widget.type == 'Company'
                        ? '1) สําเนาบัตรประชาชนของกรรมการ (บังคับ)'
                        : '1) สําเนาบัตรประชาชน (บังคับ)',
                    style: FlutterFlowTheme.of(context).bodyMedium,
                  ),
                  const SizedBox(width: 10),
                  GestureDetector(
                    onTap: () {
                      imageDialog2(
                        widget.type == 'Company'
                            ? '(สําเนาบัตรประชาชนของกรรมการ)'
                            : '(สําเนาบัตรประชาชน)',
                        0,
                      );
                    },
                    child: Icon(
                      FFIcons.kpaperclipPlus,
                      color: Colors.black,
                      size: 15.0,
                    ),
                  ),
                ],
              ),
              for (int index = 0;
                  index < finalFileResultString![0]!.length;
                  index++)
                finalFileResultString![0]![index].isNotEmpty
                    ? Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                // if (!await launchURL(
                                //     finalFileResultString![
                                //         0]![index])) {
                                //   throw Exception(
                                //       'Could not launch ${finalFileResultString![0]![index]}');
                                // }

                                OpenFile.open(
                                    finalFileResultString![0]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![0]!.removeAt(index);
                                    fileUrlFromFirestoreList![0]!
                                        .removeAt(index);

                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      )
                    : Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                if (!await launchURL(
                                    fileUrlFromFirestoreList![0]![index])) {
                                  throw Exception(
                                      'Could not launch ${fileUrlFromFirestoreList![0]![index]}');
                                }

                                // OpenFile.open(
                                //     finalFileResultString![
                                //         4]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![0]!.removeAt(index);
                                    fileUrlFromFirestoreList![0]!
                                        .removeAt(index);

                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      ),
            ],
          ),
          Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Row(
                children: [
                  Icon(
                    Icons.check_circle,
                    color: imageUint8ListList2![1]!.isEmpty &&
                            finalFileResultString![1]!.isEmpty &&
                            fileUrlFromFirestoreList![1]!.isEmpty &&
                            imageUrlFromFirestoreList2![1]!.isEmpty
                        ? Colors.grey.shade500
                        : Colors.green.shade900,
                    size: 15.0,
                  ),
                  const SizedBox(width: 5),
                  Text(
                    widget.type == 'Company'
                        ? '2) หนังสือรับรองบริษัทไม่หมดอายุเกิน 6 เดือน (บังคับ)'
                        : '2) ทะเบียนบ้าน',
                    style: FlutterFlowTheme.of(context).bodyMedium,
                  ),
                  const SizedBox(width: 10),
                  GestureDetector(
                    onTap: () {
                      imageDialog2(
                        widget.type == 'Company'
                            ? '(หนังสือรับรองบริษัทไม่หมดอายุเกิน 6 เดือน)'
                            : '(ทะเบียนบ้าน)',
                        1,
                      );
                    },
                    child: Icon(
                      FFIcons.kpaperclipPlus,
                      color: Colors.black,
                      size: 15.0,
                    ),
                  ),
                ],
              ),
              for (int index = 0;
                  index < finalFileResultString![1]!.length;
                  index++)
                finalFileResultString![1]![index].isNotEmpty
                    ? Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                // if (!await launchURL(
                                //     finalFileResultString![
                                //         1]![index])) {
                                //   throw Exception(
                                //       'Could not launch ${finalFileResultString![1]![index]}');
                                // }

                                OpenFile.open(
                                    finalFileResultString![1]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![1]!.removeAt(index);
                                    fileUrlFromFirestoreList![1]!
                                        .removeAt(index);

                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      )
                    : Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                if (!await launchURL(
                                    fileUrlFromFirestoreList![1]![index])) {
                                  throw Exception(
                                      'Could not launch ${fileUrlFromFirestoreList![1]![index]}');
                                }

                                // OpenFile.open(
                                //     finalFileResultString![
                                //         4]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![1]!.removeAt(index);

                                    fileUrlFromFirestoreList![1]!
                                        .removeAt(index);
                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      ),
            ],
          ),
          Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Row(
                children: [
                  Icon(
                    Icons.check_circle,
                    color: imageUint8ListList2![2]!.isEmpty &&
                            finalFileResultString![2]!.isEmpty &&
                            fileUrlFromFirestoreList![2]!.isEmpty &&
                            imageUrlFromFirestoreList2![2]!.isEmpty
                        ? Colors.grey.shade500
                        : Colors.green.shade900,
                    size: 15.0,
                  ),
                  const SizedBox(width: 5),
                  Text(
                    widget.type == 'Company'
                        ? _model.radioButtonValueControllerVat!.value == 'มี'
                            ? '3) ภพ.20 (บังคับ)'
                            : '3) ภพ.20'
                        : '3) แผนที่ในการจัดส่งสินค้า (บังคับ)',
                    style: FlutterFlowTheme.of(context).bodyMedium,
                  ),
                  const SizedBox(width: 10),
                  GestureDetector(
                    onTap: () {
                      imageDialog2(
                        widget.type == 'Company'
                            ? '(ภพ.20)'
                            : '(แผนที่ในการจัดส่งสินค้า)',
                        2,
                      );
                    },
                    child: Icon(
                      FFIcons.kpaperclipPlus,
                      color: Colors.black,
                      size: 15.0,
                    ),
                  ),
                ],
              ),
              for (int index = 0;
                  index < finalFileResultString![2]!.length;
                  index++)
                finalFileResultString![2]![index].isNotEmpty
                    ? Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                // if (!await launchURL(
                                //     finalFileResultString![
                                //         2]![index])) {
                                //   throw Exception(
                                //       'Could not launch ${finalFileResultString![2]![index]}');
                                // }

                                OpenFile.open(
                                    finalFileResultString![2]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![2]!.removeAt(index);
                                    fileUrlFromFirestoreList![2]!
                                        .removeAt(index);

                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      )
                    : Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                if (!await launchURL(
                                    fileUrlFromFirestoreList![2]![index])) {
                                  throw Exception(
                                      'Could not launch ${fileUrlFromFirestoreList![2]![index]}');
                                }

                                // OpenFile.open(
                                //     finalFileResultString![
                                //         4]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![2]!.removeAt(index);

                                    fileUrlFromFirestoreList![2]!
                                        .removeAt(index);
                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      ),
            ],
          ),
          Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Row(
                children: [
                  Icon(
                    Icons.check_circle,
                    color: imageUint8ListList2![3]!.isEmpty &&
                            finalFileResultString![3]!.isEmpty &&
                            fileUrlFromFirestoreList![3]!.isEmpty &&
                            imageUrlFromFirestoreList2![3]!.isEmpty
                        ? Colors.grey.shade500
                        : Colors.green.shade900,
                    size: 15.0,
                  ),
                  const SizedBox(width: 5),
                  Text(
                    widget.type == 'Company'
                        ? '4) แผนที่ในการจัดส่งสินค้า (บังคับ)'
                        : '4) เอกสารอื่นๆ',
                    style: FlutterFlowTheme.of(context).bodyMedium,
                  ),
                  const SizedBox(width: 10),
                  GestureDetector(
                    onTap: () {
                      imageDialog2(
                        widget.type == 'Company'
                            ? '(แผนที่ในการจัดส่งสินค้า)'
                            : '(เอกสารอื่นๆ)',
                        3,
                      );
                    },
                    child: Icon(
                      FFIcons.kpaperclipPlus,
                      color: Colors.black,
                      size: 15.0,
                    ),
                  ),
                ],
              ),
              for (int index = 0;
                  index < finalFileResultString![3]!.length;
                  index++)
                finalFileResultString![3]![index].isNotEmpty
                    ? Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                // if (!await launchURL(
                                //     finalFileResultString![
                                //         3]![index])) {
                                //   throw Exception(
                                //       'Could not launch ${finalFileResultString![3]![index]}');
                                // }

                                OpenFile.open(
                                    finalFileResultString![3]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![3]!.removeAt(index);
                                    fileUrlFromFirestoreList![3]!
                                        .removeAt(index);

                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      )
                    : Container(
                        color: null,
                        width: 600,
                        child: Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            SizedBox(
                              width: 20,
                            ),
                            GestureDetector(
                              onTap: () async {
                                if (!await launchURL(
                                    fileUrlFromFirestoreList![3]![index])) {
                                  throw Exception(
                                      'Could not launch ${fileUrlFromFirestoreList![3]![index]}');
                                }

                                // OpenFile.open(
                                //     finalFileResultString![
                                //         4]![index]);
                              },
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Text(
                                    '- ไฟล์ที่ ${index + 1}',
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                  ),
                                  SizedBox(width: 5),
                                  Icon(
                                    Icons.search,
                                    size: 16,
                                  ),
                                ],
                              ),
                            ),
                            Spacer(),
                            Row(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                GestureDetector(
                                  onTap: () {
                                    finalFileResultString![3]!.removeAt(index);
                                    fileUrlFromFirestoreList![3]!
                                        .removeAt(index);
                                    setState(() {});
                                  },
                                  child: Icon(
                                    Icons.remove_circle_outline,
                                    size: 16,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              ],
                            ),
                            SizedBox(
                              width: 10,
                            ),
                          ],
                        ),
                      ),
            ],
          ),
          widget.type == 'Company'
              ? Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Row(
                      children: [
                        Icon(
                          Icons.check_circle,
                          color: imageUint8ListList2![4]!.isEmpty &&
                                  finalFileResultString![4]!.isEmpty &&
                                  fileUrlFromFirestoreList![4]!.isEmpty &&
                                  imageUrlFromFirestoreList2![4]!.isEmpty
                              ? Colors.grey.shade500
                              : Colors.green.shade900,
                          size: 15.0,
                        ),
                        const SizedBox(width: 5),
                        Text(
                          '5) เอกสารอื่นๆ',
                          style: FlutterFlowTheme.of(context).bodyMedium,
                        ),
                        const SizedBox(width: 10),
                        GestureDetector(
                          onTap: () {
                            imageDialog2(
                              '(เอกสารอื่นๆ)',
                              4,
                            );
                          },
                          child: Icon(
                            FFIcons.kpaperclipPlus,
                            color: Colors.black,
                            size: 15.0,
                          ),
                        ),
                      ],
                    ),
                    for (int index = 0;
                        index < finalFileResultString![4]!.length;
                        index++)
                      finalFileResultString![4]![index].isNotEmpty
                          ? Container(
                              color: null,
                              width: 600,
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  SizedBox(
                                    width: 20,
                                  ),
                                  GestureDetector(
                                    onTap: () async {
                                      // if (!await launchURL(
                                      //     finalFileResultString![
                                      //         4]![index])) {
                                      //   throw Exception(
                                      //       'Could not launch ${finalFileResultString![4]![index]}');
                                      // }

                                      OpenFile.open(
                                          finalFileResultString![4]![index]);
                                    },
                                    child: Row(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        Text(
                                          '- ไฟล์ที่ ${index + 1}',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium,
                                        ),
                                        SizedBox(width: 5),
                                        Icon(
                                          Icons.search,
                                          size: 16,
                                        ),
                                      ],
                                    ),
                                  ),
                                  Spacer(),
                                  Row(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      GestureDetector(
                                        onTap: () {
                                          finalFileResultString![4]!
                                              .removeAt(index);
                                          fileUrlFromFirestoreList![4]!
                                              .removeAt(index);

                                          setState(() {});
                                        },
                                        child: Icon(
                                          Icons.remove_circle_outline,
                                          size: 16,
                                          color: Colors.red.shade900,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    width: 10,
                                  ),
                                ],
                              ),
                            )
                          : Container(
                              color: null,
                              width: 600,
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  SizedBox(
                                    width: 20,
                                  ),
                                  GestureDetector(
                                    onTap: () async {
                                      if (!await launchURL(
                                          fileUrlFromFirestoreList![4]![
                                              index])) {
                                        throw Exception(
                                            'Could not launch ${fileUrlFromFirestoreList![4]![index]}');
                                      }

                                      // OpenFile.open(
                                      //     finalFileResultString![
                                      //         4]![index]);
                                    },
                                    child: Row(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        Text(
                                          '- ไฟล์ที่ ${index + 1}',
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium,
                                        ),
                                        SizedBox(width: 5),
                                        Icon(
                                          Icons.search,
                                          size: 16,
                                        ),
                                      ],
                                    ),
                                  ),
                                  Spacer(),
                                  Row(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      GestureDetector(
                                        onTap: () {
                                          finalFileResultString![4]!
                                              .removeAt(index);
                                          fileUrlFromFirestoreList![4]!
                                              .removeAt(index);
                                          setState(() {});
                                        },
                                        child: Icon(
                                          Icons.remove_circle_outline,
                                          size: 16,
                                          color: Colors.red.shade900,
                                        ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(
                                    width: 10,
                                  ),
                                ],
                              ),
                            ),
                  ],
                )
              : SizedBox(),
          Padding(
            padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
            child: Row(
              mainAxisSize: MainAxisSize.max,
              children: [
                Align(
                  alignment: AlignmentDirectional(0.00, 0.00),
                  child: Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 8.0, 5.0),
                    child: Container(
                      width: MediaQuery.of(context).size.width * 0.63,
                      decoration: BoxDecoration(
                        color: FlutterFlowTheme.of(context).accent3,
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      child: Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(
                            10.0, 10.0, 10.0, 10.0),
                        child: SingleChildScrollView(
                          scrollDirection: Axis.horizontal,
                          child: Container(
                            width: (MediaQuery.of(context).size.width * 0.63 +
                                    (((MediaQuery.of(context).size.width * 0.63) /
                                            4.5) *
                                        (imageUint8ListList2![0]!.length -
                                            2))) +
                                (MediaQuery.of(context).size.width * 0.63 +
                                    (((MediaQuery.of(context).size.width * 0.63) /
                                            4.5) *
                                        (imageUint8ListList2![1]!.length -
                                            2))) +
                                (MediaQuery.of(context).size.width * 0.63 +
                                    (((MediaQuery.of(context).size.width * 0.63) /
                                            4.5) *
                                        (imageUint8ListList2![2]!.length -
                                            2))) +
                                (MediaQuery.of(context).size.width * 0.63 +
                                    (((MediaQuery.of(context).size.width * 0.63) /
                                            4.5) *
                                        (imageUint8ListList2![3]!.length -
                                            2))) +
                                (MediaQuery.of(context).size.width * 0.63 +
                                    (((MediaQuery.of(context).size.width *
                                                0.63) /
                                            4.5) *
                                        (imageUint8ListList2![4]!.length - 2))),
                            height: 100,
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                ListView.builder(
                                  padding: EdgeInsets.fromLTRB(0, 0, 0, 0),
                                  shrinkWrap: true,
                                  scrollDirection: Axis.horizontal,
                                  physics: NeverScrollableScrollPhysics(),
                                  itemCount: imageUint8ListList2![0]!.length,
                                  itemBuilder: (context, index) {
                                    return imageUint8ListList2![0]![index] !=
                                            null
                                        ? Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(
                                                      index,
                                                      'memory',
                                                      0,
                                                    ),
                                                    // child: Image
                                                    //     .memory(
                                                    //   imageUint8ListList2![0]![
                                                    //       index]!,
                                                    child: Image.memory(
                                                      imageUint8ListList2![0]![
                                                          index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  0]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  0]!
                                                              .removeAt(index);
                                                          imageFileList2![0]!
                                                              .removeAt(index);
                                                          imageList2![0]!
                                                              .removeAt(index);

                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          )
                                        : Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(
                                                      index,
                                                      'network',
                                                      0,
                                                    ),
                                                    // child: Image
                                                    //     .memory(
                                                    //   imageUint8ListList2![0]![
                                                    //       index]!,
                                                    child: Image.network(
                                                      imageUrlFromFirestoreList2![
                                                          0]![index],
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          print(
                                                              imageUrlFromFirestoreList2![
                                                                  0]);
                                                          imageUrlFromFirestoreList2![
                                                                  0]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  0]!
                                                              .removeAt(index);
                                                          imageFileList2![0]!
                                                              .removeAt(index);
                                                          imageList2![0]!
                                                              .removeAt(index);

                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          );
                                  },
                                ),
                                ListView.builder(
                                  padding: EdgeInsets.fromLTRB(0, 0, 0, 0),
                                  shrinkWrap: true,
                                  scrollDirection: Axis.horizontal,
                                  physics: NeverScrollableScrollPhysics(),
                                  itemCount: imageUint8ListList2![1]!.length,
                                  itemBuilder: (context, index) {
                                    return imageUint8ListList2![1]![index] !=
                                            null
                                        ? Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(
                                                      index,
                                                      'memory',
                                                      1,
                                                    ),
                                                    // child: Image
                                                    //     .memory(
                                                    //   imageUint8ListList2![0]![
                                                    //       index]!,
                                                    child: Image.memory(
                                                      imageUint8ListList2![1]![
                                                          index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  1]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  1]!
                                                              .removeAt(index);
                                                          imageFileList2![1]!
                                                              .removeAt(index);
                                                          imageList2![1]!
                                                              .removeAt(index);

                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          )
                                        : Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(
                                                      index,
                                                      'network',
                                                      1,
                                                    ),
                                                    child: Image.network(
                                                      imageUrlFromFirestoreList2![
                                                          1]![index],
                                                      // child: Image
                                                      //     .memory(
                                                      //   imageUint8ListList2![1]![
                                                      //       index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  1]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  1]!
                                                              .removeAt(index);
                                                          imageFileList2![1]!
                                                              .removeAt(index);
                                                          imageList2![1]!
                                                              .removeAt(index);

                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          );
                                  },
                                ),
                                ListView.builder(
                                  padding: EdgeInsets.fromLTRB(0, 0, 0, 0),
                                  shrinkWrap: true,
                                  scrollDirection: Axis.horizontal,
                                  physics: NeverScrollableScrollPhysics(),
                                  itemCount: imageUint8ListList2![2]!.length,
                                  itemBuilder: (context, index) {
                                    return imageUint8ListList2![2]![index] !=
                                            null
                                        ? Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(
                                                      index,
                                                      'memory',
                                                      2,
                                                    ),
                                                    // child: Image
                                                    //     .memory(
                                                    //   imageUint8ListList2![0]![
                                                    //       index]!,
                                                    child: Image.memory(
                                                      imageUint8ListList2![2]![
                                                          index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  2]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  2]!
                                                              .removeAt(index);
                                                          imageFileList2![2]!
                                                              .removeAt(index);
                                                          imageList2![2]!
                                                              .removeAt(index);

                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          )
                                        : Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(index,
                                                            'network', 2),
                                                    child: Image.network(
                                                      imageUrlFromFirestoreList2![
                                                          2]![index],
                                                      // child: Image
                                                      //     .memory(
                                                      //   imageUint8ListList2![2]![
                                                      //       index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  2]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  2]!
                                                              .removeAt(index);
                                                          imageFileList2![2]!
                                                              .removeAt(index);
                                                          imageList2![2]!
                                                              .removeAt(index);
                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          );
                                  },
                                ),
                                ListView.builder(
                                  padding: EdgeInsets.fromLTRB(0, 0, 0, 0),
                                  shrinkWrap: true,
                                  scrollDirection: Axis.horizontal,
                                  physics: NeverScrollableScrollPhysics(),
                                  itemCount: imageUint8ListList2![3]!.length,
                                  itemBuilder: (context, index) {
                                    return imageUint8ListList2![3]![index] !=
                                            null
                                        ? Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(
                                                      index,
                                                      'memory',
                                                      3,
                                                    ),
                                                    // child: Image
                                                    //     .memory(
                                                    //   imageUint8ListList2![0]![
                                                    //       index]!,
                                                    child: Image.memory(
                                                      imageUint8ListList2![3]![
                                                          index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  3]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  3]!
                                                              .removeAt(index);
                                                          imageFileList2![3]!
                                                              .removeAt(index);
                                                          imageList2![3]!
                                                              .removeAt(index);

                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          )
                                        : Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(index,
                                                            'network', 3),
                                                    child: Image.network(
                                                      imageUrlFromFirestoreList2![
                                                          3]![index],
                                                      // child: Image
                                                      //     .memory(
                                                      //   imageUint8ListList2![3]![
                                                      //       index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  3]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  3]!
                                                              .removeAt(index);
                                                          imageFileList2![3]!
                                                              .removeAt(index);
                                                          imageList2![3]!
                                                              .removeAt(index);
                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          );
                                  },
                                ),
                                ListView.builder(
                                  padding: EdgeInsets.fromLTRB(0, 0, 0, 0),
                                  shrinkWrap: true,
                                  scrollDirection: Axis.horizontal,
                                  physics: NeverScrollableScrollPhysics(),
                                  itemCount: imageUint8ListList2![4]!.length,
                                  itemBuilder: (context, index) {
                                    return imageUint8ListList2![4]![index] !=
                                            null
                                        ? Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(
                                                      index,
                                                      'memory',
                                                      4,
                                                    ),
                                                    // child: Image
                                                    //     .memory(
                                                    //   imageUint8ListList2![0]![
                                                    //       index]!,
                                                    child: Image.memory(
                                                      imageUint8ListList2![4]![
                                                          index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  4]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  4]!
                                                              .removeAt(index);
                                                          imageFileList2![4]!
                                                              .removeAt(index);
                                                          imageList2![4]!
                                                              .removeAt(index);

                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          )
                                        : Padding(
                                            padding: EdgeInsets.fromLTRB(
                                                0, 0, 10, 0),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(8),
                                              child: Stack(
                                                children: [
                                                  GestureDetector(
                                                    onTap: () =>
                                                        showPreviewImage2(index,
                                                            'network', 4),
                                                    child: Image.network(
                                                      imageUrlFromFirestoreList2![
                                                          4]![index],
                                                      // child: Image
                                                      //     .memory(
                                                      //   imageUint8ListList2![4]![
                                                      //       index]!,
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.63) /
                                                          4.5,
                                                      height: 100.0,
                                                      fit: BoxFit.cover,
                                                    ),
                                                  ),
                                                  Positioned(
                                                    right: 0,
                                                    bottom: 0,
                                                    child: Container(
                                                      width: 20,
                                                      height: 15,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  8),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  10),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(top: 2),
                                                        child: Text(
                                                          '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                          style: TextStyle(
                                                              color:
                                                                  Colors.black,
                                                              // fontSize: (lang ==
                                                              //         'my')
                                                              //     ? 10
                                                              //     : 10),
                                                              fontSize: 10),
                                                          textAlign:
                                                              TextAlign.center,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    top: 4,
                                                    right: 4,
                                                    child: Container(
                                                      width: 25,
                                                      height: 25,
                                                      decoration: BoxDecoration(
                                                        color: Colors.white,
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(30),
                                                        boxShadow: [
                                                          BoxShadow(
                                                            color: Colors.black
                                                                .withOpacity(
                                                                    0.2),
                                                            spreadRadius: 1,
                                                            blurRadius: 1,
                                                            offset: Offset(
                                                              0,
                                                              1,
                                                            ), // changes position of shadow
                                                          ),
                                                        ],
                                                      ),
                                                      child: GestureDetector(
                                                        child: Icon(
                                                          Icons.delete,
                                                          size: 20,
                                                          color: Colors.black,
                                                        ),
                                                        onTap: () {
                                                          //==========================================
                                                          imageUrlFromFirestoreList2![
                                                                  4]!
                                                              .removeAt(index);
                                                          imageUint8ListList2![
                                                                  4]!
                                                              .removeAt(index);
                                                          imageFileList2![4]!
                                                              .removeAt(index);
                                                          imageList2![4]!
                                                              .removeAt(index);
                                                          setState(() {});
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          );
                                  },
                                ),

                                //=======================================
                                for (int i = imageUint8ListList2![0]!.length +
                                        imageUint8ListList2![1]!.length +
                                        imageUint8ListList2![2]!.length +
                                        imageUint8ListList2![3]!.length +
                                        imageUint8ListList2![4]!.length;
                                    i < 4;
                                    i++)
                                  Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        5.0, 0.0, 6.0, 0.0),
                                    child: Container(
                                      width:
                                          (MediaQuery.of(context).size.width *
                                                  0.63) /
                                              4.5,
                                      height: 100.0,
                                      decoration: BoxDecoration(
                                        color: FlutterFlowTheme.of(context)
                                            .secondaryBackground,
                                        borderRadius:
                                            BorderRadius.circular(0.0),
                                      ),
                                      child: Icon(
                                        FFIcons.kimagePlus,
                                        color: FlutterFlowTheme.of(context)
                                            .secondaryText,
                                        size: 40.0,
                                      ),
                                    ),
                                  ),
                                //=======================================
                              ],
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> idCustomerGroupFiveEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('รหัสกลุ่มลูกค้าที่5')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          // List<String> dropdown = [];
          List<String> dropdown = ['ยกเลิก'];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['GROUP_DESC'] != '' && docData['IS_ACTIVE'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['GROUP_DESC']);
            }
          }
          return StatefulBuilder(builder: (context, setStateFive) {
            return Padding(
              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController185 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                // onChanged: (val) => setState(() => _model.dropDownValue185 = val),
                onChanged: (val) {
                  scrollDown();
                  setStateFive(() {
                    if (val == 'ยกเลิก') {
                      _model.dropDownValue185 = val;
                      _model.dropDownValueController185!.reset();
                    }
                  });
                  scrollDown();
                },
                height: 55.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 5',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            );
          });
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> idCustomerGroupFourEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('รหัสกลุ่มลูกค้าที่4')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          // List<String> dropdown = [];
          List<String> dropdown = ['ยกเลิก'];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['GROUP_DESC'] != '' && docData['IS_ACTIVE'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['GROUP_DESC']);
            }
          }
          return StatefulBuilder(builder: (context, setStateFour) {
            return Padding(
              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController184 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                // onChanged: (val) => setState(() => _model.dropDownValue184 = val),
                onChanged: (val) {
                  scrollDown();
                  setStateFour(() {
                    if (val == 'ยกเลิก') {
                      _model.dropDownValue184 = val;
                      _model.dropDownValueController184!.reset();
                    }
                  });
                  scrollDown();
                },
                height: 55.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 4',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            );
          });
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>>
      idCustomerGroupThreeEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('รหัสกลุ่มลูกค้าที่3')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          // List<String> dropdown = [];
          List<String> dropdown = ['ยกเลิก'];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['GROUP_DESC'] != '' && docData['IS_ACTIVE'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['GROUP_DESC']);
            }
          }
          return StatefulBuilder(builder: (context, setStateMove) {
            return Padding(
              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController183 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                // onChanged: (val) => setState(() => _model.dropDownValue183 = val),
                onChanged: (val) {
                  print('group');
                  scrollDown();
                  setStateMove(() {
                    _model.dropDownValue183 = val;
                    if (val == 'ยกเลิก') {
                      _model.dropDownValueController183!.reset();
                    }
                  });
                  scrollDown();
                },
                height: 55.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 3',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            );
          });
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> idCustomerGroupTwoEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('รหัสกลุ่มลูกค้าที่2')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          // List<String> dropdown = [];
          List<String> dropdown = ['ยกเลิก'];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['GROUP_DESC'] != '' && docData['IS_ACTIVE'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['GROUP_DESC']);
            }
          }
          return StatefulBuilder(builder: (context, setStateTwo) {
            return Padding(
              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController182 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                // onChanged: (val) => setState(() => _model.dropDownValue182 = val),
                onChanged: (val) {
                  scrollDown();

                  setStateTwo(() {
                    _model.dropDownValue182 = val;
                    if (val == 'ยกเลิก') {
                      _model.dropDownValueController182!.reset();
                    }
                  });
                  scrollDown();
                },
                height: 55.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 2',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            );
          });
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> idCustmerGroupOneEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('รหัสกลุ่มลูกค้าที่1')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          // List<String> dropdown = [];
          List<String> dropdown = ['ยกเลิก'];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['GROUP_DESC'] != '' && docData['IS_ACTIVE'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['GROUP_DESC']);
            }
          }
          return StatefulBuilder(builder: (context, setStateOne) {
            return Padding(
              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController18 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                // onChanged: (val) => setState(() => _model.dropDownValue18 = val),
                onChanged: (val) {
                  scrollDown();
                  setStateOne(() {
                    _model.dropDownValue18 = val == 'ยกเลิก' ? null : val;
                    if (val == 'ยกเลิก') {
                      _model.dropDownValueController18!.reset();
                    }
                  });
                  scrollDown();
                },
                height: 55.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 1',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            );
          });
        });
  }

  Padding nameEmployeeEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
      child: IgnorePointer(
        child: TextFormField(
          readOnly: true,
          // controller: _model.textController1Company,
          // focusNode: _model.textFieldFocusNode1Company,
          autofocus: false,
          obscureText: false,
          decoration: InputDecoration(
            label: Text(widget.entryMap!['value']['ชื่อพนักงานขาย']),
            // labelText: 'ชื่อบริษัn',
            isDense: true,
            labelStyle: FlutterFlowTheme.of(context).labelMedium,
            hintText: widget.entryMap!['value']['ชื่อพนักงานขาย'],
            hintStyle: FlutterFlowTheme.of(context).labelMedium,
            enabledBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).alternate,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
            focusedBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).primary,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
            errorBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).error,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
            focusedErrorBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).error,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
          ),
          style: FlutterFlowTheme.of(context).bodyMedium,
          textAlign: TextAlign.start,
          // validator: _model.textController1Validator
          //     .asValidator(context),
        ),
      ),
    );
  }

  Padding idCustmerEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
      child: IgnorePointer(
        child: TextFormField(
          readOnly: true,
          // controller: _model.textController1Company,
          // focusNode: _model.textFieldFocusNode1Company,
          autofocus: false,
          obscureText: false,
          decoration: InputDecoration(
            label: Text(widget.entryMap!['value']['รหัสพนักงานขาย']),
            // labelText: 'ชื่อบริษัn',
            isDense: true,
            labelStyle: FlutterFlowTheme.of(context).labelMedium,
            hintText: widget.entryMap!['value']['รหัสพนักงานขาย'],
            hintStyle: FlutterFlowTheme.of(context).labelMedium,
            enabledBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).alternate,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
            focusedBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).primary,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
            errorBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).error,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
            focusedErrorBorder: OutlineInputBorder(
              borderSide: BorderSide(
                color: FlutterFlowTheme.of(context).error,
                width: 2.0,
              ),
              borderRadius: BorderRadius.circular(8.0),
            ),
          ),
          style: FlutterFlowTheme.of(context).bodyMedium,
          textAlign: TextAlign.start,
          // validator: _model.textController1Validator
          //     .asValidator(context),
        ),
      ),
    );
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> idAccoutingEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance.collection('รหัสบัญชี').snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          List<String> dropdown = [];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['ACC_DESC'] != '') {
              data['key${index}'] = docData;
              dropdown.add(docData['ACC_DESC']);
            }
          }
          return Padding(
            padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
            child: SizedBox(
              height: 55,
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController15 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                onChanged: (val) =>
                    setState(() => _model.dropDownValue15 = val),
                height: 45.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'รหัสบัญชี (MFOOD API)',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            ),
          );
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> departmentEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance.collection('แผนก').snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          List<String> dropdown = [];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['DEPARTMENT_NAME'] != '' &&
                docData['IS_ACTIVE'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['DEPARTMENT_NAME']);
            }
          }
          return Padding(
            padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
            child: SizedBox(
              height: 55,
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController14 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                onChanged: (val) =>
                    setState(() => _model.dropDownValue14 = val),
                height: 45.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'แผนก (MFOOD API)',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            ),
          );
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> bookBankEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('บัญชีธนาคารของบริษัท')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          List<String> dropdown = [];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['BBOOK_DESC'] != '' && docData['RESULT'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['BBOOK_DESC']);
            }
          }
          return Padding(
            padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
            child: SizedBox(
              height: 55,
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController13 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                onChanged: (val) =>
                    setState(() => _model.dropDownValue13 = val),
                height: 45.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'เลือกบัญชีธนาคารของบริษัท (MFOOD API)',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            ),
          );
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> payChooseEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('เงื่อนไขการชำระเงิน')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          List<String> dropdown = [];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['PTERM_DESC'] != '' && docData['IS_ACTIVE'] == true) {
              data['key${index}'] = docData;
              dropdown.add(docData['PTERM_DESC']);
            }
          }
          return Padding(
            padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
            child: SizedBox(
              height: 55,
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController12 ??=
                    FormFieldController<String>(null),
                // options: ['มัดจำ 50%', 'มัดจำ 60%', 'มัดจำ 70%'],
                options: dropdown,
                onChanged: (val) {
                  _model.dropDownValue12 = val;

                  Map<String, dynamic>? foundMapData;
                  data.forEach((key, value) {
                    if (value["PTERM_DESC"] == val) {
                      foundMapData = value;
                    }
                  });

                  if (foundMapData! != null) {
                    print("Found Map: $foundMapData");
                    _model.textController191.text =
                        foundMapData!['PCREDIT_DAY'];
                  } else {
                    print("ไม่พบ map ที่มี PTERM_DESC เป็น $val");
                  }
                  setState(() {});
                },
                height: 45.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'เงื่อนไขการชำระเงิน (Dropdown จาก API)',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            ),
          );
        });
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> payOptionEditDropdown() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance
            .collection('ประเภทการจ่ายเงิน')
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> data = {};
          List<String> dropdown = [];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['PAYMENT_DESC'] != '') {
              data['key${index}'] = docData;
              dropdown.add(docData['PAYMENT_DESC']);
            }
          }
          return Padding(
            padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
            child: SizedBox(
              height: 55,
              child: FlutterFlowDropDown<String>(
                controller: _model.dropDownValueController11 ??=
                    FormFieldController<String>(null),
                options: dropdown,
                //  [
                //   'เงินสด',
                //   'โอนผ่านบัญชี',
                //   'Gb Pay'
                // ],
                onChanged: (val) =>
                    setState(() => _model.dropDownValue11 = val),
                height: 45.0,
                textStyle: FlutterFlowTheme.of(context).bodyMedium,
                hintText: 'ประเภทการจ่ายเงิน (Dropdown จาก API)',
                icon: Icon(
                  Icons.arrow_left_outlined,
                  color: FlutterFlowTheme.of(context).secondaryText,
                  size: 24.0,
                ),
                elevation: 2.0,
                borderColor: FlutterFlowTheme.of(context).alternate,
                borderWidth: 2.0,
                borderRadius: 8.0,
                margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                hidesUnderline: true,
                isSearchable: false,
                isMultiSelect: false,
              ),
            ),
          );
        });
  }

  Padding billDiscountEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: TextFormField(
        controller: _model.textController20,
        focusNode: _model.textFieldFocusNode20,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          labelText: 'ส่วนลดท้ายบิล (จำนวนบาท หรือ x%)',
          hintText: 'ส่วนลดท้ายบิล (จำนวนบาท หรือ x%)',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        validator: _model.textController20Validator.asValidator(context),
      ),
    );
  }

  Padding creditPayEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: TextFormField(
        controller: _model.textController19,
        // focusNode: _model.textFieldFocusNode19,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          labelText:
              'วงเงินเครดิต (กรณีไม่มีการกำหนดเครดิตให้ใส่เป็น 0 ค่าเริ่มต้น',
          hintText:
              'วงเงินเครดิต (กรณีไม่มีการกำหนดเครดิตให้ใส่เป็น 0 ค่าเริ่มต้น',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        // validator: _model.textController19Validator.asValidator(context),
      ),
    );
  }

  Padding payOptionEdit() {
    // return StreamBuilder(
    //     stream: FirebaseFirestore.instance
    //         .collection('เงื่อนไขการชำระเงิน')
    //         .snapshots(),
    //     builder: (context, snapshot) {
    //       if (snapshot.connectionState == ConnectionState.waiting) {
    //         return SizedBox();
    //       }
    //       if (snapshot.hasError) {
    //         return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
    //       }
    //       if (!snapshot.hasData) {
    //         return Text('ไม่พบข้อมูล');
    //       }
    //       if (snapshot.data!.docs.isEmpty) {
    //         print(snapshot.data);
    //       }

    //       Map<String, dynamic> data = {};
    //       List<String> dropdown = [];

    //       for (int index = 0; index < snapshot.data!.docs.length; index++) {
    //         final Map<String, dynamic> docData =
    //             snapshot.data!.docs[index].data() as Map<String, dynamic>;

    //         if (docData['PCREDIT_DAY'] != '' && docData['IS_ACTIVE'] == true) {
    //           data['key${index}'] = docData;
    //           dropdown.add(docData['PCREDIT_DAY']);
    //         }
    //       }
    //       return Padding(
    //         padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
    //         child: FlutterFlowDropDown<String>(
    //           controller: _model.dropDownValueController10 ??=
    //               FormFieldController<String>(null),
    //           options: dropdown,
    //           onChanged: (val) => setState(() => _model.dropDownValue10 = val),
    //           height: 55.0,
    //           textStyle: FlutterFlowTheme.of(context).bodyMedium,
    //           hintText: 'ระยะเวลาชำระหนี้ (Credit terms)',
    //           icon: Icon(
    //             Icons.arrow_left_outlined,
    //             color: FlutterFlowTheme.of(context).secondaryText,
    //             size: 24.0,
    //           ),
    //           elevation: 2.0,
    //           borderColor: FlutterFlowTheme.of(context).alternate,
    //           borderWidth: 2.0,
    //           borderRadius: 8.0,
    //           margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
    //           hidesUnderline: true,
    //           isSearchable: false,
    //           isMultiSelect: false,
    //         ),
    //       );
    //     });
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: TextFormField(
        controller: _model.textController191,
        focusNode: _model.textFieldFocusNode191,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          labelText: 'ระยะเวลาชำระหนี้',
          hintText: 'ระยะเวลาชำระหนี้',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        validator: _model.textController19Validator1.asValidator(context),
      ),
    );
  }

  StatefulBuilder addressToBillAndSendChooseEdit() {
    return StatefulBuilder(builder: (context, setState) {
      if (resultListSendAndBill.length == total4) {
      } else {
        for (int i = resultListSendAndBill.length; i < total4; i++) {
          resultListSendAndBill.add({
            'ที่อยู่จัดส่ง': '',
            'ชื่อออกบิล': '',
            'ที่อยู่ออกบิล': '',
          });

          dropDownControllersSend.add(FormFieldController<String>(''));
          dropDownControllersBill.add(FormFieldController<String>(''));

          sendAndBillList!.add(TextEditingController());

          textFieldFocusSendAndBill!.add(FocusNode());
        }
      }
      // print('in Address');
      // print(dropDownControllersSend);
      // print(dropDownControllersBill);
      // for (var element in dropDownControllersSend) {
      //   print(element.value);
      // }

      // for (var element in dropDownControllersBill) {
      //   print(element.value);
      // }

      return Column(
        children: [
          for (int index = 0; index < total4; index++)
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  mainAxisSize: MainAxisSize.max,
                  children: [
                    Text(
                      '  กำหนดที่อยู่ในการจัดส่งและออกบิล ลำดับที่ ${index + 1}',
                      style: FlutterFlowTheme.of(context).labelLarge,
                    ),
                    total4 == 1
                        ? SizedBox()
                        : index + 1 == total4
                            ? Padding(
                                padding: EdgeInsets.only(
                                  right: 5.0,
                                ),
                                child: GestureDetector(
                                  onTap: () => setState(() {
                                    total4 = total4 - 1;
                                    resultListSendAndBill.removeLast();

                                    dropDownControllersSend.removeLast();

                                    dropDownControllersBill.removeLast();

                                    sendAndBillList!.removeLast();

                                    textFieldFocusSendAndBill!.removeLast();
                                  }),
                                  child: Icon(
                                    Icons.remove_circle_outline_outlined,
                                    size: 12,
                                    color: Colors.red.shade900,
                                  ),
                                ),
                              )
                            : SizedBox()
                  ],
                ),
                Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                  child: Row(
                    mainAxisSize: MainAxisSize.max,
                    children: [
                      Text(
                        ' กำหนดที่อยูในการจัดส่ง ',
                        style: FlutterFlowTheme.of(context).bodySmall,
                      ),
                    ],
                  ),
                ),
                //======================= กำหนดที่อยูในการจัดส่ง ======================================
                Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
                  child: SizedBox(
                    height: 55,
                    child: FlutterFlowDropDown<String>(
                      controller: dropDownControllersSend[index],
                      options: addressAllForDropdown,
                      // options: resultList
                      //     .map((item) =>
                      //         item['รหัสสาขา'].toString() +
                      //         (' ') +
                      //         item['ชื่อสาขา'].toString() +
                      //         (' ') +
                      //         item['HouseNumber'].toString() +
                      //         (' ') +
                      //         item['VillageName'].toString() +
                      //         (' ') +
                      //         item['Road'].toString() +
                      //         (' ') +
                      //         item['Province'].toString() +
                      //         (' ') +
                      //         item['District'].toString() +
                      //         (' ') +
                      //         item['SubDistrict'].toString() +
                      //         (' ') +
                      //         item['PostalCode'].toString() +
                      //         (' ') +
                      //         item['ผู้ติดต่อ'].toString() +
                      //         (' ') +
                      //         item['ตำแหน่ง'].toString() +
                      //         (' ') +
                      //         item['โทรศัพท์'].toString())
                      //     .toList(),
                      onChanged: (val) => setState(() {
                        resultListSendAndBill[index]['ที่อยู่จัดส่ง'] = val;
                      }),
                      height: 45.0,
                      textStyle: FlutterFlowTheme.of(context).bodyMedium,
                      hintText: 'ที่อยู่',
                      icon: Icon(
                        Icons.arrow_left_outlined,
                        color: FlutterFlowTheme.of(context).secondaryText,
                        size: 24.0,
                      ),
                      elevation: 2.0,
                      borderColor: FlutterFlowTheme.of(context).alternate,
                      borderWidth: 2.0,
                      borderRadius: 8.0,
                      margin:
                          EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                      hidesUnderline: true,
                      isSearchable: false,
                      isMultiSelect: false,
                    ),
                  ),
                ),

                //======================== ที่อยู่ กำหนดที่อยูในการออกบิล =====================================
                Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                  child: TextFormField(
                    controller: sendAndBillList![index],

                    // controller: _model.textController15,
                    focusNode: textFieldFocusSendAndBill![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'ชื่อจ่าหน้าที่อยู่ในการออกบิล',
                      hintText: 'ชื่อจ่าหน้าที่อยู่ในการออกบิล',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    // validator: _model.textController19Validator
                    //     .asValidator(context),
                  ),
                ),

                //========================  หัวข้อ กำหนดที่อยูในการออกบิล =====================================
                Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 0.0, 0.0),
                  child: Row(
                    mainAxisSize: MainAxisSize.max,
                    children: [
                      Text(
                        ' กำหนดที่อยู่ในการออกบิล',
                        style: FlutterFlowTheme.of(context).bodySmall,
                      ),
                    ],
                  ),
                ),
                Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                  child: SizedBox(
                    height: 55,
                    child: FlutterFlowDropDown<String>(
                      controller: dropDownControllersBill[index],
                      options: addressAllForDropdown,
                      // options: resultList
                      //     .map((item) =>
                      //         item['รหัสสาขา'].toString() +
                      //         (' ') +
                      //         item['ชื่อสาขา'].toString() +
                      //         (' ') +
                      //         item['HouseNumber'].toString() +
                      //         (' ') +
                      //         item['VillageName'].toString() +
                      //         (' ') +
                      //         item['Road'].toString() +
                      //         (' ') +
                      //         item['Province'].toString() +
                      //         (' ') +
                      //         item['District'].toString() +
                      //         (' ') +
                      //         item['SubDistrict'].toString() +
                      //         (' ') +
                      //         item['PostalCode'].toString() +
                      //         (' ') +
                      //         item['ผู้ติดต่อ'].toString() +
                      //         (' ') +
                      //         item['ตำแหน่ง'].toString() +
                      //         (' ') +
                      //         item['โทรศัพท์'].toString())
                      //     .toList(),
                      onChanged: (val) => setState(() {
                        resultListSendAndBill[index]['ที่อยู่ออกบิล'] = val;
                      }
                          // _model.dropDownValue8 = val
                          ),
                      height: 45.0,
                      textStyle: FlutterFlowTheme.of(context).bodyMedium,
                      hintText: 'ที่อยู่',
                      // 'ถ้าเป็นที่อยูอื่นที่อยูในโปรไฟล์ลูกค้าให้เป็น Dropdown ให้เลือก ใน Dropdown แสดงรหัสสาขา',
                      icon: Icon(
                        Icons.arrow_left_outlined,
                        color: FlutterFlowTheme.of(context).secondaryText,
                        size: 24.0,
                      ),
                      elevation: 2.0,
                      borderColor: FlutterFlowTheme.of(context).alternate,
                      borderWidth: 2.0,
                      borderRadius: 8.0,
                      margin:
                          EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                      hidesUnderline: true,
                      isSearchable: false,
                      isMultiSelect: false,
                    ),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
              ],
            ),
          //=============================================================
          Padding(
            padding: EdgeInsetsDirectional.fromSTEB(0.0, 15.0, 0.0, 15.0),
            child: Row(
              mainAxisSize: MainAxisSize.max,
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                GestureDetector(
                  onTap: () => setState(() {
                    total4 = total4 + 1;
                  }),
                  child: Column(
                    mainAxisSize: MainAxisSize.max,
                    children: [
                      Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Icon(
                            Icons.add_circle,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24.0,
                          ),
                        ],
                      ),
                      Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            'เพิ่มที่อยู่อื่นสำหรับการจัดส่ง',
                            style: FlutterFlowTheme.of(context).bodyMedium,
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ],
      );
    });
  }

  Padding imageLessThreeEdit(BuildContext context) {
    return Padding(
      padding: const EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 0.0, 0.0),
      child: Row(
        mainAxisSize: MainAxisSize.max,
        children: [
          Align(
            alignment: const AlignmentDirectional(0.00, 0.00),
            child: Padding(
              padding: const EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 8.0, 5.0),
              child: Container(
                width: MediaQuery.of(context).size.width * 0.63,
                decoration: BoxDecoration(
                  color: FlutterFlowTheme.of(context).accent3,
                  borderRadius: BorderRadius.circular(8.0),
                ),
                child: Padding(
                  padding: const EdgeInsetsDirectional.fromSTEB(
                      10.0, 10.0, 10.0, 10.0),
                  child: SingleChildScrollView(
                    scrollDirection: Axis.horizontal,
                    child: Row(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        imageUrl.length >= 1
                            ? imageFile[0] == null
                                ? Padding(
                                    padding:
                                        const EdgeInsets.fromLTRB(0, 0, 10, 0),
                                    child: ClipRRect(
                                      borderRadius: BorderRadius.circular(8),
                                      child: Stack(
                                        children: [
                                          GestureDetector(
                                            onTap: () =>
                                                showPreviewImage(0, 'network'),
                                            child: Image.network(
                                              imageUrl[0],
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width *
                                                      0.63) /
                                                  4.5,
                                              height: 100.0,
                                              fit: BoxFit.cover,
                                            ),
                                          ),
                                          Positioned(
                                            right: 0,
                                            bottom: 0,
                                            child: Container(
                                              width: 20,
                                              height: 15,
                                              decoration: const BoxDecoration(
                                                color: Colors.white,
                                                borderRadius: BorderRadius.only(
                                                  topLeft: Radius.circular(8),
                                                  bottomRight:
                                                      Radius.circular(10),
                                                ),
                                              ),
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 2),
                                                child: Text(
                                                  '${0 + 1}/${imageFile.length}',
                                                  style: const TextStyle(
                                                      color: Colors.black,
                                                      fontSize: 10),
                                                  textAlign: TextAlign.center,
                                                ),
                                              ),
                                            ),
                                          ),
                                          Positioned(
                                            top: 4,
                                            right: 4,
                                            child: Container(
                                              width: 25,
                                              height: 25,
                                              decoration: BoxDecoration(
                                                color: Colors.white,
                                                borderRadius:
                                                    BorderRadius.circular(30),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: Colors.black
                                                        .withOpacity(0.2),
                                                    spreadRadius: 1,
                                                    blurRadius: 1,
                                                    offset: const Offset(
                                                      0,
                                                      1,
                                                    ), // changes position of shadow
                                                  ),
                                                ],
                                              ),
                                              child: GestureDetector(
                                                child: const Icon(
                                                  Icons.delete,
                                                  size: 20,
                                                  color: Colors.black,
                                                ),
                                                onTap: () {
                                                  imageUrlFromFirestore
                                                      .removeAt(0);
                                                  imageUint8List.removeAt(0);
                                                  imageFile.removeAt(0);
                                                  image!.removeAt(0);
                                                  imageUrl.removeAt(0);
                                                  imageLength = imageLength - 1;
                                                  imageAddressAllForDropdown
                                                      .clear();
                                                  for (int i = 0;
                                                      i < imageUrl.length;
                                                      i++) {
                                                    imageAddressAllForDropdown
                                                        .add('รูปภาพ ${i + 1}');
                                                  }
                                                  for (int i = 0;
                                                      i < resultList.length;
                                                      i++) {
                                                    resultList[i]['Image'] = '';
                                                    dropDownControllersimageAddress[
                                                            i]
                                                        .value = '';
                                                  }
                                                  setState(() {});
                                                },
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  )
                                : Padding(
                                    padding:
                                        const EdgeInsets.fromLTRB(0, 0, 10, 0),
                                    child: ClipRRect(
                                      borderRadius: BorderRadius.circular(8),
                                      child: Stack(
                                        children: [
                                          GestureDetector(
                                            onTap: () =>
                                                showPreviewImage(0, 'memory'),
                                            child: Image.memory(
                                              imageUint8List[0],
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width *
                                                      0.63) /
                                                  4.5,
                                              height: 100.0,
                                              fit: BoxFit.cover,
                                            ),
                                          ),
                                          Positioned(
                                            right: 0,
                                            bottom: 0,
                                            child: Container(
                                              width: 20,
                                              height: 15,
                                              decoration: const BoxDecoration(
                                                color: Colors.white,
                                                borderRadius: BorderRadius.only(
                                                  topLeft: Radius.circular(8),
                                                  bottomRight:
                                                      Radius.circular(10),
                                                ),
                                              ),
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 2),
                                                child: Text(
                                                  '${0 + 1}/${imageFile.length}',
                                                  style: const TextStyle(
                                                      color: Colors.black,
                                                      fontSize: 10),
                                                  textAlign: TextAlign.center,
                                                ),
                                              ),
                                            ),
                                          ),
                                          Positioned(
                                            top: 4,
                                            right: 4,
                                            child: Container(
                                              width: 25,
                                              height: 25,
                                              decoration: BoxDecoration(
                                                color: Colors.white,
                                                borderRadius:
                                                    BorderRadius.circular(30),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: Colors.black
                                                        .withOpacity(0.2),
                                                    spreadRadius: 1,
                                                    blurRadius: 1,
                                                    offset: const Offset(
                                                      0,
                                                      1,
                                                    ), // changes position of shadow
                                                  ),
                                                ],
                                              ),
                                              child: GestureDetector(
                                                child: const Icon(
                                                  Icons.delete,
                                                  size: 20,
                                                  color: Colors.black,
                                                ),
                                                onTap: () {
                                                  imageUrlFromFirestore
                                                      .removeAt(0);
                                                  imageUint8List.removeAt(0);
                                                  imageFile.removeAt(0);
                                                  image!.removeAt(0);
                                                  imageUrl.removeAt(0);
                                                  imageLength = imageLength - 1;
                                                  imageAddressAllForDropdown
                                                      .clear();
                                                  for (int i = 0;
                                                      i < imageUrl.length;
                                                      i++) {
                                                    imageAddressAllForDropdown
                                                        .add('รูปภาพ ${i + 1}');
                                                  }
                                                  for (int i = 0;
                                                      i < resultList.length;
                                                      i++) {
                                                    resultList[i]['Image'] = '';
                                                    dropDownControllersimageAddress[
                                                            i]
                                                        .value = '';
                                                  }
                                                  setState(() {});
                                                },
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  )
                            : Padding(
                                padding: const EdgeInsetsDirectional.fromSTEB(
                                    5.0, 0.0, 5.0, 0.0),
                                child: Container(
                                  color: null,
                                  width: (MediaQuery.of(context).size.width *
                                          0.63) /
                                      4.5,
                                  height: 100.0,
                                  decoration: BoxDecoration(
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryBackground,
                                    borderRadius: BorderRadius.circular(0.0),
                                  ),
                                  child: Icon(
                                    FFIcons.kimagePlus,
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryText,
                                    size: 40.0,
                                  ),
                                ),
                              ),
                        imageUrl.length >= 2
                            ? imageFile[1] == null
                                ? Padding(
                                    padding:
                                        const EdgeInsets.fromLTRB(0, 0, 10, 0),
                                    child: ClipRRect(
                                      borderRadius: BorderRadius.circular(8),
                                      child: Stack(
                                        children: [
                                          GestureDetector(
                                            onTap: () =>
                                                showPreviewImage(1, 'network'),
                                            child: Image.network(
                                              imageUrl[1],
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width *
                                                      0.63) /
                                                  4.5,
                                              height: 100.0,
                                              fit: BoxFit.cover,
                                            ),
                                          ),
                                          Positioned(
                                            right: 0,
                                            bottom: 0,
                                            child: Container(
                                              width: 20,
                                              height: 15,
                                              decoration: const BoxDecoration(
                                                color: Colors.white,
                                                borderRadius: BorderRadius.only(
                                                  topLeft: Radius.circular(8),
                                                  bottomRight:
                                                      Radius.circular(10),
                                                ),
                                              ),
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 2),
                                                child: Text(
                                                  '${1 + 1}/${imageFile.length}',
                                                  style: const TextStyle(
                                                      color: Colors.black,
                                                      fontSize: 10),
                                                  textAlign: TextAlign.center,
                                                ),
                                              ),
                                            ),
                                          ),
                                          Positioned(
                                            top: 4,
                                            right: 4,
                                            child: Container(
                                              width: 25,
                                              height: 25,
                                              decoration: BoxDecoration(
                                                color: Colors.white,
                                                borderRadius:
                                                    BorderRadius.circular(30),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: Colors.black
                                                        .withOpacity(0.2),
                                                    spreadRadius: 1,
                                                    blurRadius: 1,
                                                    offset: const Offset(
                                                      0,
                                                      1,
                                                    ), // changes position of shadow
                                                  ),
                                                ],
                                              ),
                                              child: GestureDetector(
                                                child: const Icon(
                                                  Icons.delete,
                                                  size: 20,
                                                  color: Colors.black,
                                                ),
                                                onTap: () {
                                                  imageUrlFromFirestore
                                                      .removeAt(1);
                                                  imageUint8List.removeAt(1);
                                                  imageFile.removeAt(1);
                                                  image!.removeAt(1);
                                                  imageUrl.removeAt(1);
                                                  imageLength = imageLength - 1;
                                                  imageAddressAllForDropdown
                                                      .clear();
                                                  for (int i = 0;
                                                      i < imageUrl.length;
                                                      i++) {
                                                    imageAddressAllForDropdown
                                                        .add('รูปภาพ ${i + 1}');
                                                  }
                                                  for (int i = 0;
                                                      i < resultList.length;
                                                      i++) {
                                                    resultList[i]['Image'] = '';
                                                    dropDownControllersimageAddress[
                                                            i]
                                                        .value = '';
                                                  }
                                                  setState(() {});
                                                },
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  )
                                : Padding(
                                    padding:
                                        const EdgeInsets.fromLTRB(0, 0, 10, 0),
                                    child: ClipRRect(
                                      borderRadius: BorderRadius.circular(8),
                                      child: Stack(
                                        children: [
                                          GestureDetector(
                                            onTap: () =>
                                                showPreviewImage(1, 'memory'),
                                            child: Image.memory(
                                              imageUint8List[1],
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width *
                                                      0.63) /
                                                  4.5,
                                              height: 100.0,
                                              fit: BoxFit.cover,
                                            ),
                                          ),
                                          Positioned(
                                            right: 0,
                                            bottom: 0,
                                            child: Container(
                                              width: 20,
                                              height: 15,
                                              decoration: const BoxDecoration(
                                                color: Colors.white,
                                                borderRadius: BorderRadius.only(
                                                  topLeft: Radius.circular(8),
                                                  bottomRight:
                                                      Radius.circular(10),
                                                ),
                                              ),
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 2),
                                                child: Text(
                                                  '${1 + 1}/${imageFile.length}',
                                                  style: const TextStyle(
                                                      color: Colors.black,
                                                      fontSize: 10),
                                                  textAlign: TextAlign.center,
                                                ),
                                              ),
                                            ),
                                          ),
                                          Positioned(
                                            top: 4,
                                            right: 4,
                                            child: Container(
                                              width: 25,
                                              height: 25,
                                              decoration: BoxDecoration(
                                                color: Colors.white,
                                                borderRadius:
                                                    BorderRadius.circular(30),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: Colors.black
                                                        .withOpacity(0.2),
                                                    spreadRadius: 1,
                                                    blurRadius: 1,
                                                    offset: const Offset(
                                                      0,
                                                      1,
                                                    ), // changes position of shadow
                                                  ),
                                                ],
                                              ),
                                              child: GestureDetector(
                                                child: const Icon(
                                                  Icons.delete,
                                                  size: 20,
                                                  color: Colors.black,
                                                ),
                                                onTap: () {
                                                  imageUrlFromFirestore
                                                      .removeAt(1);
                                                  imageUint8List.removeAt(1);
                                                  imageFile.removeAt(1);
                                                  image!.removeAt(1);
                                                  imageUrl.removeAt(1);
                                                  imageLength = imageLength - 1;
                                                  imageAddressAllForDropdown
                                                      .clear();
                                                  for (int i = 0;
                                                      i < imageUrl.length;
                                                      i++) {
                                                    imageAddressAllForDropdown
                                                        .add('รูปภาพ ${i + 1}');
                                                  }
                                                  for (int i = 0;
                                                      i < resultList.length;
                                                      i++) {
                                                    resultList[i]['Image'] = '';
                                                    dropDownControllersimageAddress[
                                                            i]
                                                        .value = '';
                                                  }
                                                  // imageListFile
                                                  //     .removeAt(
                                                  //         index);
                                                  setState(() {});
                                                },
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  )
                            : Padding(
                                padding: const EdgeInsetsDirectional.fromSTEB(
                                    5.0, 0.0, 5.0, 0.0),
                                child: Container(
                                  width: (MediaQuery.of(context).size.width *
                                          0.63) /
                                      4.5,
                                  height: 100.0,
                                  decoration: BoxDecoration(
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryBackground,
                                    borderRadius: BorderRadius.circular(0.0),
                                  ),
                                  child: Icon(
                                    FFIcons.kimagePlus,
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryText,
                                    size: 40.0,
                                  ),
                                ),
                              ),
                        imageUrl.length >= 3
                            ? imageFile[2] == null
                                ? Padding(
                                    padding:
                                        const EdgeInsets.fromLTRB(0, 0, 10, 0),
                                    child: ClipRRect(
                                      borderRadius: BorderRadius.circular(8),
                                      child: Stack(
                                        children: [
                                          GestureDetector(
                                            onTap: () =>
                                                showPreviewImage(2, 'network'),
                                            child: Image.network(
                                              imageUrl[2],
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width *
                                                      0.63) /
                                                  4.5,
                                              height: 100.0,
                                              fit: BoxFit.cover,
                                            ),
                                          ),
                                          Positioned(
                                            right: 0,
                                            bottom: 0,
                                            child: Container(
                                              width: 20,
                                              height: 15,
                                              decoration: const BoxDecoration(
                                                color: Colors.white,
                                                borderRadius: BorderRadius.only(
                                                  topLeft: Radius.circular(8),
                                                  bottomRight:
                                                      Radius.circular(10),
                                                ),
                                              ),
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 2),
                                                child: Text(
                                                  '${2 + 1}/${imageFile.length}',
                                                  style: const TextStyle(
                                                      color: Colors.black,
                                                      fontSize: 10),
                                                  textAlign: TextAlign.center,
                                                ),
                                              ),
                                            ),
                                          ),
                                          Positioned(
                                            top: 4,
                                            right: 4,
                                            child: Container(
                                              width: 25,
                                              height: 25,
                                              decoration: BoxDecoration(
                                                color: Colors.white,
                                                borderRadius:
                                                    BorderRadius.circular(30),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: Colors.black
                                                        .withOpacity(0.2),
                                                    spreadRadius: 1,
                                                    blurRadius: 1,
                                                    offset: const Offset(
                                                      0,
                                                      1,
                                                    ), // changes position of shadow
                                                  ),
                                                ],
                                              ),
                                              child: GestureDetector(
                                                child: const Icon(
                                                  Icons.delete,
                                                  size: 20,
                                                  color: Colors.black,
                                                ),
                                                onTap: () {
                                                  imageUrlFromFirestore
                                                      .removeAt(2);
                                                  imageUint8List.removeAt(2);
                                                  imageFile.removeAt(2);
                                                  image!.removeAt(2);
                                                  imageUrl.removeAt(2);
                                                  imageLength = imageLength - 1;
                                                  imageAddressAllForDropdown
                                                      .clear();
                                                  for (int i = 0;
                                                      i < imageUrl.length;
                                                      i++) {
                                                    imageAddressAllForDropdown
                                                        .add('รูปภาพ ${i + 1}');
                                                  }
                                                  for (int i = 0;
                                                      i < resultList.length;
                                                      i++) {
                                                    resultList[i]['Image'] = '';
                                                    dropDownControllersimageAddress[
                                                            i]
                                                        .value = '';
                                                  }
                                                  setState(() {});
                                                },
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  )
                                : Padding(
                                    padding:
                                        const EdgeInsets.fromLTRB(0, 0, 10, 0),
                                    child: ClipRRect(
                                      borderRadius: BorderRadius.circular(8),
                                      child: Stack(
                                        children: [
                                          GestureDetector(
                                            onTap: () =>
                                                showPreviewImage(2, 'memory'),
                                            child: Image.memory(
                                              imageUint8List[2],
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width *
                                                      0.63) /
                                                  4.5,
                                              height: 100.0,
                                              fit: BoxFit.cover,
                                            ),
                                          ),
                                          Positioned(
                                            right: 0,
                                            bottom: 0,
                                            child: Container(
                                              width: 20,
                                              height: 15,
                                              decoration: const BoxDecoration(
                                                color: Colors.white,
                                                borderRadius: BorderRadius.only(
                                                  topLeft: Radius.circular(8),
                                                  bottomRight:
                                                      Radius.circular(10),
                                                ),
                                              ),
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 2),
                                                child: Text(
                                                  '${2 + 1}/${imageFile.length}',
                                                  style: const TextStyle(
                                                      color: Colors.black,
                                                      fontSize: 10),
                                                  textAlign: TextAlign.center,
                                                ),
                                              ),
                                            ),
                                          ),
                                          Positioned(
                                            top: 4,
                                            right: 4,
                                            child: Container(
                                              width: 25,
                                              height: 25,
                                              decoration: BoxDecoration(
                                                color: Colors.white,
                                                borderRadius:
                                                    BorderRadius.circular(30),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: Colors.black
                                                        .withOpacity(0.2),
                                                    spreadRadius: 1,
                                                    blurRadius: 1,
                                                    offset: const Offset(
                                                      0,
                                                      1,
                                                    ), // changes position of shadow
                                                  ),
                                                ],
                                              ),
                                              child: GestureDetector(
                                                child: const Icon(
                                                  Icons.delete,
                                                  size: 20,
                                                  color: Colors.black,
                                                ),
                                                onTap: () {
                                                  imageUrlFromFirestore
                                                      .removeAt(2);
                                                  imageUint8List.removeAt(2);
                                                  imageFile.removeAt(2);
                                                  image!.removeAt(2);
                                                  imageUrl.removeAt(2);
                                                  imageLength = imageLength - 1;
                                                  imageAddressAllForDropdown
                                                      .clear();
                                                  for (int i = 0;
                                                      i < imageUrl.length;
                                                      i++) {
                                                    imageAddressAllForDropdown
                                                        .add('รูปภาพ ${i + 1}');
                                                  }
                                                  for (int i = 0;
                                                      i < resultList.length;
                                                      i++) {
                                                    resultList[i]['Image'] = '';
                                                    dropDownControllersimageAddress[
                                                            i]
                                                        .value = '';
                                                  }
                                                  setState(() {});
                                                },
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  )
                            : Padding(
                                padding: const EdgeInsetsDirectional.fromSTEB(
                                    5.0, 0.0, 6.0, 0.0),
                                child: Container(
                                  width: (MediaQuery.of(context).size.width *
                                          0.63) /
                                      4.5,
                                  height: 100.0,
                                  decoration: BoxDecoration(
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryBackground,
                                    borderRadius: BorderRadius.circular(0.0),
                                  ),
                                  child: Icon(
                                    FFIcons.kimagePlus,
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryText,
                                    size: 40.0,
                                  ),
                                ),
                              ),
                        Padding(
                          padding: const EdgeInsetsDirectional.fromSTEB(
                              5.0, 0.0, 5.0, 0.0),
                          child: InkWell(
                            onTap: () {
                              imageDialog();
                              // showQucikAlert(
                              //     context);
                            },
                            child: Container(
                              width:
                                  (MediaQuery.of(context).size.width * 0.63) /
                                      4.5,
                              height: 100.0,
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(8),
                              ),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  CircleAvatar(
                                    maxRadius: 30,
                                    backgroundColor: Colors.black,
                                    child: Icon(
                                      FFIcons.kpaperclipPlus,
                                      color: FlutterFlowTheme.of(context)
                                          .primaryBackground,
                                      size: 30.0,
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Padding imageMoreThreeEdit(BuildContext context) {
    return Padding(
      padding: const EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 0.0, 0.0),
      child: Row(
        mainAxisSize: MainAxisSize.max,
        children: [
          Align(
            alignment: const AlignmentDirectional(0.00, 0.00),
            child: Padding(
              padding: const EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 8.0, 5.0),
              child: Container(
                width: MediaQuery.of(context).size.width * 0.63,
                decoration: BoxDecoration(
                  color: FlutterFlowTheme.of(context).accent3,
                  borderRadius: BorderRadius.circular(8.0),
                ),
                child: Padding(
                  padding: const EdgeInsetsDirectional.fromSTEB(
                      10.0, 10.0, 10.0, 10.0),
                  child: SingleChildScrollView(
                    scrollDirection: Axis.horizontal,
                    child: Container(
                      color: null,
                      width: MediaQuery.of(context).size.width * 0.63 +
                          (((MediaQuery.of(context).size.width * 0.63) / 4.5) *
                              (imageUrl.length - 2)),
                      height: 100,
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          ListView.builder(
                            padding: const EdgeInsets.fromLTRB(20, 0, 0, 0),
                            shrinkWrap: true,
                            scrollDirection: Axis.horizontal,
                            physics: const NeverScrollableScrollPhysics(),
                            itemCount: imageUint8List.length,
                            itemBuilder: (context, index) {
                              return imageFile[index] == null
                                  ? Padding(
                                      padding: const EdgeInsets.fromLTRB(
                                          0, 0, 10, 0),
                                      child: ClipRRect(
                                        borderRadius: BorderRadius.circular(8),
                                        child: Stack(
                                          children: [
                                            GestureDetector(
                                              onTap: () => showPreviewImage(
                                                  index, 'network'),
                                              child: Image.network(
                                                imageUrl[index],
                                                width: (MediaQuery.of(context)
                                                            .size
                                                            .width *
                                                        0.63) /
                                                    4.5,
                                                height: 100.0,
                                                fit: BoxFit.cover,
                                              ),
                                            ),
                                            Positioned(
                                              right: 0,
                                              bottom: 0,
                                              child: Container(
                                                width: 20,
                                                height: 15,
                                                decoration: const BoxDecoration(
                                                  color: Colors.white,
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    topLeft: Radius.circular(8),
                                                    bottomRight:
                                                        Radius.circular(10),
                                                  ),
                                                ),
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.only(
                                                          top: 2),
                                                  child: Text(
                                                    '${index + 1}/${imageFile.length}',
                                                    style: const TextStyle(
                                                        color: Colors.black,
                                                        fontSize: 10),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ),
                                              ),
                                            ),
                                            Positioned(
                                              top: 4,
                                              right: 4,
                                              child: Container(
                                                width: 25,
                                                height: 25,
                                                decoration: BoxDecoration(
                                                  color: Colors.white,
                                                  borderRadius:
                                                      BorderRadius.circular(30),
                                                  boxShadow: [
                                                    BoxShadow(
                                                      color: Colors.black
                                                          .withOpacity(0.2),
                                                      spreadRadius: 1,
                                                      blurRadius: 1,
                                                      offset: const Offset(
                                                        0,
                                                        1,
                                                      ), // changes position of shadow
                                                    ),
                                                  ],
                                                ),
                                                child: GestureDetector(
                                                  child: const Icon(
                                                    Icons.delete,
                                                    size: 20,
                                                    color: Colors.black,
                                                  ),
                                                  onTap: () {
                                                    imageUrlFromFirestore
                                                        .removeAt(index);
                                                    imageUint8List
                                                        .removeAt(index);
                                                    imageFile.removeAt(index);
                                                    image!.removeAt(index);
                                                    imageUrl.removeAt(index);
                                                    imageLength =
                                                        imageLength - 1;
                                                    imageAddressAllForDropdown
                                                        .clear();
                                                    for (int i = 0;
                                                        i < imageUrl.length;
                                                        i++) {
                                                      imageAddressAllForDropdown
                                                          .add(
                                                              'รูปภาพ ${i + 1}');
                                                    }
                                                    for (int i = 0;
                                                        i < resultList.length;
                                                        i++) {
                                                      resultList[i]['Image'] =
                                                          '';
                                                      dropDownControllersimageAddress[
                                                              i]
                                                          .value = '';
                                                    }
                                                    setState(() {});
                                                  },
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    )
                                  : Padding(
                                      padding: const EdgeInsets.fromLTRB(
                                          0, 0, 10, 0),
                                      child: ClipRRect(
                                        borderRadius: BorderRadius.circular(8),
                                        child: Stack(
                                          children: [
                                            GestureDetector(
                                              onTap: () => showPreviewImage(
                                                  index, 'memory'),
                                              child: Image.memory(
                                                imageUint8List[index],
                                                width: (MediaQuery.of(context)
                                                            .size
                                                            .width *
                                                        0.63) /
                                                    4.5,
                                                height: 100.0,
                                                fit: BoxFit.cover,
                                              ),
                                            ),
                                            Positioned(
                                              right: 0,
                                              bottom: 0,
                                              child: Container(
                                                width: 20,
                                                height: 15,
                                                decoration: const BoxDecoration(
                                                  color: Colors.white,
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    topLeft: Radius.circular(8),
                                                    bottomRight:
                                                        Radius.circular(10),
                                                  ),
                                                ),
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.only(
                                                          top: 2),
                                                  child: Text(
                                                    '${index + 1}/${imageFile.length}',
                                                    style: const TextStyle(
                                                        color: Colors.black,
                                                        fontSize: 10),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ),
                                              ),
                                            ),
                                            Positioned(
                                              top: 4,
                                              right: 4,
                                              child: Container(
                                                width: 25,
                                                height: 25,
                                                decoration: BoxDecoration(
                                                  color: Colors.white,
                                                  borderRadius:
                                                      BorderRadius.circular(30),
                                                  boxShadow: [
                                                    BoxShadow(
                                                      color: Colors.black
                                                          .withOpacity(0.2),
                                                      spreadRadius: 1,
                                                      blurRadius: 1,
                                                      offset: const Offset(
                                                        0,
                                                        1,
                                                      ), // changes position of shadow
                                                    ),
                                                  ],
                                                ),
                                                child: GestureDetector(
                                                  child: const Icon(
                                                    Icons.delete,
                                                    size: 20,
                                                    color: Colors.black,
                                                  ),
                                                  onTap: () {
                                                    imageUrlFromFirestore
                                                        .removeAt(index);
                                                    imageUint8List
                                                        .removeAt(index);
                                                    imageFile.removeAt(index);
                                                    image!.removeAt(index);
                                                    imageUrl.removeAt(index);
                                                    imageLength =
                                                        imageLength - 1;
                                                    imageAddressAllForDropdown
                                                        .clear();
                                                    for (int i = 0;
                                                        i < imageUrl.length;
                                                        i++) {
                                                      imageAddressAllForDropdown
                                                          .add(
                                                              'รูปภาพ ${i + 1}');
                                                    }

                                                    for (int i = 0;
                                                        i < resultList.length;
                                                        i++) {
                                                      resultList[i]['Image'] =
                                                          '';
                                                      dropDownControllersimageAddress[
                                                              i]
                                                          .value = '';
                                                    }
                                                    setState(() {});
                                                  },
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    );
                            },
                          ),
                          InkWell(
                            onTap: () {
                              imageDialog();
                              // showQucikAlert(
                              //     context);
                            },
                            child: Container(
                              width:
                                  (MediaQuery.of(context).size.width * 0.63) /
                                      4.5,
                              height: 100.0,
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(8),
                              ),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  CircleAvatar(
                                    maxRadius: 30,
                                    backgroundColor: Colors.black,
                                    child: Icon(
                                      FFIcons.kpaperclipPlus,
                                      color: FlutterFlowTheme.of(context)
                                          .primaryBackground,
                                      size: 30.0,
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Align mapEdit(BuildContext context) {
    double mapZoom = 14.4746;
    bool loadMap = false;
    return Align(
      alignment: const AlignmentDirectional(0.00, 0.00),
      child: Padding(
        padding: const EdgeInsetsDirectional.fromSTEB(10.0, 5.0, 10.0, 5.0),
        child: Stack(
          children: [
            StatefulBuilder(builder: (context, setStateMap) {
              return Container(
                width: MediaQuery.sizeOf(context).width * 1.0,
                height: 500.0,
                decoration: BoxDecoration(
                  color: FlutterFlowTheme.of(context).secondaryBackground,
                  borderRadius: BorderRadius.circular(0.0),
                  shape: BoxShape.rectangle,
                ),
                child: loadMap
                    ? CircularLoading()
                    : GoogleMap(
                        onTap: (argument) async {
                          await mapDialog(resultList, null)
                              .whenComplete(() async {
                            if (mounted) {
                              setStateMap(
                                () {
                                  loadMap = true;
                                },
                              );
                            }
                            print('After Dialog Map');
                            print(resultList[0]['Latitude']);
                            late double lat;
                            late double lot;

                            if (resultList[0]['Latitude'] == '' ||
                                resultList[0]['Longitude'] == '') {
                              for (int i = 0; i < resultList.length; i++) {
                                if (resultList[i]['Latitude'] != '' &&
                                    resultList[i]['Longitude'] != '') {
                                  lat = double.parse(resultList[i]['Latitude']);
                                  lot =
                                      double.parse(resultList[i]['Longitude']);
                                  break;
                                } else {
                                  lat = 13.7563309;
                                  lot = 100.5017651;
                                }
                              }
                            } else {
                              lat = double.parse(resultList[0]['Latitude']);
                              lot = double.parse(resultList[0]['Longitude']);
                            }

                            print(lat);
                            print(lot);
                            _kGooglePlex = CameraPosition(
                              target: google_maps.LatLng(lat, lot),
                              zoom: 15,
                            );
                            markers.clear();

                            for (int i = 0; i < resultList.length; i++) {
                              if (resultList[i]['Latitude'] == '') {
                              } else {
                                double latIndex =
                                    double.parse(resultList[i]['Latitude']);
                                double lotIndex =
                                    double.parse(resultList[i]['Longitude']!);
                                print('hhhhhhhhhh');
                                print(resultList[i]['ID']);
                                // print(resultList[i]['Latitude']);
                                // print(resultList[i]['Longitude']);
                                print('hhhhhhhhhh');

                                markers.add(
                                  Marker(
                                    markerId: MarkerId(resultList[i]['ID']),
                                    position: google_maps.LatLng(
                                        latIndex, lotIndex), // ตำแหน่ง
                                    infoWindow: InfoWindow(
                                      title:
                                          'จุดที่ ${i + 1}', // ชื่อของปักหมุด
                                      snippet: resultList[i]['Latitude'],
                                      onTap: () async {
                                        await mapDialog(
                                                resultList, resultList[i]['ID'])
                                            .whenComplete(() {
                                          print('6666');
                                          _mapKey = GlobalKey();
                                          print('7777');
                                          if (mounted) {
                                            setState(() {});
                                          }
                                          print('88888');
                                        });
                                        //     .whenComplete(() {
                                        //   setState(
                                        //     () {
                                        //       loadMap = true;
                                        //     },
                                        //   );

                                        //   return;

                                        // });
                                      }, // คำอธิบายของปักหมุด
                                    ),
                                  ),
                                );
                                print('pppp');
                              }
                            }

                            _mapKey = GlobalKey();

                            print('after add map');
                            print(_kGooglePlex);
                            print(markers);

                            if (mounted) {
                              setStateMap(
                                () {
                                  loadMap = false;
                                },
                              );
                            }
                          });
                        },

                        key: _mapKey,
                        mapType: ui_maps.MapType.hybrid,
                        initialCameraPosition: _kGooglePlex,
                        markers: markers, // เพิ่มนี่
                        onMapCreated: (GoogleMapController controller) async {
                          mapController2.complete(controller);
                        },
                        onCameraMove: (CameraPosition position) {
                          mapZoom = position.zoom;
                        },
                      ),
              );
            }),
            //=============================================================
            Align(
              alignment: Alignment.topCenter,
              child: Padding(
                padding: EdgeInsetsDirectional.fromSTEB(30.0, 15.0, 30.0, 5.0),
                child: Row(
                  mainAxisSize: MainAxisSize.max,
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Container(
                      width: MediaQuery.sizeOf(context).width * 0.4,
                      height: 25.0,
                      decoration: BoxDecoration(
                        color: FlutterFlowTheme.of(context).accent3,
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      alignment: AlignmentDirectional(0.00, 0.00),
                      child: Row(
                        children: [
                          Expanded(
                            child: Padding(
                              padding: const EdgeInsets.only(top: 10.0),
                              child: TextFormField(
                                enabled: false,
                                // controller: _model
                                //     .textController18,
                                // focusNode: _model
                                //     .textFieldFocusNode18,
                                autofocus: false,
                                obscureText: false,
                                decoration: InputDecoration(
                                  isDense: true,
                                  labelStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  hintText: '        ค้นหาสถานที่',
                                  hintStyle: FlutterFlowTheme.of(context)
                                      .labelMedium
                                      .override(
                                        fontFamily: 'Kanit',
                                        color: FlutterFlowTheme.of(context)
                                            .primaryText,
                                      ),
                                  enabledBorder: InputBorder.none,
                                  focusedBorder: InputBorder.none,
                                  errorBorder: InputBorder.none,
                                  focusedErrorBorder: InputBorder.none,
                                  // suffixIcon: Icon(
                                  //   Icons.search_sharp,
                                  // ),
                                ),
                                style: FlutterFlowTheme.of(context).bodyMedium,
                                textAlign: TextAlign.center,
                                // validator: _model
                                //     .textController18Validator
                                //     .asValidator(
                                //         context),
                              ),
                            ),
                          ),
                          Icon(
                            Icons.search_sharp,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  StreamBuilder<QuerySnapshot<Map<String, dynamic>>> priceTableApiEdit() {
    return StreamBuilder(
        stream: FirebaseFirestore.instance.collection('ตารางราคา').snapshots(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return SizedBox();
          }
          if (snapshot.hasError) {
            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
          }
          if (!snapshot.hasData) {
            return Text('ไม่พบข้อมูล');
          }
          if (snapshot.data!.docs.isEmpty) {
            print(snapshot.data);
          }

          Map<String, dynamic> priceTable = {};
          List<String> priceTableName = [];

          for (int index = 0; index < snapshot.data!.docs.length; index++) {
            final Map<String, dynamic> docData =
                snapshot.data!.docs[index].data() as Map<String, dynamic>;

            if (docData['PLIST_DESC2'] != '') {
              priceTable['key${index}'] = docData;
              priceTableName.add(docData['PLIST_DESC2']);
            }
          }
          return Align(
            alignment: AlignmentDirectional(0.00, 0.00),
            child: Padding(
              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
              child: SizedBox(
                height: 55.0,
                child: FlutterFlowDropDown<String>(
                  controller: _model.dropDownValueController6 ??=
                      FormFieldController<String>(null),
                  options: priceTableName,
                  //  [
                  //   'ตารางราคา 1',
                  //   'ตารางราคา 2',
                  //   'ตารางราคา 3'
                  // ],
                  onChanged: (val) =>
                      setState(() => _model.dropDownValue6 = val),
                  height: 45.0,
                  textStyle: FlutterFlowTheme.of(context).bodyMedium,
                  hintText:
                      'ตารางราคา (MFOOD API) (เพื่อใช้ผูกกับที่อยู่ในการจัดส่ง)',
                  icon: Icon(
                    Icons.arrow_left_outlined,
                    color: FlutterFlowTheme.of(context).secondaryText,
                    size: 24.0,
                  ),
                  elevation: 2.0,
                  borderColor: FlutterFlowTheme.of(context).alternate,
                  borderWidth: 2.0,
                  borderRadius: 8.0,
                  margin: EdgeInsetsDirectional.fromSTEB(16.0, 4.0, 16.0, 4.0),
                  hidesUnderline: true,
                  isSearchable: false,
                  isMultiSelect: false,
                ),
              ),
            ),
          );
        });
  }

  StatefulBuilder addressShopEdit() {
    return StatefulBuilder(builder: (context, setState) {
      if (resultList.length == total3) {
      } else {
        for (int i = resultList.length; i < total3; i++) {
          print('add Address in addressShopEdit');
          print(resultList.length);
          print(total3);
          resultList.add({
            'ID': DateTime.now().toString(),
            'รหัสสาขา': '', //new
            'ชื่อสาขา': '', //new
            'HouseNumber': '',
            'VillageName': '',
            'Road': '', //new
            'Province': '',
            'District': '',
            'SubDistrict': '',
            'PostalCode': '',
            'Latitude': '',
            'Longitude': '',
            'Image': '',
            'ผู้ติดต่อ': '', //new
            'ตำแหน่ง': '', //new
            'โทรศัพท์': '', //new
          });
          print(resultList.length);

          selected.add({
            'province_id': null,
            'amphure_id': null,
            'tambon_id': null,
          });

          postalCodeController!.add(TextEditingController());

          amphures!.add([]);
          tambons!.add([]);

          textFieldFocusSaka!.add(FocusNode());
          textFieldFocusRoad!.add(FocusNode());
          textFieldFocusNameSaka!.add(FocusNode());
          textFieldFocusPhone!.add(FocusNode());
          textFieldFocusType!.add(FocusNode());
          textFieldFocusNameContract!.add(FocusNode());
          textFieldFocusHouseNumber!.add(FocusNode());
          textFieldFocusVillageName!.add(FocusNode());
          textFieldFocusPostalCode!.add(FocusNode());
          textFieldFocusLatitude!.add(FocusNode());
          textFieldFocusLongitude!.add(FocusNode());

          // dropDownValueControllerProvince
          //     .add(FormFieldController<String>(''));
          // dropDownValueControllerDistrict
          //     .add(FormFieldController<String>(''));
          // dropDownValueControllerSubDistrict
          //     .add(FormFieldController<String>(''));
          latList!.add(TextEditingController());
          lotList!.add(TextEditingController());
          dropDownControllersimageAddress.add(FormFieldController<String>(''));
          print(resultList.length);
        }
      }
      print(resultList.length);
      return Padding(
        padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
        child: Column(
          children: [
            for (int index = 0; index < resultList.length; index++)
              Column(
                children: [
                  Row(
                    mainAxisSize: MainAxisSize.max,
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        ' ที่อยู่ในการจัดส่ง ลำดับที่ ${index + 1}',
                        style: FlutterFlowTheme.of(context).bodySmall,
                      ),
                      total3 == 1
                          ? SizedBox()
                          : index + 1 == total3
                              ? Padding(
                                  padding: EdgeInsets.only(
                                    right: 5.0,
                                  ),
                                  child: GestureDetector(
                                    onTap: () => setState(() {
                                      total3 = total3 - 1;

                                      resultList.removeLast();
                                      selected.removeLast();
                                      amphures!.removeLast();
                                      tambons!.removeLast();
                                      textFieldFocusHouseNumber!.removeLast();
                                      textFieldFocusVillageName!.removeLast();
                                      textFieldFocusPostalCode!.removeLast();
                                      textFieldFocusLatitude!.removeLast();
                                      textFieldFocusLongitude!.removeLast();
                                      // dropDownValueControllerProvince
                                      //     .removeLast();
                                      // dropDownValueControllerDistrict
                                      //     .removeLast();
                                      // dropDownValueControllerSubDistrict
                                      //     .removeLast();
                                      latList!.removeLast();
                                      lotList!.removeLast();
                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    }),
                                    child: Icon(
                                      Icons.remove_circle_outline_outlined,
                                      size: 12,
                                      color: Colors.red.shade900,
                                    ),
                                  ),
                                )
                              : SizedBox()
                    ],
                  ),
                  const SizedBox(
                    height: 5,
                  ),
                  TextFormField(
                    // controller: _model.textController15,
                    // readOnly: true,

                    initialValue: resultList[index]['รหัสสาขา'],
                    onChanged: (value) {
                      resultList[index]['รหัสสาขา'] = value;

                      refreshAddressForDropdown(setState, index);

                      toSetState();
                    },
                    focusNode: textFieldFocusSaka![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'กรุณาพิมพ์รหัสสาขา',
                      hintText: 'กรุณาพิมพ์รหัสสาขา',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    validator:
                        _model.textController15Validator.asValidator(context),
                  ),
                  const SizedBox(
                    height: 10,
                  ),
                  TextFormField(
                    // controller: _model.textController15,
                    // readOnly: true,

                    initialValue: resultList[index]['ชื่อสาขา'],
                    onChanged: (value) {
                      resultList[index]['ชื่อสาขา'] = value;

                      refreshAddressForDropdown(setState, index);

                      toSetState();
                    },
                    focusNode: textFieldFocusNameSaka![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'กรุณาพิมพ์ชื่อสาขา',
                      hintText: 'กรุณาพิมพ์ชื่อสาขา',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    validator:
                        _model.textController15Validator.asValidator(context),
                  ),

                  const SizedBox(
                    height: 10,
                  ),
                  const SizedBox(
                    height: 5,
                  ),
                  TextFormField(
                    // controller: _model.textController15,
                    initialValue: resultList[index]['HouseNumber'],
                    onChanged: (value) {
                      resultList[index]['HouseNumber'] = value;

                      refreshAddressForDropdown(setState, index);

                      toSetState();
                    },
                    focusNode: textFieldFocusHouseNumber![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'กรุณาพิมพ์ชื่อบ้านเลขที่',
                      hintText: 'กรุณาพิมพ์ชื่อบ้านเลขที่',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    validator:
                        _model.textController15Validator.asValidator(context),
                  ),
                  const SizedBox(
                    height: 5,
                  ),
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                    child: TextFormField(
                      // controller: _model.textController16,
                      initialValue: resultList[index]['VillageName'],
                      onChanged: (value) {
                        resultList[index]['VillageName'] = value;
                        refreshAddressForDropdown(setState, index);

                        toSetState();
                      },
                      focusNode: textFieldFocusVillageName![index],
                      autofocus: false,
                      obscureText: false,
                      decoration: InputDecoration(
                        isDense: true,
                        labelStyle: FlutterFlowTheme.of(context).labelMedium,
                        labelText: 'ชื่อหมู่บ้าน',
                        hintText: 'ชื่อหมู่บ้าน',
                        hintStyle: FlutterFlowTheme.of(context).labelMedium,
                        enabledBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).alternate,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                        focusedBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).primary,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                        errorBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).error,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                        focusedErrorBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).error,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                      ),
                      style: FlutterFlowTheme.of(context).bodyMedium,
                      textAlign: TextAlign.start,
                      validator:
                          _model.textController16Validator.asValidator(context),
                    ),
                  ), //=============================================================
                  const SizedBox(
                    height: 5,
                  ),
                  TextFormField(
                    // controller: _model.textController15,
                    // readOnly: true,

                    initialValue: resultList[index]['Road'],
                    onChanged: (value) {
                      resultList[index]['Road'] = value;
                      refreshAddressForDropdown(setState, index);

                      toSetState();
                    },
                    focusNode: textFieldFocusRoad![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'กรุณาพิมพ์ชื่อถนน',
                      hintText: 'กรุณาพิมพ์ชื่อถนน',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    validator:
                        _model.textController15Validator.asValidator(context),
                  ),
                  const SizedBox(
                    height: 10,
                  ),
                  dropdownList(
                    label: 'Province: ',
                    id: 'province_id',
                    list: provinces,
                    child: 'amphure',
                    childsId: ['amphure_id', 'tambon_id'],
                    setChilds: [setAmphures, setTambons],
                    index: index,
                  ),
                  SizedBox(height: 10.0),
                  dropdownList(
                    label: 'District: ',
                    id: 'amphure_id',
                    list: amphures![index],
                    child: 'tambon',
                    childsId: ['tambon_id'],
                    setChilds: [setTambons],
                    index: index,
                  ),
                  SizedBox(height: 10.0),
                  dropdownList(
                    label: 'Sub-district: ',
                    id: 'tambon_id',
                    list: tambons![index],
                    setChilds: null,
                    childsId: null,
                    index: index,
                  ),
                  const SizedBox(
                    height: 5,
                  ),

                  //======================= รหัสไปรษณีย์ ======================================
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                    child: TextFormField(
                      controller: postalCodeController![index],
                      // initialValue: resultList[index]
                      //     ['PostalCode'],
                      onChanged: (value) {
                        resultList[index]['PostalCode'] = value;

                        refreshAddressForDropdown(setState, index);

                        toSetState();
                      },
                      focusNode: textFieldFocusPostalCode![index],
                      autofocus: false,
                      obscureText: false,
                      decoration: InputDecoration(
                        isDense: true,
                        labelStyle: FlutterFlowTheme.of(context).labelMedium,
                        labelText: 'รหัสไปรษณีย์',
                        hintText: 'รหัสไปรษณีย์',
                        hintStyle: FlutterFlowTheme.of(context).labelMedium,
                        enabledBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).alternate,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                        focusedBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).primary,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                        errorBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).error,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                        focusedErrorBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: FlutterFlowTheme.of(context).error,
                            width: 2.0,
                          ),
                          borderRadius: BorderRadius.circular(8.0),
                        ),
                      ),
                      style: FlutterFlowTheme.of(context).bodyMedium,
                      textAlign: TextAlign.start,
                      // validator: _model
                      //     .textController17Validator
                      //     .asValidator(context),
                      keyboardType: TextInputType.number,
                      inputFormatters: [
                        FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                      ],
                      validator: (value) {
                        if (value!.isNotEmpty) {
                          if (value.length > 5) {
                            return 'กรุณาใส่รหัสไปรษณีย์ 5 หลักค่ะ';
                          }
                        }

                        return null;
                      },
                    ),
                  ),
                  const SizedBox(
                    height: 5,
                  ),
                  TextFormField(
                    // controller: _model.textController15,
                    // readOnly: true,

                    initialValue: resultList[index]['ผู้ติดต่อ'],
                    onChanged: (value) {
                      resultList[index]['ผู้ติดต่อ'] = value;

                      refreshAddressForDropdown(setState, index);

                      toSetState();
                    },
                    focusNode: textFieldFocusNameContract![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'กรุณาพิมพ์ชื่อผู้ติดต่อ',
                      hintText: 'กรุณาพิมพ์ชื่อผู้ติดต่อ',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    validator:
                        _model.textController15Validator.asValidator(context),
                  ),
                  const SizedBox(
                    height: 10,
                  ),
                  TextFormField(
                    // controller: _model.textController15,
                    // readOnly: true,

                    initialValue: resultList[index]['ตำแหน่ง'],
                    onChanged: (value) {
                      resultList[index]['ตำแหน่ง'] = value;

                      refreshAddressForDropdown(setState, index);

                      toSetState();
                    },
                    focusNode: textFieldFocusType![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'กรุณาพิมพ์ชื่อตำแหน่ง',
                      hintText: 'กรุณาพิมพ์ชื่อตำแหน่ง',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    validator:
                        _model.textController15Validator.asValidator(context),
                  ),
                  const SizedBox(
                    height: 10,
                  ),
                  TextFormField(
                    // controller: _model.textController15,
                    // readOnly: true,

                    initialValue: resultList[index]['โทรศัพท์'],
                    onChanged: (value) {
                      resultList[index]['โทรศัพท์'] = value;

                      refreshAddressForDropdown(setState, index);

                      toSetState();
                    },
                    focusNode: textFieldFocusPhone![index],
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'กรุณาพิมพ์โทรศัพท์',
                      hintText: 'กรุณาพิมพ์โทรศัพท์',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.start,
                    validator:
                        _model.textController15Validator.asValidator(context),
                  ),
                  SizedBox(
                    height: 5,
                  ),
                  //======================= ละติจูด ลองติจูด ======================================
                  Padding(
                    padding:
                        EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 15.0),
                    child: Column(
                      mainAxisSize: MainAxisSize.min,
                      mainAxisAlignment: MainAxisAlignment.start,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // Text(
                        //   ' ละติดจูด ลองติจูด สามารถค้นหาได้จากการค้นหาในแผนที่',
                        //   style:
                        //       FlutterFlowTheme.of(context)
                        //           .bodySmall,
                        // ),
                        Row(
                          mainAxisSize: MainAxisSize.max,
                          mainAxisAlignment: MainAxisAlignment.spaceAround,
                          children: [
                            Expanded(
                              child: TextFormField(
                                controller: latList![index],
                                onChanged: (value) {
                                  resultList[index]['Latitude'] = value;

                                  refreshAddressForDropdown(setState, index);

                                  toSetState();
                                },
                                focusNode: textFieldFocusLatitude![index],
                                autofocus: false,
                                obscureText: false,
                                decoration: InputDecoration(
                                  isDense: true,
                                  labelStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  labelText: 'ละติจูด',
                                  hintText: 'ละติจูด',
                                  hintStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  enabledBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color:
                                          FlutterFlowTheme.of(context).primary,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedErrorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                ),
                                style: FlutterFlowTheme.of(context).bodyMedium,
                                textAlign: TextAlign.start,
                                // validator: _model
                                //     .textController171Validator
                                //     .asValidator(context),
                                keyboardType: TextInputType.number,
                                // inputFormatters: [
                                //   FilteringTextInputFormatter
                                //       .allow(RegExp(
                                //           r'[0-9]')),
                                // ],
                                validator: (value) {
                                  return null;
                                },
                              ),
                            ),
                            SizedBox(
                              width: 10,
                            ),
                            Expanded(
                              child: TextFormField(
                                controller: lotList![index],
                                onChanged: (value) {
                                  resultList[index]['Longitude'] = value;

                                  refreshAddressForDropdown(setState, index);

                                  toSetState();
                                },
                                focusNode: textFieldFocusLongitude![index],
                                autofocus: false,
                                obscureText: false,
                                decoration: InputDecoration(
                                  isDense: true,
                                  labelStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  hintText: 'ลองติจูด',
                                  labelText: 'ลองติจูด',
                                  hintStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  enabledBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color:
                                          FlutterFlowTheme.of(context).primary,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedErrorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                ),
                                style: FlutterFlowTheme.of(context).bodyMedium,
                                textAlign: TextAlign.start,
                                // validator: _model
                                //     .textController172Validator
                                //     .asValidator(context),
                                keyboardType: TextInputType.number,
                                // inputFormatters: [
                                //   FilteringTextInputFormatter
                                //       .allow(RegExp(
                                //           r'[0-9]')),
                                // ],
                                validator: (value) {
                                  // if (value!.isNotEmpty) {
                                  //   if (value.length >
                                  //       5) {
                                  //     return 'กรุณาใส่รหัสไปรษณีย์ 5 หลักค่ะ';
                                  //   }
                                  // }

                                  return null;
                                },
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                  //======================= รูปภาพอ้างอิง ======================================
                  Align(
                    alignment: AlignmentDirectional(0.00, 0.00),
                    child: Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 10.0),
                      child: FlutterFlowDropDown<String>(
                        controller: dropDownControllersimageAddress[index],
                        options: imageAddressAllForDropdown,
                        onChanged: (val) {
                          if (mounted) {
                            setState(() {
                              String result =
                                  val!.replaceAll(RegExp(r'[^0-9]'), '');
                              print('rrrr');
                              print(result);
                              resultList[index]['Image'] = result;
                              print(resultList[index]['Image']);
                            });
                          }
                        },
                        height: 55.0,
                        textStyle: FlutterFlowTheme.of(context).bodyMedium,
                        hintText: 'เลือก 1 รูปภาพไว้อ้างอิงร้านค้า',
                        icon: Icon(
                          Icons.arrow_left_outlined,
                          color: FlutterFlowTheme.of(context).secondaryText,
                          size: 24.0,
                        ),
                        elevation: 2.0,
                        borderColor: checkSummit
                            ? Colors.red.shade700
                            : FlutterFlowTheme.of(context).alternate,
                        borderWidth: 2.0,
                        borderRadius: 8.0,
                        margin: EdgeInsetsDirectional.fromSTEB(
                            16.0, 4.0, 16.0, 4.0),
                        hidesUnderline: true,
                        isSearchable: false,
                        isMultiSelect: false,
                      ),
                    ),
                  ),
                ],
              ),
            //=========================== ปุ่ม เพิ่มที่อยู่ ==================================
            Padding(
              padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
              child: Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  GestureDetector(
                    onTap: () => setState(() => total3 = total3 + 1),
                    child: Column(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Icon(
                              Icons.add_circle,
                              color: FlutterFlowTheme.of(context).secondaryText,
                              size: 24.0,
                            ),
                          ],
                        ),
                        Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Text(
                              'เพิ่มที่อยู่',
                              style: FlutterFlowTheme.of(context).bodyMedium,
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      );
    });
  }

  StatefulBuilder groupProdutcoBuyEdit() {
    return StatefulBuilder(
      builder: (context, setState) {
        if (dropDownControllers2.length == total) {
        } else {
          for (int i = dropDownControllers2.length; i < total2; i++) {
            dropDownControllers2.add(FormFieldController<String>(''));
            dropDownValues2.add('');
          }
        }
        return Column(
          children: [
            for (int index = 0; index < total2; index++)
              Align(
                alignment: AlignmentDirectional(0.00, 0.00),
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                  child: Column(
                    children: [
                      Row(
                        mainAxisSize: MainAxisSize.max,
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text(
                            '  กลุ่มสินค้าที่สั่งชื้อ ลำดับที่ ${index + 1}',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                          total2 == 1
                              ? SizedBox()
                              : index + 1 == total2
                                  ? Padding(
                                      padding: EdgeInsets.only(
                                        right: 5.0,
                                      ),
                                      child: GestureDetector(
                                        onTap: () =>
                                            setState(() => total2 = total2 - 1),
                                        child: Icon(
                                          Icons.remove_circle_outline_outlined,
                                          size: 12,
                                          color: Colors.red.shade900,
                                        ),
                                      ),
                                    )
                                  : SizedBox()
                        ],
                      ),
                      SizedBox(
                        height: 2,
                      ),
                      SizedBox(
                        height: 55.0,
                        child: FlutterFlowDropDown<String>(
                          // controller: _model.dropDownValueController1 ??=
                          //     FormFieldController<String>(null),
                          controller: dropDownControllers2[index],
                          options: categoryNameList

                          // [
                          //   'ประเภทสินค้า 1',
                          //   'ประเภทสินค้า 2',
                          //   'ประเภทสินค้า 3',
                          //   'ประเภทสินค้า 4',
                          //   'ประเภทสินค้า 5'
                          // ]
                          ,
                          searchHintText: 'กลุ่มสินค้าที่สั่งชื้อ',
                          // onChanged: (val) =>
                          //     setState(() => _model.dropDownValue1 = val),
                          onChanged: (val) => setState(() {
                            dropDownValues2[index] = val;
                          }),
                          height: 45.0,
                          textStyle: FlutterFlowTheme.of(context).bodyMedium,
                          hintText: 'กลุ่มสินค้าที่สั่งชื้อ',
                          icon: Icon(
                            Icons.arrow_left_outlined,
                            color: FlutterFlowTheme.of(context).secondaryText,
                            size: 24.0,
                          ),
                          elevation: 2.0,
                          borderColor: FlutterFlowTheme.of(context).alternate,
                          borderWidth: 2.0,
                          borderRadius: 8.0,
                          margin: EdgeInsetsDirectional.fromSTEB(
                              16.0, 4.0, 16.0, 4.0),
                          hidesUnderline: true,
                          isSearchable: false,
                          isMultiSelect: false,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            //===========================กลุ่มสินค้าที่สั่งชื้อ ปุ่ม==================================
            Padding(
              padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
              child: Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  GestureDetector(
                    onTap: () => setState(() => total2 = total2 + 1),
                    child: Column(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Icon(
                              Icons.add_circle,
                              color: FlutterFlowTheme.of(context).secondaryText,
                              size: 24.0,
                            ),
                          ],
                        ),
                        Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Text(
                              'เลือกกลุ่มสินค้าเพิ่ม',
                              style: FlutterFlowTheme.of(context).bodyMedium,
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ],
        );
      },
    );
  }

  Padding dateToWorkEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
      child: Row(
        mainAxisSize: MainAxisSize.max,
        children: [
          Text(
            'ระยะเวลาเปิดดำเนินการ',
            style: FlutterFlowTheme.of(context).bodyMedium,
          ),
          Expanded(
            child: Padding(
              padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
              child: TextFormField(
                controller: _model.textController12,
                focusNode: _model.textFieldFocusNode12,
                autofocus: false,
                obscureText: false,
                decoration: InputDecoration(
                  isDense: true,
                  labelStyle: FlutterFlowTheme.of(context).labelMedium,
                  labelText: 'ระยะเวลาเปิดดำเนินการ',
                  hintText: 'ระยะเวลาเปิดดำเนินการ',
                  hintStyle: FlutterFlowTheme.of(context).labelMedium,
                  enabledBorder: OutlineInputBorder(
                    borderSide: BorderSide(
                      color: FlutterFlowTheme.of(context).alternate,
                      width: 2.0,
                    ),
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderSide: BorderSide(
                      color: FlutterFlowTheme.of(context).primary,
                      width: 2.0,
                    ),
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  errorBorder: OutlineInputBorder(
                    borderSide: BorderSide(
                      color: FlutterFlowTheme.of(context).error,
                      width: 2.0,
                    ),
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  focusedErrorBorder: OutlineInputBorder(
                    borderSide: BorderSide(
                      color: FlutterFlowTheme.of(context).error,
                      width: 2.0,
                    ),
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                ),
                style: FlutterFlowTheme.of(context).bodyMedium,
                textAlign: TextAlign.left,
                // validator: _model
                //     .textController12Validator
                //     .asValidator(context),
                keyboardType: TextInputType.text,
                // inputFormatters: [
                //   FilteringTextInputFormatter.allow(
                //       RegExp(r'[0-9]')),
                // ],
                validator: (value) {
                  // if (value!.isNotEmpty) {
                  //   if (value.length > 2) {
                  //     return 'เลข 1 - 2 หลักค่ะ';
                  //   }
                  // }

                  return null;
                },
              ),
            ),
          ),
        ],
      ),
    );
  }

  StatefulBuilder groupProductEdit() {
    return StatefulBuilder(
      builder: (context, setState) {
        if (productType!.length == total) {
        } else {
          for (int i = productType!.length; i < total; i++) {
            productType!.add(TextEditingController());
            textFieldFocusProductType!.add(FocusNode());
          }
        }
        return Column(
          children: [
            for (int index = 0; index < total; index++)
              Align(
                alignment: AlignmentDirectional(0.00, 0.00),
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                  child: Column(
                    children: [
                      Row(
                        mainAxisSize: MainAxisSize.max,
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text(
                            '  ประเภทสินค้าที่ขายในปัจจุบัน ลำดับที่ ${index + 1}',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                          total == 1
                              ? SizedBox()
                              : index + 1 == total
                                  ? Padding(
                                      padding: EdgeInsets.only(
                                        right: 5.0,
                                      ),
                                      child: GestureDetector(
                                        onTap: () {
                                          setState(() {
                                            productType!.removeLast();
                                            textFieldFocusProductType!
                                                .removeLast();
                                            total = total - 1;
                                          });
                                        },
                                        child: Icon(
                                          Icons.remove_circle_outline_outlined,
                                          size: 12,
                                          color: Colors.red.shade900,
                                        ),
                                      ),
                                    )
                                  : SizedBox()
                        ],
                      ),
                      SizedBox(
                        height: 2,
                      ),
                      Padding(
                        padding:
                            EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                        child: TextFormField(
                          controller: productType![index],
                          focusNode: textFieldFocusProductType![index],
                          autofocus: false,
                          obscureText: false,
                          decoration: InputDecoration(
                            labelText: 'ประเภทสินค้า',
                            isDense: true,
                            labelStyle:
                                FlutterFlowTheme.of(context).labelMedium,
                            hintText: 'ประเภทสินค้า',
                            hintStyle: FlutterFlowTheme.of(context).labelMedium,
                            enabledBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).alternate,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            focusedBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).primary,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            errorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            focusedErrorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                          ),
                          style: FlutterFlowTheme.of(context).bodyMedium,
                          textAlign: TextAlign.start,
                          // validator: _model.textController11Validator
                          //     .asValidator(context),
                          keyboardType: TextInputType.text,
                          // inputFormatters: [
                          //   FilteringTextInputFormatter
                          //       .allow(RegExp(r'[0-9]')),
                          // ],
                          validator: (value) {
                            // if (value!.isNotEmpty) {
                            //   if (value.length > 2) {
                            //     return 'เลข 1 - 2 หลักค่ะ';
                            //   }
                            // }

                            return null;
                          },
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            //=============================================================
            Padding(
              padding: EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
              child: Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  GestureDetector(
                    onTap: () => setState(() => total = total + 1),
                    child: Column(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Icon(
                              Icons.add_circle,
                              color: FlutterFlowTheme.of(context).secondaryText,
                              size: 24.0,
                            ),
                          ],
                        ),
                        Row(
                          mainAxisSize: MainAxisSize.max,
                          children: [
                            Text(
                              'เลือกกลุ่มสินค้าเพิ่ม',
                              style: FlutterFlowTheme.of(context).bodyMedium,
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ],
        );
      },
    );
  }

  Padding goalToSellEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: TextFormField(
        controller: _model.textController11,
        focusNode: _model.textFieldFocusNode11,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          labelText: 'เป้าการขาย',
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          hintText: 'เป้าการขาย',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        // validator: _model.textController11Validator
        //     .asValidator(context),
        keyboardType: TextInputType.number,
        inputFormatters: [
          FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
        ],
        validator: (value) {
          // if (value!.isNotEmpty) {
          //   if (value.length > 2) {
          //     return 'เลข 1 - 2 หลักค่ะ';
          //   }
          // }

          return null;
        },
      ),
    );
  }

  Padding shopNameEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: TextFormField(
        controller: _model.textController10,
        focusNode: _model.textFieldFocusNode10,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          labelText:
              widget.type == 'Company' ? 'ชื่อร้าน' : 'ชื่อร้าน/แผงในตลาด',
          hintText:
              widget.type == 'Company' ? 'ชื่อร้าน' : 'ชื่อร้าน/แผงในตลาด',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        validator: _model.textController10Validator.asValidator(context),
      ),
    );
  }

  Padding dateToSendEdit() {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
      child: StatefulBuilder(builder: (context, setState) {
        return GestureDetector(
          onTap: () async {
            print('Gesture');
            // await selectDateToSend(context);'
            bottomPickerToSend(context);
            setState(
              () {
                print(_model.textController7.text);
                print(_model.textController8.text);
                print(_model.textController9.text);
              },
            );
          },
          child: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Text(
                'วัน / เดือน / ปี ที่เริ่มจัดส่ง ',
                style: FlutterFlowTheme.of(context).bodyMedium,
              ),
              SizedBox(
                  width: 40,
                  child: Icon(
                    Icons.calendar_month,
                    color: FlutterFlowTheme.of(context).alternate,
                  )),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPickerToSend(context);
                    },
                    readOnly: true,
                    controller: _model.textController7,
                    focusNode: _model.textFieldFocusNode7,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'วันที่',
                      hintText: 'วันที่',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    // validator: _model.textController7Validator
                    //     .asValidator(context),
                    keyboardType: TextInputType.number,
                    inputFormatters: [
                      FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                    ],
                    validator: (value) {
                      if (value!.isNotEmpty) {
                        if (value.length > 2) {
                          return 'เลข 1 - 2 หลักค่ะ';
                        }
                      }

                      return null;
                    },
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPickerToSend(context);
                    },
                    readOnly: true,
                    controller: _model.textController8,
                    focusNode: _model.textFieldFocusNode8,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'เดือน',
                      hintText: 'เดือน',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    validator:
                        _model.textController8Validator.asValidator(context),
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPickerToSend(context);
                    },
                    readOnly: true,
                    controller: _model.textController9,
                    focusNode: _model.textFieldFocusNode9,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'พ.ศ.',
                      hintText: 'พ.ศ.',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    // validator: _model.textController9Validator
                    //     .asValidator(context),
                    keyboardType: TextInputType.number,
                    inputFormatters: [
                      FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                    ],
                    validator: (value) {
                      if (value!.isNotEmpty) {
                        if (value.length > 4) {
                          return 'ตัวเลข 4 หลักค่ะ';
                        }
                      }

                      return null;
                    },
                  ),
                ),
              ),
            ],
          ),
        );
      }),
    );
  }

  Padding phoneEdit(BuildContext context) {
    return Padding(
      padding: const EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: TextFormField(
        controller: _model.textController6,
        focusNode: _model.textFieldFocusNode6,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          labelText: 'เบอร์โทรศัพท์',
          hintText: 'เบอร์โทรศัพท์',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        // validator: _model.textController6Validator
        //     .asValidator(context),
        keyboardType: TextInputType.number,
        inputFormatters: [
          FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
        ],
        validator: (value) {
          // if (value!.isNotEmpty) {
          //   if (value.length != 10) {
          //     return 'กรุณาใส่เบอร์โทรศัพท์ 10 หลักเท่านั้นค่ะ';
          //   }
          // }

          return null;
        },
      ),
    );
  }

  StatefulBuilder idCustomerEdit() {
    //เลขบัตรประชาชน
    return StatefulBuilder(builder: (context, setState) {
      return Padding(
        padding: const EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            _model.textController5.text.length < 13
                ? Text('!! กรุณากรอกเลข 13 หลักค่ะ',
                    style: FlutterFlowTheme.of(context)
                        .redSmall //redSmall orangeSmall

                    )
                : checkID == 'red'
                    ? Text('!! หมายเลขนี้มีสมาชิกในระบบแล้ว',
                        style: FlutterFlowTheme.of(context)
                            .redSmall //redSmall orangeSmall

                        )
                    : checkID == 'orange'
                        ? Text('ลูกค้าที่เคย Reject',
                            style: FlutterFlowTheme.of(context)
                                .orangeSmall //redSmall orangeSmall

                            )
                        : Text('สามารถเปิดบัญชีได้',
                            style: FlutterFlowTheme.of(context)
                                .greenSmall //redSmall orangeSmall

                            ),
            SizedBox(
              height: 5,
            ),
            TextFormField(
              onChanged: (value) async {
                print(value.length);
                if (value.length == 13) {
                  FirebaseFirestore firestore = FirebaseFirestore.instance;

                  QuerySnapshot querySnapshot = await firestore
                      .collection('Customer')
                      .where('เลขบัตรประชาชน',
                          isEqualTo: _model.textController5.text)
                      .get();

                  if (querySnapshot.docs.isNotEmpty) {
                    querySnapshot.docs.forEach((doc) {
                      Map<String, dynamic> data =
                          doc.data() as Map<String, dynamic>;
                      print('Field Value: $data');

                      var fieldValue = data['สถานะ'];
                      var fieldValue2 = data['รอการอนุมัติ'];
                      var fieldValue3 = data['บันทึกพร้อมตรวจ'];

                      if (!fieldValue && !fieldValue2 && !fieldValue3) {
                        checkID = 'orange';
                        setState(() {});
                      } else {
                        checkID = 'red';
                        setState(() {});
                      }
                    });
                  } else {
                    print('ไม่พบเอกสารที่ตรงกับเงื่อนไข');
                    checkID = 'green';
                    setState(() {});
                  }
                } else {
                  checkID = 'green';
                  setState(() {});
                }
              },
              controller: _model.textController5,
              focusNode: _model.textFieldFocusNode5,
              autofocus: false,
              obscureText: false,

              decoration: InputDecoration(
                isDense: true,
                labelStyle: FlutterFlowTheme.of(context).labelMedium,
                labelText: 'เลขที่บัตรประชาชน',
                hintText: 'เลขที่บัตรประชาชน',
                hintStyle: FlutterFlowTheme.of(context).labelMedium,
                enabledBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: FlutterFlowTheme.of(context).alternate,
                    width: 2.0,
                  ),
                  borderRadius: BorderRadius.circular(8.0),
                ),
                focusedBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: FlutterFlowTheme.of(context).primary,
                    width: 2.0,
                  ),
                  borderRadius: BorderRadius.circular(8.0),
                ),
                errorBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: FlutterFlowTheme.of(context).error,
                    width: 2.0,
                  ),
                  borderRadius: BorderRadius.circular(8.0),
                ),
                focusedErrorBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: FlutterFlowTheme.of(context).error,
                    width: 2.0,
                  ),
                  borderRadius: BorderRadius.circular(8.0),
                ),
              ),
              style: FlutterFlowTheme.of(context).bodyMedium,
              textAlign: TextAlign.start,
              // validator: _model.textController5Validator
              //     .asValidator(context),
              keyboardType: TextInputType.number,
              inputFormatters: [
                LengthLimitingTextInputFormatter(13),
                FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
              ],
              validator: (value) {
                if (value!.isNotEmpty) {
                  if (value.length != 13) {
                    return 'กรุณาใส่เลขที่บัตรประชาชน 13 หลักเท่านั้นค่ะ';
                  }
                }

                return null;
              },
            ),
          ],
        ),
      );
    });
  }

  Padding companyFundEdit(BuildContext context) {
    return Padding(
      padding: const EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: TextFormField(
        controller: _model.textController5Company,
        focusNode: _model.textFieldFocusNode5Company,
        autofocus: false,
        obscureText: false,

        decoration: InputDecoration(
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          hintText: 'ทุนจดทะเบียน',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        // validator: _model.textController5Validator
        //     .asValidator(context),
        keyboardType: TextInputType.number,
        inputFormatters: [
          FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
        ],
        validator: (value) {
          // if (value!.isNotEmpty) {
          //   if (value.length != 13) {
          //     return 'กรุณาใส่ทุนจดทะเบียนเท่านั้นค่ะ';
          //   }
          // }

          return null;
        },
      ),
    );
  }

  Padding idCompanyEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _model.textController41Company.text.length < 13
              ? Text('กรุณากรอกเลข 13 หลักค่ะ',
                  style: FlutterFlowTheme.of(context)
                      .redSmall //redSmall orangeSmall

                  )
              : checkID == 'red'
                  ? Text('!! หมายเลขนี้มีสมาชิกในระบบแล้ว',
                      style: FlutterFlowTheme.of(context)
                          .redSmall //redSmall orangeSmall

                      )
                  : checkID == 'orange'
                      ? Text('ลูกค้าที่เคย Reject',
                          style: FlutterFlowTheme.of(context)
                              .orangeSmall //redSmall orangeSmall

                          )
                      : Text('สามารถเปิดบัญชีได้',
                          style: FlutterFlowTheme.of(context)
                              .greenSmall //redSmall orangeSmall

                          ),
          SizedBox(
            height: 5,
          ),
          TextFormField(
            onChanged: (value) async {
              print(value.length);
              if (value.length == 13) {
                FirebaseFirestore firestore = FirebaseFirestore.instance;

                QuerySnapshot querySnapshot = await firestore
                    .collection('Customer')
                    .where('เลขประจำตัวผู้เสียภาษี',
                        isEqualTo: _model.textController41Company.text)
                    .get();

                if (querySnapshot.docs.isNotEmpty) {
                  querySnapshot.docs.forEach((doc) {
                    Map<String, dynamic> data =
                        doc.data() as Map<String, dynamic>;
                    print('Field Value: $data');

                    var fieldValue = data['สถานะ'];
                    var fieldValue2 = data['รอการอนุมัติ'];
                    var fieldValue3 = data['บันทึกพร้อมตรวจ'];

                    if (!fieldValue && !fieldValue2 && !fieldValue3) {
                      checkID = 'orange';
                      setState(() {});
                    } else {
                      checkID = 'red';
                      setState(() {});
                    }
                  });
                } else {
                  print('ไม่พบเอกสารที่ตรงกับเงื่อนไข');
                  checkID = 'green';
                  setState(() {});
                }
              } else {
                checkID = 'green';
                setState(() {});
              }
            },
            controller: _model.textController41Company,
            focusNode: _model.textFieldFocusNode41Company,
            autofocus: false,
            obscureText: false,

            decoration: InputDecoration(
              isDense: true,
              labelStyle: FlutterFlowTheme.of(context).labelMedium,
              labelText: 'เลขประจำตัวผู้เสียภาษี',
              hintText: 'เลขประจำตัวผู้เสียภาษี',
              hintStyle: FlutterFlowTheme.of(context).labelMedium,
              enabledBorder: OutlineInputBorder(
                borderSide: BorderSide(
                  color: FlutterFlowTheme.of(context).alternate,
                  width: 2.0,
                ),
                borderRadius: BorderRadius.circular(8.0),
              ),
              focusedBorder: OutlineInputBorder(
                borderSide: BorderSide(
                  color: FlutterFlowTheme.of(context).primary,
                  width: 2.0,
                ),
                borderRadius: BorderRadius.circular(8.0),
              ),
              errorBorder: OutlineInputBorder(
                borderSide: BorderSide(
                  color: FlutterFlowTheme.of(context).error,
                  width: 2.0,
                ),
                borderRadius: BorderRadius.circular(8.0),
              ),
              focusedErrorBorder: OutlineInputBorder(
                borderSide: BorderSide(
                  color: FlutterFlowTheme.of(context).error,
                  width: 2.0,
                ),
                borderRadius: BorderRadius.circular(8.0),
              ),
            ),
            style: FlutterFlowTheme.of(context).bodyMedium,
            textAlign: TextAlign.start,
            // validator: _model.textController5Validator
            //     .asValidator(context),
            keyboardType: TextInputType.number,
            inputFormatters: [
              LengthLimitingTextInputFormatter(13),
              FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
            ],
            validator: (value) {
              // if (value!.isNotEmpty) {
              //   if (value.length != 13) {
              //     return 'กรุณาใส่ทุนจดทะเบียนเท่านั้นค่ะ';
              //   }
              // }

              return null;
            },
          ),
        ],
      ),
    );
  }

  Padding birthdayCustomerEdit() {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
      child: StatefulBuilder(builder: (context, setState) {
        return GestureDetector(
          onTap: () async {
            print('Gesture');
            bottomPicker(context);
            // await selectDate(context);
            setState(
              () {
                print(_model.textController2.text);
                print(_model.textController3.text);
                print(_model.textController4.text);
              },
            );
          },
          child: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Text(
                'วันเดือนปีเกิด',
                style: FlutterFlowTheme.of(context).bodyMedium,
              ),
              SizedBox(
                  width: 40,
                  child: Icon(
                    Icons.calendar_month,
                    color: FlutterFlowTheme.of(context).alternate,
                  )),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPicker(context);
                    },
                    readOnly: true,
                    controller: _model.textController2,
                    focusNode: _model.textFieldFocusNode2,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'วันที่',
                      hintText: 'วันที่',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    // validator: _model.textController2Validator
                    //     .asValidator(context),
                    keyboardType: TextInputType.number,
                    inputFormatters: [
                      FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                    ],
                    validator: (value) {
                      if (value!.isNotEmpty) {
                        if (value.length > 2) {
                          return 'เลข 1 - 2 หลักค่ะ';
                        }
                      }

                      return null;
                    },
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPicker(context);
                    },
                    readOnly: true,
                    controller: _model.textController3,
                    focusNode: _model.textFieldFocusNode3,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'เดือน',
                      hintText: 'เดือน',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    validator:
                        _model.textController3Validator.asValidator(context),
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPicker(context);
                    },
                    readOnly: true,
                    controller: _model.textController4,
                    focusNode: _model.textFieldFocusNode4,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'พ.ศ.',
                      hintText: 'พ.ศ.',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    // validator: _model.textController4Validator
                    //     .asValidator(context),
                    keyboardType: TextInputType.number,
                    inputFormatters: [
                      FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                    ],
                    validator: (value) {
                      if (value!.isNotEmpty) {
                        if (value.length != 4) {
                          return 'ตัวเลข 4 หลักค่ะ';
                        }
                      }

                      return null;
                    },
                  ),
                ),
              ),
            ],
          ),
        );
      }),
    );
  }

  Padding birthdayCompanyEdit() {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
      child: StatefulBuilder(builder: (context, setState) {
        return GestureDetector(
          onTap: () async {
            print('Gesture');
            // await selectDateCompany(context);
            bottomPickerCompany(context);
            setState(
              () {
                print(_model.textController2Company.text);
                print(_model.textController3Company.text);
                print(_model.textController4Company.text);
              },
            );
          },
          child: Row(
            mainAxisSize: MainAxisSize.max,
            children: [
              Text(
                'วันเดือนปีที่จดจัดตั้ง',
                style: FlutterFlowTheme.of(context).bodyMedium,
              ),
              SizedBox(
                  width: 40,
                  child: Icon(
                    Icons.calendar_month,
                    color: FlutterFlowTheme.of(context).alternate,
                  )),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPickerCompany(context);
                    },
                    readOnly: true,
                    controller: _model.textController2Company,
                    focusNode: _model.textFieldFocusNode2Company,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      labelText: 'วันที่',
                      hintText: 'วันที่',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    // validator: _model.textController2Validator
                    //     .asValidator(context),
                    keyboardType: TextInputType.number,
                    inputFormatters: [
                      FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                    ],
                    validator: (value) {
                      if (value!.isNotEmpty) {
                        if (value.length > 2) {
                          return 'เลข 1 - 2 หลักค่ะ';
                        }
                      }

                      return null;
                    },
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPickerCompany(context);
                    },
                    readOnly: true,
                    controller: _model.textController3Company,
                    focusNode: _model.textFieldFocusNode3Company,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      hintText: 'เดือน',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    validator:
                        _model.textController3Validator.asValidator(context),
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
                  child: TextFormField(
                    onTap: () {
                      bottomPickerCompany(context);
                    },
                    readOnly: true,
                    controller: _model.textController4Company,
                    focusNode: _model.textFieldFocusNode4Company,
                    autofocus: false,
                    obscureText: false,
                    decoration: InputDecoration(
                      isDense: true,
                      labelStyle: FlutterFlowTheme.of(context).labelMedium,
                      hintText: 'พ.ศ.',
                      hintStyle: FlutterFlowTheme.of(context).labelMedium,
                      enabledBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).alternate,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).primary,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      errorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      focusedErrorBorder: OutlineInputBorder(
                        borderSide: BorderSide(
                          color: FlutterFlowTheme.of(context).error,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                    style: FlutterFlowTheme.of(context).bodyMedium,
                    textAlign: TextAlign.center,
                    // validator: _model.textController4Validator
                    //     .asValidator(context),
                    keyboardType: TextInputType.number,
                    inputFormatters: [
                      FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                    ],
                    validator: (value) {
                      if (value!.isNotEmpty) {
                        if (value.length != 4) {
                          return 'ตัวเลข 4 หลักค่ะ';
                        }
                      }

                      return null;
                    },
                  ),
                ),
              ),
            ],
          ),
        );
      }),
    );
  }

  Padding vatCompanyEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
      child: Row(
        mainAxisSize: MainAxisSize.max,
        children: [
          Text(
            'VAT',
            style: FlutterFlowTheme.of(context).bodyMedium,
          ),
          FlutterFlowRadioButton(
            options: ['มี', 'ไม่มี'].toList(),
            onChanged: (val) => setState(() {}),
            controller: _model.radioButtonValueControllerVat ??=
                FormFieldController<String>(null),
            optionHeight: 32.0,
            textStyle: FlutterFlowTheme.of(context).labelMedium,
            selectedTextStyle: FlutterFlowTheme.of(context).bodyMedium,
            buttonPosition: RadioButtonPosition.left,
            direction: Axis.horizontal,
            radioButtonColor: FlutterFlowTheme.of(context).primary,
            inactiveRadioButtonColor:
                FlutterFlowTheme.of(context).secondaryText,
            toggleable: false,
            horizontalAlignment: WrapAlignment.start,
            verticalAlignment: WrapCrossAlignment.start,
          ),
        ],
      ),
    );
  }

  Padding nameCustomerEdit(BuildContext context) {
    return Padding(
      padding: const EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
      child: TextFormField(
        controller: _model.textController1,
        focusNode: _model.textFieldFocusNode1,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          labelText: 'ชื่อ นามสกุล',
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          hintText: 'ชื่อ นามสกุล',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        validator: _model.textController1Validator.asValidator(context),
      ),
    );
  }

  Padding nameCompany(BuildContext context) {
    return Padding(
      padding: const EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 0.0),
      child: TextFormField(
        controller: _model.textController1Company,
        focusNode: _model.textFieldFocusNode1Company,
        autofocus: false,
        obscureText: false,
        decoration: InputDecoration(
          labelText: 'ชื่อบริษัn',
          isDense: true,
          labelStyle: FlutterFlowTheme.of(context).labelMedium,
          hintText: 'ชื่อบริษัn',
          hintStyle: FlutterFlowTheme.of(context).labelMedium,
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).alternate,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).primary,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          errorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
          focusedErrorBorder: OutlineInputBorder(
            borderSide: BorderSide(
              color: FlutterFlowTheme.of(context).error,
              width: 2.0,
            ),
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        style: FlutterFlowTheme.of(context).bodyMedium,
        textAlign: TextAlign.start,
        validator: _model.textController1Validator.asValidator(context),
      ),
    );
  }

  Padding typeNameEdit(BuildContext context) {
    return Padding(
      padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
      child: Row(
        mainAxisSize: MainAxisSize.max,
        children: [
          Text(
            'คำนำหน้า',
            style: FlutterFlowTheme.of(context).bodyMedium,
          ),
          FlutterFlowRadioButton(
            options: ['นาย', 'นาง', 'นางสาว'].toList(),
            onChanged: (val) => setState(() {}),
            controller: _model.radioButtonValueController ??=
                FormFieldController<String>(null),
            optionHeight: 32.0,
            textStyle: FlutterFlowTheme.of(context).labelMedium,
            selectedTextStyle: FlutterFlowTheme.of(context).bodyMedium,
            buttonPosition: RadioButtonPosition.left,
            direction: Axis.horizontal,
            radioButtonColor: FlutterFlowTheme.of(context).primary,
            inactiveRadioButtonColor:
                FlutterFlowTheme.of(context).secondaryText,
            toggleable: false,
            horizontalAlignment: WrapAlignment.start,
            verticalAlignment: WrapCrossAlignment.start,
          ),
        ],
      ),
    );
  }

  void _pickImageCameraIdCard() async {
    // //print('camera');
    final picker2 = ImagePicker();
    final pickedFile2 = await picker2.pickImage(
      maxWidth: 1000,
      source: ImageSource.camera, // ใช้กล้องถ่ายรูป
    );
    File imageFileCrop2 = File(pickedFile2!.path);
    CroppedFile? croppedFile2 = await ImageCropper().cropImage(
      sourcePath: imageFileCrop2.path,
      aspectRatioPresets: [
        CropAspectRatioPreset.square,
        CropAspectRatioPreset.ratio3x2,
        CropAspectRatioPreset.original,
        CropAspectRatioPreset.ratio4x3,
        CropAspectRatioPreset.ratio16x9
      ],
      uiSettings: [
        AndroidUiSettings(
            toolbarTitle: 'Cropper',
            toolbarColor: Colors.deepOrange,
            toolbarWidgetColor: Colors.white,
            initAspectRatio: CropAspectRatioPreset.original,
            lockAspectRatio: false),
        IOSUiSettings(
          title: 'Cropper',
        ),
        WebUiSettings(
          context: context,
        ),
      ],
    );

    //print(pickedFile!.path);
    if (pickedFile2.path.isNotEmpty) {
      File _file = File(pickedFile2.path);
      OCRReadIdCard(_file);
    }
  }

  void _pickImageGalleryIdCard() async {
    //print('gallery');
    final ImagePicker _picker2 = ImagePicker();
    XFile? images2 = await _picker2.pickImage(source: ImageSource.gallery);
    if (images2 != null) {
      File _file = File(images2.path);
      OCRReadIdCard(_file);
    }
  }

  OCRReadIdCard(_imgFile) async {
    var connectivityResult = await (Connectivity().checkConnectivity());
    if (connectivityResult != ConnectivityResult.mobile &&
        connectivityResult != ConnectivityResult.wifi) {
      showDialog(
        context: context,
        builder: (BuildContext context) {
          return StatefulBuilder(builder: (context, setState) {
            return AlertDialog(
              // title: Text('Dialog Title'),
              // content: Text('This is the dialog content.'),
              actionsPadding: EdgeInsets.all(20),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(20.0),
              ),
              actions: [
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Padding(
                        padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                        child: Text(
                          "ต้องเชื่อมต่ออินเทอร์เน็ต",
                          style: FlutterFlowTheme.of(context).headlineMedium,
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                        child: Text(
                          "เพื่อใช้งานฟังก์ชั่นอ่านบัตรประชาชน",
                          style: FlutterFlowTheme.of(context).headlineMedium,
                        ),
                      ),
                      const Divider(),
                      SizedBox(
                        height: 15,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.end,
                        children: [
                          TextButton(
                              style: ButtonStyle(
                                shape: MaterialStateProperty.all<
                                    RoundedRectangleBorder>(
                                  RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(
                                        10.0), // ปรับค่าตามต้องการ
                                  ),
                                ),
                                side: MaterialStatePropertyAll(
                                  BorderSide(
                                      color: Colors.red.shade300, width: 1),
                                ),
                              ),
                              onPressed: () => Navigator.pop(context),
                              child: CustomText(
                                text: "   ยกเลิก   ",
                                size: MediaQuery.of(context).size.height * 0.15,
                                color: Colors.red.shade300,
                              )),
                        ],
                      ),
                    ],
                  ),
                ),
              ],
            );
          });
        },
      );

      // QuickAlert.show(
      //   context: context,
      //   type: QuickAlertType.error,
      //   title: 'ต้องเชื่อมต่ออินเทอร์เน็ต',
      //   text: 'เพื่อใช้งานฟังก์ชั่นอ่านบัตรประชาชน',
      // );
    } else {
      try {
        WidgetService().checkSpeedInternetSnackbar(context);
        // ProgressDialog pd = ProgressDialog(context: context);

        print('_imgFile =>${_imgFile}');

        File file = _imgFile;
        String fileName =
            '${DateTime.now().year}${DateTime.now().month}${DateTime.now().day}${DateTime.now().hour}${DateTime.now().minute}${DateTime.now().second}${DateTime.now().millisecond}';

        Reference ref = FirebaseStorage.instance.ref('IDCard/${fileName}.png');
        UploadTask task = ref.putFile(file);
        WidgetService().checkSpeedInternetSnackbar(context);
        CustomProgressDialog.show(context);

        // pd.show(
        //     max: 100,
        //     msg: 'กำลังอัพโหลดภาพบัตรประชาชน 10%',
        //     msgFontSize: 18.0,
        //     barrierColor: Color.fromRGBO(9, 9, 9, 0.5),
        //     progressType: ProgressType.valuable,
        //     hideValue: true,
        //     barrierDismissible: true);
        task.snapshotEvents.listen((TaskSnapshot snapshot) {
          print('Task state: ${snapshot.state}');
          print(
              'Progress: ${(snapshot.bytesTransferred / snapshot.totalBytes) * 100} %');
          // pd.update(
          //     value:
          //         (((snapshot.bytesTransferred / snapshot.totalBytes) * 100) - 10)
          //             .toInt());
        }, onError: (e) {
          print('onError upload: ${task.snapshot}');
          if (e.code == 'permission-denied') {
            print('User does not have permission to upload to this reference.');
          }

          showDialog(
            context: context,
            builder: (BuildContext context) {
              return StatefulBuilder(builder: (context, setState) {
                return AlertDialog(
                  // title: Text('Dialog Title'),
                  // content: Text('This is the dialog content.'),
                  actionsPadding: EdgeInsets.all(20),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20.0),
                  ),
                  actions: [
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Padding(
                            padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                            child: Text(
                              "อ่านข้อมูลบัตรประชาชนไม่สำเร็จ\nให้ทำการเลือกรูปบัตรประชาชนใหม่",
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ),
                          const Divider(),
                          SizedBox(
                            height: 15,
                          ),
                          Row(
                            mainAxisAlignment: MainAxisAlignment.end,
                            children: [
                              TextButton(
                                  style: ButtonStyle(
                                    shape: MaterialStateProperty.all<
                                        RoundedRectangleBorder>(
                                      RoundedRectangleBorder(
                                        borderRadius: BorderRadius.circular(
                                            10.0), // ปรับค่าตามต้องการ
                                      ),
                                    ),
                                    side: MaterialStatePropertyAll(
                                      BorderSide(
                                          color: Colors.red.shade300, width: 1),
                                    ),
                                  ),
                                  onPressed: () => Navigator.pop(context),
                                  child: CustomText(
                                    text: "   ยกเลิก   ",
                                    size: MediaQuery.of(context).size.height *
                                        0.15,
                                    color: Colors.red.shade300,
                                  )),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ],
                );
              });
            },
          );
          // QuickAlert.show(
          //   context: context,
          //   type: QuickAlertType.error,
          //   title:
          //       'อ่านข้อมูลบัตรประชาชนไม่สำเร็จ\nให้ทำการเลือกรูปบัตรประชาชนใหม่',
          //   text: '',
          // );
        });

        try {
          await task;
          WidgetService().checkSpeedInternetSnackbar(context);
          String? urlForSave = await ref.getDownloadURL();
          print('urlForSave =>${urlForSave}');
          WidgetService().checkSpeedInternetSnackbar(context);
          await Future.delayed(Duration(seconds: 2), () async {
            print("รอให้รูปภาพบันทึกให้เรียบร้อยใน storage ก่อน 2 seconds");
            // pd.update(value: 20, msg: "กำลังอ่านข้อมูลบัตรประชาชน 20%");
          });
          await Future.delayed(Duration(seconds: 2), () async {
            print("รอให้รูปภาพบันทึกให้เรียบร้อยใน storage รออีก 2 seconds");
            // pd.update(value: 42, msg: "กำลังอ่านข้อมูลบัตรประชาชน 42%");
          });
          await Future.delayed(Duration(seconds: 2), () async {
            print("รออีก 2 seconds");
            // pd.update(value: 60, msg: "กำลังอ่านข้อมูลบัตรประชาชน 60%");
            print('==========================');
            try {
              var token = await FirebaseAppCheck.instance.getToken(true);
              print("token => ${token}");
            } catch (e) {
              print(e);
            }
            print('==========================');

            HttpsCallable callable =
                FirebaseFunctions.instance.httpsCallable('readOCR');
            final resultCloudFunction = await callable
                .call(<String, dynamic>{"imgName": "${fileName}.png"});
            // pd.update(value: 70, msg: "กำลังอ่านข้อมูลบัตรประชาชน 70%");
            List result = [];
            List arMonth = [
              null,
              'ม.ค.',
              'ก.พ.',
              'มี.ค.',
              'เม.ย.',
              'พ.ค.',
              'มิ.ย.',
              'ก.ค.',
              'ส.ค.',
              'ก.ย.',
              'ต.ค.',
              'พ.ย.',
              'ธ.ค.'
            ];

            print(
                "before: resultCloudFunction.data['textOCR'] => ${resultCloudFunction.data['textOCR']}");
            var tmp = resultCloudFunction.data['textOCR'].replaceAll('\n', ' ');
            var tmpArr = tmp.split(' ');
            var f = new FormatMethod();

            tmpArr.asMap().forEach((i, val) {
              result.add(val);
            });
            print(result);

            result.removeWhere((element) => element == '');
            print(result);
            try {
              // เปิดแล้ว เปลี่ยนข้อมูลด้านล่างนี้เอาได้เลยนะครับ

              result.asMap().forEach((k, v) {
                print(k);
                print(v);
                if ((v.endsWith('ber') ||
                        v.endsWith('er') ||
                        v.startsWith('เล') ||
                        v.endsWith('าชน')) &&
                    f.isNumeric(result[k + 1])) {
                  textMap['idcard'] = result[k + 1] +
                      result[k + 2] +
                      result[k + 3] +
                      result[k + 4] +
                      result[k + 5];
                } else if (v.startsWith('ชื่อ') ||
                    v.startsWith('ชือ') ||
                    v.endsWith('สกุล') ||
                    v.endsWith('กุล') ||
                    v.endsWith('กล')) {
                  if (result[k + 1] == 'นาย' || result[k + 1] == 'พระ') {
                    textMap['sex'] = 1;
                    textMap['sexName'] = "ชาย";
                  } else {
                    textMap['sex'] = 2;
                    textMap['sexName'] = "หญิง";
                  }
                  textMap['name'] = result[k + 2];
                  textMap['surname'] = result[k + 3];
                } else if (v.startsWith('เกิด') ||
                    v.startsWith('เก') ||
                    v.endsWith('นที่') ||
                    v.endsWith('วนี') ||
                    v.endsWith('นท่')) {
                  textMap['day'] = int.parse(result[k + 1]);
                  arMonth.asMap().forEach((key, value) {
                    if (value == result[k + 2]) {
                      textMap['month'] = key;
                    }
                  });
                  textMap['year'] = int.parse(result[k + 3]) - 543;
                  textMap['birthday'] = textMap['year'].toString() +
                      '-' +
                      textMap['month'].toString().padLeft(2, '0') +
                      '-' +
                      textMap['day'].toString().padLeft(2, '0');
                } else if (v.startsWith('ที่อ') ||
                    v.startsWith('ทีอ') ||
                    v.endsWith('อยู่')) {
                  textMap['address'] =
                      '${result[k + 1]} ${result[k + 2]} ${result[k + 3]}';
                } else if (v.startsWith('ต.') || v.startsWith('แขวง')) {
                  textMap['subdist'] = v.startsWith('ต.') ? v.split('.')[1] : v;
                  print("textMap['subdist'] => ${textMap['subdist']}");
                } else if (v.startsWith('อ.') || v.startsWith('เขต')) {
                  textMap['dist'] = v.startsWith('อ.') ? v.split('.')[1] : v;
                  print("textMap['dist'] => ${textMap['dist']}");
                } else if (v.startsWith('จ.')) {
                  textMap['province'] = v.split('.')[1];
                  print("textMap['province'] => ${textMap['province']}");
                }
              });
              if (textMap['province'] == null) {
                textMap['province'] = 'กรุงเทพมหานคร';
              }

              print('-------------------');
              print(textMap);
              print(result[0]);
              print('-------------------');

              _model.textController1.text =
                  '${textMap['name']} ${textMap['surname']}';

              _model.textController5.text =
                  result[3] + result[4] + result[5] + result[6] + result[7];

              FirebaseFirestore firestore = FirebaseFirestore.instance;

              QuerySnapshot querySnapshot = await firestore
                  .collection('Customer')
                  .where('เลขบัตรประชาชน',
                      isEqualTo: _model.textController5.text)
                  .get();

              if (querySnapshot.docs.isNotEmpty) {
                querySnapshot.docs.forEach((doc) {
                  Map<String, dynamic> data =
                      doc.data() as Map<String, dynamic>;
                  print('Field Value: $data');

                  var fieldValue = data['สถานะ'];
                  var fieldValue2 = data['รอการอนุมัติ'];
                  var fieldValue3 = data['บันทึกพร้อมตรวจ'];

                  if (!fieldValue && !fieldValue2 && !fieldValue3) {
                    checkID = 'orange';
                    setState(() {});
                  } else {
                    checkID = 'red';
                    setState(() {});
                  }
                });
              } else {
                print('ไม่พบเอกสารที่ตรงกับเงื่อนไข');
                checkID = 'green';
                setState(() {});
              }

              _model.radioButtonValueController!.value = result[12];

              _model.textController2.text = result[32];
              _model.textController3.text = textMap['month'].toString();
              _model.textController4.text = result[34];
              //   Map findProince = jsonProvince.firstWhere((ele) => ele['PROVINCE_NAME'].toString().contains(textMap['province'].toString().trim()),
              //       orElse: () => {"PROVINCE_ID": -1});
              //
              //   textMap['province_id'] = (findProince['PROVINCE_ID'] != -1) ? findProince['PROVINCE_ID'] : null;
              //
              //   _name.text = '${textMap['name']}';
              //   _surname.text = '${textMap['surname']}';
              //   _idcard.text = '${textMap['idcard']}';
              //   _sex = '${textMap['sex']}';
              //   _province = '${textMap['province_id']}';
              //   selectDate = DateTime(textMap['year'], textMap['month'], textMap['day']);
              //   _birthday.text = f.ThaiDateFormat(textMap['birthday']);
              //   _address.text = '${textMap['address']}';
              //   if (textMap['province_id'] != null) {
              //     var findAmphur = jsonAmphur.firstWhere(
              //         (ele) => (ele['AMPHUR_NAME'].toString().contains(textMap['dist']) && ele['PROVINCE_ID'] == textMap['province_id']),
              //         orElse: () => null);
              //     textMap['dist_id'] = findAmphur != null ? findAmphur['AMPHUR_ID'] : null;
              //     if (textMap['dist_id'] != null) {
              //       await getDistrict(textMap['province_id']).whenComplete(() => _district = textMap['dist_id'].toString());
              //       var findSubdist = jsonDistrict.firstWhere(
              //           (ele) => (ele['DISTRICT_NAME'].toString().contains(textMap['subdist']) && ele['AMPHUR_ID'] == textMap['dist_id']),
              //           orElse: () => null);
              //       textMap['subdist_id'] = findSubdist != null ? findSubdist['DISTRICT_ID'] : null;
              //       if (textMap['subdist_id'] != null) {
              //         await getSubDistrict(textMap['dist_id']).whenComplete(() {
              //           _subDistrict = textMap['subdist_id'].toString();
              //           var tmp = tmpSubDistrict.firstWhere((element) => element['DISTRICT_ID'].toString() == _subDistrict);
              //           _zipcode.text = tmp['ZIP_CODE'].toString();
              //         });
              //       }
              //     }
              //   }
              CustomProgressDialog.hide(context);
              // pd.close();
              // setState(() {});
            } catch (e) {
              //   //show error dialog
              CustomProgressDialog.hide(context);
              // pd.close();
              //   setState(() {
              //     // _sex = null;
              //     // _province = null;
              //     // _district = null;
              //     // _subDistrict = null;
              //     // _zipcode.clear();
              //   });
              //   print('create textMap ERROR :: ${e.toString()}');
              print('create textMap ERROR :: ${e}');
            }
          });
        } catch (e) {
          // pd.close();
          CustomProgressDialog.hide(context);
          print('upload ERROR :: ${e}');

          showDialog(
            context: context,
            builder: (BuildContext context) {
              return StatefulBuilder(builder: (context, setState) {
                return AlertDialog(
                  // title: Text('Dialog Title'),
                  // content: Text('This is the dialog content.'),
                  actionsPadding: EdgeInsets.all(20),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20.0),
                  ),
                  actions: [
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Padding(
                            padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                            child: Text(
                              "อ่านข้อมูลบัตรประชาชนไม่สำเร็จ\nให้ทำการเลือกรูปบัตรประชาชนใหม่",
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ),
                          const Divider(),
                          SizedBox(
                            height: 15,
                          ),
                          Row(
                            mainAxisAlignment: MainAxisAlignment.end,
                            children: [
                              TextButton(
                                  style: ButtonStyle(
                                    shape: MaterialStateProperty.all<
                                        RoundedRectangleBorder>(
                                      RoundedRectangleBorder(
                                        borderRadius: BorderRadius.circular(
                                            10.0), // ปรับค่าตามต้องการ
                                      ),
                                    ),
                                    side: MaterialStatePropertyAll(
                                      BorderSide(
                                          color: Colors.red.shade300, width: 1),
                                    ),
                                  ),
                                  onPressed: () => Navigator.pop(context),
                                  child: CustomText(
                                    text: "   ยกเลิก   ",
                                    size: MediaQuery.of(context).size.height *
                                        0.15,
                                    color: Colors.red.shade300,
                                  )),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ],
                );
              });
            },
          );

          // QuickAlert.show(
          //   context: context,
          //   type: QuickAlertType.error,
          //   title:
          //       'อ่านข้อมูลบัตรประชาชนไม่สำเร็จ\nให้ทำการเลือกรูปบัตรประชาชนใหม่',
          //   text: '',
          // );
        }
      } catch (e) {
        print(e);
      }
    }
  }

  Future<dynamic> imageDialogIdCard() async {
    return showDialog(
      context: context,
      builder: (BuildContext context) {
        return StatefulBuilder(builder: (context, setState) {
          return AlertDialog(
            // content: Text('This is the dialog content.'),
            actionsPadding: EdgeInsets.all(20),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(20.0),
            ),
            actions: [
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Padding(
                      padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                      child: Text(
                        "กรุณาเลือกรูปแบบของบัตรประชาชน",
                        style: FlutterFlowTheme.of(context).headlineMedium,
                      ),
                    ),

                    const Divider(),

                    Container(
                      // color: Colors.white,
                      width: MediaQuery.of(context).size.width * 0.60,
                      height: MediaQuery.of(context).size.height * 0.06,
                      child: GestureDetector(
                        onTap: () async {
                          Navigator.pop(context);
                          _pickImageCameraIdCard();
                        },
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Icon(
                              Icons.camera_alt_outlined,
                              color: Colors.black,
                              size: MediaQuery.of(context).size.height * 0.025,
                            ),
                            SizedBox(
                              width: MediaQuery.of(context).size.width * 0.03,
                            ),
                            Text(
                              'กล้องถ่ายรูป',
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ],
                        ),
                      ),
                    ),
                    Container(
                      // color: Colors.white,
                      width: MediaQuery.of(context).size.width * 0.60,
                      height: MediaQuery.of(context).size.height * 0.06,
                      child: GestureDetector(
                        onTap: () async {
                          Navigator.pop(context);
                          _pickImageGalleryIdCard();
                        },
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Icon(
                              Icons.image_outlined,
                              color: Colors.black,
                              size: MediaQuery.of(context).size.height * 0.025,
                            ),
                            SizedBox(
                              width: MediaQuery.of(context).size.width * 0.03,
                            ),
                            Text(
                              'แกลลอรี่',
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ],
                        ),
                      ),
                    ),
                    // Container(
                    //   // color: Colors.white,
                    //   width: MediaQuery.of(context).size.width * 0.60,
                    //   height: MediaQuery.of(context).size.height * 0.06,
                    //   child: GestureDetector(
                    //     onTap: () {
                    //       setState(() {
                    //         image = null;
                    //       });
                    //       Navigator.pop(context);
                    //     },
                    //     child: Row(
                    //       mainAxisAlignment: MainAxisAlignment.start,
                    //       children: [
                    //         Icon(
                    //           Icons.delete,
                    //           color: Colors.red.shade500,
                    //           size: MediaQuery.of(context).size.height * 0.03,
                    //         ),
                    //         SizedBox(
                    //           width: MediaQuery.of(context).size.width * 0.03,
                    //         ),
                    //         Text(
                    //           'ลบรูปภาพ',
                    //           style: TextStyle(
                    //             fontSize: MediaQuery.of(context).size.height * 0.02,
                    //             color: Colors.red.shade500,
                    //           ),
                    //         ),
                    //       ],
                    //     ),
                    //   ),
                    // ),
                    // Container(
                    //   width: MediaQuery.of(context).size.width * 0.60,
                    //   color: null,
                    //   height: MediaQuery.of(context).size.height * 0.10,
                    //   child: Row(
                    //     mainAxisAlignment: MainAxisAlignment.end,
                    //     children: [
                    //       TextButton(
                    //           style: ButtonStyle(
                    //             side: MaterialStatePropertyAll(
                    //               BorderSide(color: Colors.red.shade300, width: 1),
                    //             ),
                    //           ),
                    //           onPressed: () => Navigator.pop(context),
                    //           child: CustomText(
                    //             text: "ยกเลิก",
                    //             size: MediaQuery.of(context).size.height * 0.15,
                    //             color: Colors.red.shade300,
                    //           )),
                    //     ],
                    //   ),
                    // )
                    SizedBox(
                      height: 15,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.end,
                      children: [
                        TextButton(
                            style: ButtonStyle(
                              shape: MaterialStateProperty.all<
                                  RoundedRectangleBorder>(
                                RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(
                                      10.0), // ปรับค่าตามต้องการ
                                ),
                              ),
                              side: MaterialStatePropertyAll(
                                BorderSide(
                                    color: Colors.red.shade300, width: 1),
                              ),
                            ),
                            onPressed: () => Navigator.pop(context),
                            child: CustomText(
                              text: "   ยกเลิก   ",
                              size: MediaQuery.of(context).size.height * 0.15,
                              color: Colors.red.shade300,
                            )),
                        // TextButton(
                        //     style: ButtonStyle(
                        //       backgroundColor: MaterialStatePropertyAll(
                        //           Colors.blue.shade900),
                        //       // side: MaterialStatePropertyAll(
                        //       // BorderSide(
                        //       //     color: Colors.red.shade300, width: 1),
                        //       // ),
                        //     ),
                        //     onPressed: () {
                        //       Navigator.pop(context);
                        //     },
                        //     child: CustomText(
                        //       text: "   บันทึก   ",
                        //       size: MediaQuery.of(context).size.height * 0.15,
                        //       color: Colors.white,
                        //     )),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          );
        });
      },
    );
  }

  InkWell ocrEdit(BuildContext context) {
    return InkWell(
      onTap: () async {
        await imageDialogIdCard();
      },
      child: Padding(
        padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
        child: Row(
          mainAxisSize: MainAxisSize.max,
          children: [
            Padding(
              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 5.0, 0.0),
              child: Icon(
                FFIcons.kocr,
                color: FlutterFlowTheme.of(context).secondaryText,
                size: 24.0,
              ),
            ),
            Text(
              'กรุณาเชื่อมต่ออินเตอร์เน็ต สามารถเปิดกล้องถ่ายหน้าบัตรและอ่าน ORC ได้จากที่นี่',
              style: FlutterFlowTheme.of(context).bodyMedium,
            ),
          ],
        ),
      ),
    );
  }

  Column formStatusFalseView(
      String formatThaiDate(Timestamp timestamp), BuildContext context) {
    return Column(
      children: [
        Form(
          // key: _formKey,
          child: SizedBox(
            height: (widget.entryMap!['value']['สถานะ'] == true &&
                        widget.entryMap!['value']['รอการอนุมัติ'] == false &&
                        widget.entryMap!['value']['บันทึกพร้อมตรวจ'] ==
                            false) ||
                    (widget.entryMap!['value']['สถานะ'] == false &&
                        widget.entryMap!['value']['รอการอนุมัติ'] == true &&
                        widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == false)
                ? 1100
                : 1000,
            child: SingleChildScrollView(
              child: Padding(
                padding:
                    const EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                child: Column(
                  mainAxisSize: MainAxisSize.max,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    widget.entryMap!['value']['รอการอนุมัติ'] == false
                        ? SizedBox()
                        : StepApproveWidget(
                            checkBool: widget.entryMap!['value']
                                ['ขั้นตอนอนุมัติ']),

                    widget.entryMap!['value']['รอการอนุมัติ'] == false
                        ? SizedBox()
                        : StreamBuilder(
                            stream: FirebaseFirestore.instance
                                .collection('ApproveComment')
                                .snapshots(),
                            builder: (context, snapshot) {
                              if (snapshot.connectionState ==
                                  ConnectionState.waiting) {
                                return SizedBox();
                              }
                              if (snapshot.hasError) {
                                return Text(
                                    'เกิดข้อผิดพลาด: ${snapshot.error}');
                              }
                              if (!snapshot.hasData) {
                                return Text('ไม่พบข้อมูล');
                              }
                              if (snapshot.data!.docs.isEmpty) {
                                print(snapshot.data);
                              }
                              print('ApproveComment');
                              List<Map<String, dynamic>> dataList = [];

                              for (int index = 0;
                                  index < snapshot.data!.docs.length;
                                  index++) {
                                Map<String, dynamic> currentData =
                                    snapshot.data!.docs[index].data()
                                        as Map<String, dynamic>;
                                dataList.add(currentData);
                              }

                              Map<String, dynamic>? foundMap;

                              for (Map<String, dynamic> map in dataList) {
                                if (map["CustomerID"] ==
                                    widget.entryMap!['value']['CustomerID']) {
                                  foundMap = map;
                                  break;
                                }
                              }

                              // ตรวจสอบว่าพบหรือไม่
                              if (foundMap != null) {
                                print(
                                    "พบ Map ที่มี CustomerID เท่ากับ ${widget.entryMap!['value']['CustomerID']}: $foundMap");
                              } else {
                                print(
                                    "ไม่พบ Map ที่มี CustomerID เท่ากับ ${widget.entryMap!['value']['CustomerID']}");
                              }
                              return Align(
                                alignment: AlignmentDirectional(0.00, 0.00),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      0.0, 20.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Text(
                                        foundMap == null
                                            ? 'ยังไม่มีรายชื่อตรวจสอบ'
                                            : foundMap['UserName'],
                                        style: FlutterFlowTheme.of(context)
                                            .bodyLarge
                                            .override(
                                              fontFamily: 'Kanit',
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .primaryText,
                                            ),
                                      ),
                                    ],
                                  ),
                                ),
                              );
                            }),
                    widget.entryMap!['value']['รอการอนุมัติ'] == false
                        ? SizedBox()
                        : Row(
                            mainAxisSize: MainAxisSize.max,
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Text(
                                'อัพเดทสถานะ ${formatThaiDate(widget.entryMap!['value']['CustomerDateUpdate'])}',
                                style: FlutterFlowTheme.of(context)
                                    .bodyLarge
                                    .override(
                                      fontFamily: 'Kanit',
                                      color: FlutterFlowTheme.of(context)
                                          .primaryText,
                                    ),
                              ),
                            ],
                          ),
                    const SizedBox(
                      height: 5,
                    ),
                    approveComment(context),

                    //========================  ocr =====================================
                    widget.type == 'Company'
                        ? const SizedBox(
                            height: 5,
                          )
                        : Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 0.0, 5.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      0.0, 0.0, 5.0, 0.0),
                                  child: Icon(
                                    FFIcons.kocr,
                                    color: FlutterFlowTheme.of(context)
                                        .secondaryText,
                                    size: 24.0,
                                  ),
                                ),
                                Text(
                                  'กรุณาเชื่อมต่ออินเตอร์เน็ต  สามารถเปิดกล้องถ่ายหน้าบัตรและอ่าน ORC ได้จากที่นี่',
                                  style:
                                      FlutterFlowTheme.of(context).bodyMedium,
                                ),
                              ],
                            ),
                          ),
                    //======================= checkbox คำนำหน้า ======================================
                    widget.type == 'Company'
                        ? const SizedBox()
                        : Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 0.0, 5.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Text(
                                  'คำนำหน้า',
                                  style:
                                      FlutterFlowTheme.of(context).bodyMedium,
                                ),
                                FlutterFlowRadioButton(
                                  options: ['นาย', 'นาง', 'นางสาว'].toList(),
                                  onChanged: (val) {
                                    // => setState(() {}   );
                                  },
                                  controller:
                                      _model.radioButtonValueController ??=
                                          FormFieldController<String>(null),
                                  optionHeight: 32.0,
                                  textStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  selectedTextStyle:
                                      FlutterFlowTheme.of(context).bodyMedium,
                                  buttonPosition: RadioButtonPosition.left,
                                  direction: Axis.horizontal,
                                  radioButtonColor:
                                      FlutterFlowTheme.of(context).primary,
                                  inactiveRadioButtonColor:
                                      FlutterFlowTheme.of(context)
                                          .secondaryText,
                                  toggleable: false,
                                  horizontalAlignment: WrapAlignment.start,
                                  verticalAlignment: WrapCrossAlignment.start,
                                ),
                              ],
                            ),
                          ),
                    //=========================== ชื่อ นามสกุล /ชื่อบริษัn==================================
                    widget.type == 'Company'
                        ? Padding(
                            padding: const EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 0.0),
                            child: TextFormField(
                              readOnly: true,
                              controller: _model.textController1Company,
                              focusNode: _model.textFieldFocusNode1Company,
                              autofocus: false,
                              obscureText: false,
                              decoration: InputDecoration(
                                labelText: 'ชื่อบริษัn',
                                isDense: true,
                                labelStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                hintText: 'ชื่อบริษัn',
                                hintStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                enabledBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color:
                                        FlutterFlowTheme.of(context).alternate,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).primary,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                errorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedErrorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                              ),
                              style: FlutterFlowTheme.of(context).bodyMedium,
                              textAlign: TextAlign.start,
                              validator: _model.textController1Validator
                                  .asValidator(context),
                            ),
                          )
                        : Padding(
                            padding: const EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 0.0),
                            child: TextFormField(
                              readOnly: true,
                              controller: _model.textController1,
                              focusNode: _model.textFieldFocusNode1,
                              autofocus: false,
                              obscureText: false,
                              decoration: InputDecoration(
                                labelText: 'ชื่อ นามสกุล',
                                isDense: true,
                                labelStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                hintText: 'ชื่อ นามสกุล',
                                hintStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                enabledBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color:
                                        FlutterFlowTheme.of(context).alternate,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).primary,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                errorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedErrorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                              ),
                              style: FlutterFlowTheme.of(context).bodyMedium,
                              textAlign: TextAlign.start,
                              validator: _model.textController1Validator
                                  .asValidator(context),
                            ),
                          ),

                    //======================= checkbox vat ======================================
                    widget.type == 'Company'
                        ? Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 0.0, 5.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Text(
                                  'VAT',
                                  style:
                                      FlutterFlowTheme.of(context).bodyMedium,
                                ),
                                FlutterFlowRadioButton(
                                  options: ['มี', 'ไม่มี'].toList(),
                                  onChanged: (val) {},
                                  controller:
                                      _model.radioButtonValueControllerVat ??=
                                          FormFieldController<String>(null),
                                  optionHeight: 32.0,
                                  textStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  selectedTextStyle:
                                      FlutterFlowTheme.of(context).bodyMedium,
                                  buttonPosition: RadioButtonPosition.left,
                                  direction: Axis.horizontal,
                                  radioButtonColor:
                                      FlutterFlowTheme.of(context).primary,
                                  inactiveRadioButtonColor:
                                      FlutterFlowTheme.of(context)
                                          .secondaryText,
                                  toggleable: false,
                                  horizontalAlignment: WrapAlignment.start,
                                  verticalAlignment: WrapCrossAlignment.start,
                                ),
                              ],
                            ),
                          )
                        : SizedBox(),

                    //======================= วันเดือนปีเกิด/วันเดือนปีที่จัดจัดตั้ง ======================================
                    widget.type == 'Company'
                        ? Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 0.0, 5.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Text(
                                  'วันเดือนปีที่จดจัดตั้ง',
                                  style:
                                      FlutterFlowTheme.of(context).bodyMedium,
                                ),
                                SizedBox(
                                    width: 40,
                                    child: Icon(
                                      Icons.calendar_month,
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                    )),
                                Expanded(
                                  child: Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        8.0, 0.0, 8.0, 0.0),
                                    child: TextFormField(
                                      readOnly: true,
                                      controller: _model.textController2Company,
                                      focusNode:
                                          _model.textFieldFocusNode2Company,
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        hintText: 'วันที่',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.center,
                                      // validator: _model.textController2Validator
                                      //     .asValidator(context),
                                      keyboardType: TextInputType.number,
                                      inputFormatters: [
                                        FilteringTextInputFormatter.allow(
                                            RegExp(r'[0-9]')),
                                      ],
                                      validator: (value) {
                                        if (value!.isNotEmpty) {
                                          if (value.length > 2) {
                                            return 'เลข 1 - 2 หลักค่ะ';
                                          }
                                        }

                                        return null;
                                      },
                                    ),
                                  ),
                                ),
                                Expanded(
                                  child: Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        8.0, 0.0, 8.0, 0.0),
                                    child: TextFormField(
                                      readOnly: true,
                                      controller: _model.textController3Company,
                                      focusNode:
                                          _model.textFieldFocusNode3Company,
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        hintText: 'เดือน',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.center,
                                      validator: _model.textController3Validator
                                          .asValidator(context),
                                    ),
                                  ),
                                ),
                                Expanded(
                                  child: Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        8.0, 0.0, 8.0, 0.0),
                                    child: TextFormField(
                                      readOnly: true,
                                      controller: _model.textController4Company,
                                      focusNode:
                                          _model.textFieldFocusNode4Company,
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        hintText: 'พ.ศ.',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.center,
                                      // validator: _model.textController4Validator
                                      //     .asValidator(context),
                                      keyboardType: TextInputType.number,
                                      inputFormatters: [
                                        FilteringTextInputFormatter.allow(
                                            RegExp(r'[0-9]')),
                                      ],
                                      validator: (value) {
                                        if (value!.isNotEmpty) {
                                          if (value.length != 4) {
                                            return 'ตัวเลข 4 หลักค่ะ';
                                          }
                                        }

                                        return null;
                                      },
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          )
                        : Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 0.0, 5.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Text(
                                  'วันเดือนปีเกิด',
                                  style:
                                      FlutterFlowTheme.of(context).bodyMedium,
                                ),
                                SizedBox(
                                    width: 40,
                                    child: Icon(
                                      Icons.calendar_month,
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                    )),
                                Expanded(
                                  child: Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        8.0, 0.0, 8.0, 0.0),
                                    child: TextFormField(
                                      readOnly: true,
                                      controller: _model.textController2,
                                      focusNode: _model.textFieldFocusNode2,
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        labelText: 'วันที่',
                                        hintText: 'วันที่',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.center,
                                      // validator: _model.textController2Validator
                                      //     .asValidator(context),
                                      keyboardType: TextInputType.number,
                                      inputFormatters: [
                                        FilteringTextInputFormatter.allow(
                                            RegExp(r'[0-9]')),
                                      ],
                                      validator: (value) {
                                        if (value!.isNotEmpty) {
                                          if (value.length > 2) {
                                            return 'เลข 1 - 2 หลักค่ะ';
                                          }
                                        }

                                        return null;
                                      },
                                    ),
                                  ),
                                ),
                                Expanded(
                                  child: Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        8.0, 0.0, 8.0, 0.0),
                                    child: TextFormField(
                                      readOnly: true,
                                      controller: _model.textController3,
                                      focusNode: _model.textFieldFocusNode3,
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        labelText: 'เดือน',
                                        hintText: 'เดือน',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.center,
                                      validator: _model.textController3Validator
                                          .asValidator(context),
                                    ),
                                  ),
                                ),
                                Expanded(
                                  child: Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        8.0, 0.0, 8.0, 0.0),
                                    child: TextFormField(
                                      readOnly: true,
                                      controller: _model.textController4,
                                      focusNode: _model.textFieldFocusNode4,
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        labelText: 'พ.ศ.',
                                        hintText: 'พ.ศ.',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.center,
                                      // validator: _model.textController4Validator
                                      //     .asValidator(context),
                                      keyboardType: TextInputType.number,
                                      inputFormatters: [
                                        FilteringTextInputFormatter.allow(
                                            RegExp(r'[0-9]')),
                                      ],
                                      validator: (value) {
                                        if (value!.isNotEmpty) {
                                          if (value.length != 4) {
                                            return 'ตัวเลข 4 หลักค่ะ';
                                          }
                                        }

                                        return null;
                                      },
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),

                    //======================= เลขประจำตัวผู้เสียภาษี ======================================
                    widget.type == 'Company'
                        ? Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 8.0, 5.0),
                            child: TextFormField(
                              readOnly: true,
                              controller: _model.textController41Company,
                              focusNode: _model.textFieldFocusNode41Company,
                              autofocus: false,
                              obscureText: false,

                              decoration: InputDecoration(
                                isDense: true,
                                labelStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                labelText: 'เลขประจำตัวผู้เสียภาษี',
                                hintText: 'เลขประจำตัวผู้เสียภาษี',
                                hintStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                enabledBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color:
                                        FlutterFlowTheme.of(context).alternate,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).primary,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                errorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedErrorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                              ),
                              style: FlutterFlowTheme.of(context).bodyMedium,
                              textAlign: TextAlign.start,
                              // validator: _model.textController5Validator
                              //     .asValidator(context),
                              keyboardType: TextInputType.number,
                              inputFormatters: [
                                FilteringTextInputFormatter.allow(
                                    RegExp(r'[0-9]')),
                              ],
                              validator: (value) {
                                // if (value!.isNotEmpty) {
                                //   if (value.length != 13) {
                                //     return 'กรุณาใส่ทุนจดทะเบียนเท่านั้นค่ะ';
                                //   }
                                // }

                                return null;
                              },
                            ),
                          )
                        : const SizedBox(),
                    //======================= เลขที่บัตรประชาชน / ทุนจดทะเบียน ======================================
                    widget.type == 'Company'
                        ? Padding(
                            padding: const EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 8.0, 5.0),
                            child: TextFormField(
                              readOnly: true,
                              controller: _model.textController5Company,
                              focusNode: _model.textFieldFocusNode5Company,
                              autofocus: false,
                              obscureText: false,

                              decoration: InputDecoration(
                                isDense: true,
                                labelStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                hintText: 'ทุนจดทะเบียน',
                                hintStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                enabledBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color:
                                        FlutterFlowTheme.of(context).alternate,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).primary,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                errorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedErrorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                              ),
                              style: FlutterFlowTheme.of(context).bodyMedium,
                              textAlign: TextAlign.start,
                              // validator: _model.textController5Validator
                              //     .asValidator(context),
                              keyboardType: TextInputType.number,
                              inputFormatters: [
                                FilteringTextInputFormatter.allow(
                                    RegExp(r'[0-9]')),
                              ],
                              validator: (value) {
                                // if (value!.isNotEmpty) {
                                //   if (value.length != 13) {
                                //     return 'กรุณาใส่ทุนจดทะเบียนเท่านั้นค่ะ';
                                //   }
                                // }

                                return null;
                              },
                            ),
                          )
                        : Padding(
                            padding: const EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 8.0, 5.0),
                            child: TextFormField(
                              readOnly: true,
                              controller: _model.textController5,
                              focusNode: _model.textFieldFocusNode5,
                              autofocus: false,
                              obscureText: false,

                              decoration: InputDecoration(
                                isDense: true,
                                labelStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                labelText: 'เลขที่บัตรประชาชน',
                                hintText: 'เลขที่บัตรประชาชน',
                                hintStyle:
                                    FlutterFlowTheme.of(context).labelMedium,
                                enabledBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color:
                                        FlutterFlowTheme.of(context).alternate,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).primary,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                errorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                focusedErrorBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: FlutterFlowTheme.of(context).error,
                                    width: 2.0,
                                  ),
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                              ),
                              style: FlutterFlowTheme.of(context).bodyMedium,
                              textAlign: TextAlign.start,
                              // validator: _model.textController5Validator
                              //     .asValidator(context),
                              keyboardType: TextInputType.number,
                              inputFormatters: [
                                FilteringTextInputFormatter.allow(
                                    RegExp(r'[0-9]')),
                              ],
                              validator: (value) {
                                if (value!.isNotEmpty) {
                                  if (value.length != 13) {
                                    return 'กรุณาใส่เลขที่บัตรประชาชน 13 หลักเท่านั้นค่ะ';
                                  }
                                }

                                return null;
                              },
                            ),
                          ),
                    //===================== เบอร์โทรศัพท์ ========================================
                    Padding(
                      padding: const EdgeInsetsDirectional.fromSTEB(
                          8.0, 5.0, 8.0, 5.0),
                      child: TextFormField(
                        readOnly: true,
                        controller: _model.textController6,
                        focusNode: _model.textFieldFocusNode6,
                        autofocus: false,
                        obscureText: false,
                        decoration: InputDecoration(
                          isDense: true,
                          labelStyle: FlutterFlowTheme.of(context).labelMedium,
                          labelText: 'เบอร์โทรศัพท์',
                          hintText: 'เบอร์โทรศัพท์',
                          hintStyle: FlutterFlowTheme.of(context).labelMedium,
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).alternate,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium,
                        textAlign: TextAlign.start,
                        // validator: _model.textController6Validator
                        //     .asValidator(context),
                        keyboardType: TextInputType.number,
                        inputFormatters: [
                          FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                        ],
                        validator: (value) {
                          // if (value!.isNotEmpty) {
                          //   if (value.length != 10) {
                          //     return 'กรุณาใส่เบอร์โทรศัพท์ 10 หลักเท่านั้นค่ะ';
                          //   }
                          // }

                          return null;
                        },
                      ),
                    ),
                    //===================== วัน / เดือน / ปี ที่เริ่มจัดส่ง  ========================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            'วัน / เดือน / ปี ที่เริ่มจัดส่ง ',
                            style: FlutterFlowTheme.of(context).bodyMedium,
                          ),
                          SizedBox(
                              width: 40,
                              child: Icon(
                                Icons.calendar_month,
                                color: FlutterFlowTheme.of(context).alternate,
                              )),
                          Expanded(
                            child: Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  8.0, 0.0, 8.0, 0.0),
                              child: TextFormField(
                                readOnly: true,
                                controller: _model.textController7,
                                focusNode: _model.textFieldFocusNode7,
                                autofocus: false,
                                obscureText: false,
                                decoration: InputDecoration(
                                  isDense: true,
                                  labelStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  labelText: 'วันที่',
                                  hintText: 'วันที่',
                                  hintStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  enabledBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color:
                                          FlutterFlowTheme.of(context).primary,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedErrorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                ),
                                style: FlutterFlowTheme.of(context).bodyMedium,
                                textAlign: TextAlign.center,
                                // validator: _model.textController7Validator
                                //     .asValidator(context),
                                keyboardType: TextInputType.number,
                                inputFormatters: [
                                  FilteringTextInputFormatter.allow(
                                      RegExp(r'[0-9]')),
                                ],
                                validator: (value) {
                                  if (value!.isNotEmpty) {
                                    if (value.length > 2) {
                                      return 'เลข 1 - 2 หลักค่ะ';
                                    }
                                  }

                                  return null;
                                },
                              ),
                            ),
                          ),
                          Expanded(
                            child: Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  8.0, 0.0, 8.0, 0.0),
                              child: TextFormField(
                                readOnly: true,
                                controller: _model.textController8,
                                focusNode: _model.textFieldFocusNode8,
                                autofocus: false,
                                obscureText: false,
                                decoration: InputDecoration(
                                  isDense: true,
                                  labelStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  labelText: 'เดือน',
                                  hintText: 'เดือน',
                                  hintStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  enabledBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color:
                                          FlutterFlowTheme.of(context).primary,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedErrorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                ),
                                style: FlutterFlowTheme.of(context).bodyMedium,
                                textAlign: TextAlign.center,
                                validator: _model.textController8Validator
                                    .asValidator(context),
                              ),
                            ),
                          ),
                          Expanded(
                            child: Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  8.0, 0.0, 8.0, 0.0),
                              child: TextFormField(
                                readOnly: true,
                                controller: _model.textController9,
                                focusNode: _model.textFieldFocusNode9,
                                autofocus: false,
                                obscureText: false,
                                decoration: InputDecoration(
                                  isDense: true,
                                  labelStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  labelText: 'พ.ศ.',
                                  hintText: 'พ.ศ.',
                                  hintStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  enabledBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color:
                                          FlutterFlowTheme.of(context).primary,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedErrorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                ),
                                style: FlutterFlowTheme.of(context).bodyMedium,
                                textAlign: TextAlign.center,
                                // validator: _model.textController9Validator
                                //     .asValidator(context),
                                keyboardType: TextInputType.number,
                                inputFormatters: [
                                  FilteringTextInputFormatter.allow(
                                      RegExp(r'[0-9]')),
                                ],
                                validator: (value) {
                                  if (value!.isNotEmpty) {
                                    if (value.length > 4) {
                                      return 'ตัวเลข 4 หลักค่ะ';
                                    }
                                  }

                                  return null;
                                },
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                    //=========================== ชื่อร้าน/แผงในตลาด ==================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                      child: TextFormField(
                        readOnly: true,
                        controller: _model.textController10,
                        focusNode: _model.textFieldFocusNode10,
                        autofocus: false,
                        obscureText: false,
                        decoration: InputDecoration(
                          isDense: true,
                          labelStyle: FlutterFlowTheme.of(context).labelMedium,
                          labelText: widget.type == 'Company'
                              ? 'ชื่อร้าน'
                              : 'ชื่อร้าน/แผงในตลาด',
                          hintText: widget.type == 'Company'
                              ? 'ชื่อร้าน'
                              : 'ชื่อร้าน/แผงในตลาด',
                          hintStyle: FlutterFlowTheme.of(context).labelMedium,
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).alternate,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium,
                        textAlign: TextAlign.start,
                        validator: _model.textController10Validator
                            .asValidator(context),
                      ),
                    ), //=============================================================
                    //=========================== เป้าการขาย ==================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                      child: TextFormField(
                        readOnly: true,
                        controller: _model.textController11,
                        focusNode: _model.textFieldFocusNode11,
                        autofocus: false,
                        obscureText: false,
                        decoration: InputDecoration(
                          labelText: 'เป้าการขาย',
                          isDense: true,
                          labelStyle: FlutterFlowTheme.of(context).labelMedium,
                          hintText: 'เป้าการขาย',
                          hintStyle: FlutterFlowTheme.of(context).labelMedium,
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).alternate,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium,
                        textAlign: TextAlign.start,
                        // validator: _model.textController11Validator
                        //     .asValidator(context),
                        keyboardType: TextInputType.number,
                        inputFormatters: [
                          FilteringTextInputFormatter.allow(RegExp(r'[0-9]')),
                        ],
                        validator: (value) {
                          // if (value!.isNotEmpty) {
                          //   if (value.length > 2) {
                          //     return 'เลข 1 - 2 หลักค่ะ';
                          //   }
                          // }

                          return null;
                        },
                      ),
                    ),
                    //============================= dropdown ประเภทสินค้าที่ขายในปัจจุบัน ================================
                    StatefulBuilder(
                      builder: (context, setState) {
                        if (dropDownControllers.length == total) {
                        } else {
                          for (int i = dropDownControllers.length;
                              i < total;
                              i++) {
                            dropDownControllers
                                .add(FormFieldController<String>(''));
                            dropDownValues.add('');
                          }
                        }
                        return Column(
                          children: [
                            for (int index = 0; index < total; index++)
                              Align(
                                alignment: AlignmentDirectional(0.00, 0.00),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 8.0, 5.0),
                                  child: Column(
                                    children: [
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.spaceBetween,
                                        children: [
                                          Text(
                                            '  ประเภทสินค้าที่ขายในปัจจุบัน ลำดับที่ ${index + 1}',
                                            style: FlutterFlowTheme.of(context)
                                                .bodySmall,
                                          ),
                                          total == 1
                                              ? SizedBox()
                                              : index + 1 == total
                                                  ? Padding(
                                                      padding: EdgeInsets.only(
                                                        right: 5.0,
                                                      ),
                                                      child: GestureDetector(
                                                        onTap: () {},
                                                        // => setState(
                                                        //     () => total =
                                                        //         total -
                                                        //             1),
                                                        child: Icon(
                                                          Icons
                                                              .remove_circle_outline_outlined,
                                                          size: 12,
                                                          color: Colors
                                                              .red.shade900,
                                                        ),
                                                      ),
                                                    )
                                                  : SizedBox()
                                        ],
                                      ),
                                      SizedBox(
                                        height: 2,
                                      ),
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0.0, 5.0, 0.0, 5.0),
                                        child: TextFormField(
                                          readOnly: true,
                                          controller: productType![index],
                                          focusNode:
                                              textFieldFocusProductType![index],
                                          autofocus: false,
                                          obscureText: false,
                                          decoration: InputDecoration(
                                            labelText: 'ประเภทสินค้า',
                                            isDense: true,
                                            labelStyle:
                                                FlutterFlowTheme.of(context)
                                                    .labelMedium,
                                            hintText: 'ประเภทสินค้า',
                                            hintStyle:
                                                FlutterFlowTheme.of(context)
                                                    .labelMedium,
                                            enabledBorder: OutlineInputBorder(
                                              borderSide: BorderSide(
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                width: 2.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                            focusedBorder: OutlineInputBorder(
                                              borderSide: BorderSide(
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .primary,
                                                width: 2.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                            errorBorder: OutlineInputBorder(
                                              borderSide: BorderSide(
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .error,
                                                width: 2.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                            focusedErrorBorder:
                                                OutlineInputBorder(
                                              borderSide: BorderSide(
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .error,
                                                width: 2.0,
                                              ),
                                              borderRadius:
                                                  BorderRadius.circular(8.0),
                                            ),
                                          ),
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium,
                                          textAlign: TextAlign.start,
                                          // validator: _model.textController11Validator
                                          //     .asValidator(context),
                                          keyboardType: TextInputType.text,
                                          // inputFormatters: [
                                          //   FilteringTextInputFormatter
                                          //       .allow(RegExp(r'[0-9]')),
                                          // ],
                                          validator: (value) {
                                            // if (value!.isNotEmpty) {
                                            //   if (value.length > 2) {
                                            //     return 'เลข 1 - 2 หลักค่ะ';
                                            //   }
                                            // }

                                            return null;
                                          },
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            //=============================================================
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  0.0, 5.0, 0.0, 5.0),
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  GestureDetector(
                                    onTap: () {},
                                    // => setState(
                                    //     () => total = total + 1),
                                    child: Column(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        Row(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Icon(
                                              Icons.add_circle,
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryText,
                                              size: 24.0,
                                            ),
                                          ],
                                        ),
                                        Row(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Text(
                                              'เลือกกลุ่มสินค้าเพิ่ม',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        );
                      },
                    ),
                    // //======================== ระยะเวลาการดำเนินการ =====================================
                    // Padding(
                    //   padding:
                    //       EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                    //   child: Row(
                    //     mainAxisSize: MainAxisSize.max,
                    //     mainAxisAlignment: MainAxisAlignment.center,
                    //     children: [
                    //       Column(
                    //         mainAxisSize: MainAxisSize.max,
                    //         children: [
                    //           Row(
                    //             mainAxisSize: MainAxisSize.max,
                    //             children: [
                    //               Icon(
                    //                 Icons.add_circle,
                    //                 color: FlutterFlowTheme.of(context)
                    //                     .secondaryText,
                    //                 size: 24.0,
                    //               ),
                    //             ],
                    //           ),
                    //           Row(
                    //             mainAxisSize: MainAxisSize.max,
                    //             children: [
                    //               Text(
                    //                 'เลือกกลุ่มสินค้าเพิ่ม',
                    //                 style:
                    //                     FlutterFlowTheme.of(context).bodyMedium,
                    //               ),
                    //             ],
                    //           ),
                    //         ],
                    //       ),
                    //     ],
                    //   ),
                    // ),
                    //======================== ระยะเวลาการดำเนินการ=====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            'ระยะเวลาเปิดดำเนินการ',
                            style: FlutterFlowTheme.of(context).bodyMedium,
                          ),
                          Expanded(
                            child: Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  8.0, 0.0, 8.0, 0.0),
                              child: TextFormField(
                                readOnly: true,
                                controller: _model.textController12,
                                focusNode: _model.textFieldFocusNode12,
                                autofocus: false,
                                obscureText: false,
                                decoration: InputDecoration(
                                  isDense: true,
                                  labelStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  labelText: 'ระยะเวลาเปิดดำเนินการ',
                                  hintText: 'ระยะเวลาเปิดดำเนินการ',
                                  hintStyle:
                                      FlutterFlowTheme.of(context).labelMedium,
                                  enabledBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context)
                                          .alternate,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color:
                                          FlutterFlowTheme.of(context).primary,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  errorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  focusedErrorBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: FlutterFlowTheme.of(context).error,
                                      width: 2.0,
                                    ),
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                ),
                                style: FlutterFlowTheme.of(context).bodyMedium,
                                textAlign: TextAlign.left,
                                // validator: _model
                                //     .textController12Validator
                                //     .asValidator(context),
                                keyboardType: TextInputType.text,
                                // inputFormatters: [
                                //   FilteringTextInputFormatter.allow(
                                //       RegExp(r'[0-9]')),
                                // ],
                                validator: (value) {
                                  // if (value!.isNotEmpty) {
                                  //   if (value.length > 2) {
                                  //     return 'เลข 1 - 2 หลักค่ะ';
                                  //   }
                                  // }

                                  return null;
                                },
                              ),
                            ),
                          ),
                        ],
                      ),
                    ), //=============================================================
                    //======================== dropdown กลุ่มสินค้าท่สั่งซืื้อ =====================================
                    StatefulBuilder(
                      builder: (context, setState) {
                        if (dropDownControllers2.length == total) {
                        } else {
                          for (int i = dropDownControllers2.length;
                              i < total2;
                              i++) {
                            dropDownControllers2
                                .add(FormFieldController<String>(''));
                            dropDownValues2.add('');
                          }
                        }
                        return Column(
                          children: [
                            for (int index = 0; index < total2; index++)
                              Align(
                                alignment: AlignmentDirectional(0.00, 0.00),
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 8.0, 5.0),
                                  child: Column(
                                    children: [
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        mainAxisAlignment:
                                            MainAxisAlignment.spaceBetween,
                                        children: [
                                          Text(
                                            '  กลุ่มสินค้าที่สั่งชื้อ ลำดับที่ ${index + 1}',
                                            style: FlutterFlowTheme.of(context)
                                                .bodySmall,
                                          ),
                                          total2 == 1
                                              ? SizedBox()
                                              : index + 1 == total2
                                                  ? Padding(
                                                      padding: EdgeInsets.only(
                                                        right: 5.0,
                                                      ),
                                                      child: GestureDetector(
                                                        onTap: () {},
                                                        //  => setState(
                                                        //     () => total2 =
                                                        //         total2 -
                                                        //             1),
                                                        child: Icon(
                                                          Icons
                                                              .remove_circle_outline_outlined,
                                                          size: 12,
                                                          color: Colors
                                                              .red.shade900,
                                                        ),
                                                      ),
                                                    )
                                                  : SizedBox()
                                        ],
                                      ),
                                      SizedBox(
                                        height: 2,
                                      ),
                                      SizedBox(
                                        height: 55.0,
                                        child: FlutterFlowDropDown<String>(
                                          // controller: _model.dropDownValueController1 ??=
                                          //     FormFieldController<String>(null),
                                          disabled: true,
                                          controller:
                                              dropDownControllers2[index],
                                          options: categoryNameList

                                          // [
                                          //   'ประเภทสินค้า 1',
                                          //   'ประเภทสินค้า 2',
                                          //   'ประเภทสินค้า 3',
                                          //   'ประเภทสินค้า 4',
                                          //   'ประเภทสินค้า 5'
                                          // ]
                                          ,
                                          searchHintText:
                                              'กลุ่มสินค้าที่สั่งชื้อ',
                                          // onChanged: (val) =>
                                          //     setState(() => _model.dropDownValue1 = val),
                                          onChanged: (val) => setState(() {
                                            dropDownValues2[index] = val;
                                          }),
                                          height: 45.0,
                                          textStyle:
                                              FlutterFlowTheme.of(context)
                                                  .bodyMedium,
                                          hintText: 'กลุ่มสินค้าที่สั่งชื้อ',
                                          icon: Icon(
                                            Icons.arrow_left_outlined,
                                            color: FlutterFlowTheme.of(context)
                                                .secondaryText,
                                            size: 24.0,
                                          ),
                                          elevation: 2.0,
                                          borderColor:
                                              FlutterFlowTheme.of(context)
                                                  .alternate,
                                          borderWidth: 2.0,
                                          borderRadius: 8.0,
                                          margin:
                                              EdgeInsetsDirectional.fromSTEB(
                                                  16.0, 4.0, 16.0, 4.0),
                                          hidesUnderline: true,
                                          isSearchable: false,
                                          isMultiSelect: false,
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            //===========================กลุ่มสินค้าที่สั่งชื้อ ปุ่ม==================================
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  0.0, 5.0, 0.0, 5.0),
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  GestureDetector(
                                    onTap: () {},
                                    // => setState(
                                    //     () => total2 = total2 + 1),
                                    child: Column(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        Row(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Icon(
                                              Icons.add_circle,
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryText,
                                              size: 24.0,
                                            ),
                                          ],
                                        ),
                                        Row(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Text(
                                              'เลือกกลุ่มสินค้าเพิ่ม',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        );
                      },
                    ),
                    // Padding(
                    //   padding:
                    //       EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                    //   child: FlutterFlowDropDown<String>(
                    //     controller: _model.dropDownValueController2 ??=
                    //         FormFieldController<String>(null),
                    //     options: categoryNameList
                    //     //  [
                    //     //   'กลุ่มสินค้า 1',
                    //     //   'กลุ่มสินค้า 2',
                    //     //   'กลุ่มสินค้า 3',
                    //     //   'กลุ่มสินค้า 4',
                    //     //   'กลุ่มสินค้า 5'
                    //     // ]
                    //     ,
                    //     onChanged: (val) =>
                    //         setState(() => _model.dropDownValue2 = val),
                    //     height: 45.0,
                    //     textStyle: FlutterFlowTheme.of(context).bodyMedium,
                    //     hintText: 'กลุ่มสินค้าที่สั่งชื้อ',
                    //     icon: Icon(
                    //       Icons.arrow_left_outlined,
                    //       color: FlutterFlowTheme.of(context).secondaryText,
                    //       size: 24.0,
                    //     ),
                    //     elevation: 2.0,
                    //     borderColor: FlutterFlowTheme.of(context).alternate,
                    //     borderWidth: 2.0,
                    //     borderRadius: 8.0,
                    //     margin: EdgeInsetsDirectional.fromSTEB(
                    //         16.0, 4.0, 16.0, 4.0),
                    //     hidesUnderline: true,
                    //     isSearchable: false,
                    //     isMultiSelect: false,
                    //   ),
                    // ),
                    //=============================================================
                    //=========================== หัวข้อ ที่อยู่ในการจัดส่ง ==================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            'ที่อยูในการจัดสง (ระบุได้มากกวา 1 สถานที่) โดยเลือก จังหวัด ,อำเภอ , ตำบล , รหัสไปรษณีย์',
                            style: FlutterFlowTheme.of(context).bodyMedium,
                          ),
                        ],
                      ),
                    ),
                    //=========================== ลิสต์ที่อยู่ในการจัดส่ง ==================================
                    StatefulBuilder(builder: (context, setState) {
                      if (resultList.length == total3) {
                      } else {
                        for (int i = resultList.length; i < total3; i++) {
                          resultList.add({
                            'ID': DateTime.now().toString(),
                            'รหัสสาขา': '', //new
                            'ชื่อสาขา': '', //new
                            'HouseNumber': '',
                            'VillageName': '',
                            'Road': '', //new
                            'Province': '',
                            'District': '',
                            'SubDistrict': '',
                            'PostalCode': '',
                            'Latitude': '',
                            'Longitude': '',
                            'Image': '',
                            'ผู้ติดต่อ': '', //new
                            'ตำแหน่ง': '', //new
                            'โทรศัพท์': '', //new
                          });

                          selected.add({
                            'province_id': null,
                            'amphure_id': null,
                            'tambon_id': null,
                          });

                          postalCodeController!.add(TextEditingController());

                          amphures!.add([]);
                          tambons!.add([]);
                          textFieldFocusSaka!.add(FocusNode());
                          textFieldFocusNameSaka!.add(FocusNode());
                          textFieldFocusRoad!.add(FocusNode());
                          textFieldFocusNameContract!.add(FocusNode());
                          textFieldFocusType!.add(FocusNode());
                          textFieldFocusPhone!.add(FocusNode());
                          textFieldFocusHouseNumber!.add(FocusNode());
                          textFieldFocusVillageName!.add(FocusNode());
                          textFieldFocusPostalCode!.add(FocusNode());
                          textFieldFocusLatitude!.add(FocusNode());
                          textFieldFocusLongitude!.add(FocusNode());

                          // dropDownValueControllerProvince
                          //     .add(FormFieldController<String>(''));
                          // dropDownValueControllerDistrict
                          //     .add(FormFieldController<String>(''));
                          // dropDownValueControllerSubDistrict
                          //     .add(FormFieldController<String>(''));
                          latList!.add(TextEditingController());
                          lotList!.add(TextEditingController());
                        }
                      }

                      return Padding(
                        padding:
                            EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                        child: Column(
                          children: [
                            for (int index = 0;
                                index < resultList.length;
                                index++)
                              Column(
                                children: [
                                  Row(
                                    mainAxisSize: MainAxisSize.max,
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceBetween,
                                    children: [
                                      Text(
                                        ' ที่อยูในการจัดสง ลำดับที่ ${index + 1}',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                      total3 == 1
                                          ? SizedBox()
                                          : index + 1 == total3
                                              ? Padding(
                                                  padding: EdgeInsets.only(
                                                    right: 5.0,
                                                  ),
                                                  child: GestureDetector(
                                                    onTap: () {},
                                                    child: Icon(
                                                      Icons
                                                          .remove_circle_outline_outlined,
                                                      size: 12,
                                                      color:
                                                          Colors.red.shade900,
                                                    ),
                                                  ),
                                                )
                                              : SizedBox()
                                    ],
                                  ),
                                  const SizedBox(
                                    height: 5,
                                  ),
                                  TextFormField(
                                    // controller: _model.textController15,
                                    readOnly: true,

                                    initialValue: resultList[index]['รหัสสาขา'],
                                    onChanged: (value) {
                                      resultList[index]['รหัสสาขา'] = value;

                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    },
                                    focusNode: textFieldFocusSaka![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText: 'กรุณาพิมพ์รหัสสาขา',
                                      hintText: 'กรุณาพิมพ์รหัสสาขา',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    validator: _model.textController15Validator
                                        .asValidator(context),
                                  ),
                                  const SizedBox(
                                    height: 10,
                                  ),
                                  TextFormField(
                                    // controller: _model.textController15,
                                    readOnly: true,

                                    initialValue: resultList[index]['ชื่อสาขา'],
                                    onChanged: (value) {
                                      resultList[index]['ชื่อสาขา'] = value;

                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    },
                                    focusNode: textFieldFocusNameSaka![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText: 'กรุณาพิมพ์ชื่อสาขา',
                                      hintText: 'กรุณาพิมพ์ชื่อสาขา',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    validator: _model.textController15Validator
                                        .asValidator(context),
                                  ),

                                  const SizedBox(
                                    height: 10,
                                  ),
                                  TextFormField(
                                    // controller: _model.textController15,
                                    readOnly: true,

                                    initialValue: resultList[index]
                                        ['HouseNumber'],
                                    onChanged: (value) {
                                      resultList[index]['HouseNumber'] = value;

                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    },
                                    focusNode:
                                        textFieldFocusHouseNumber![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText: 'กรุณาพิมพ์ชื่อบ้านเลขที',
                                      hintText: 'กรุณาพิมพ์ชื่อบ้านเลขที',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    validator: _model.textController15Validator
                                        .asValidator(context),
                                  ),
                                  const SizedBox(
                                    height: 5,
                                  ),
                                  Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        0.0, 5.0, 0.0, 5.0),
                                    child: TextFormField(
                                      readOnly: true,

                                      // controller: _model.textController16,
                                      initialValue: resultList[index]
                                          ['VillageName'],
                                      onChanged: (value) {
                                        resultList[index]['VillageName'] =
                                            value;
                                        refreshAddressForDropdown(
                                            setState, index);

                                        toSetState();
                                      },
                                      focusNode:
                                          textFieldFocusVillageName![index],
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        labelText: 'ชื่อหมู่บ้าน',
                                        hintText: 'ชื่อหมู่บ้าน',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.start,
                                      validator: _model
                                          .textController16Validator
                                          .asValidator(context),
                                    ),
                                  ), //=============================================================
                                  const SizedBox(
                                    height: 5,
                                  ),
                                  TextFormField(
                                    // controller: _model.textController15,
                                    readOnly: true,

                                    initialValue: resultList[index]['Road'],
                                    onChanged: (value) {
                                      resultList[index]['Road'] = value;
                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    },
                                    focusNode: textFieldFocusRoad![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText: 'กรุณาพิมพ์ชื่อถนน',
                                      hintText: 'กรุณาพิมพ์ชื่อถนน',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    validator: _model.textController15Validator
                                        .asValidator(context),
                                  ),
                                  const SizedBox(
                                    height: 10,
                                  ),
                                  IgnorePointer(
                                    child: dropdownList(
                                      label: 'Province: ',
                                      id: 'province_id',
                                      list: provinces,
                                      child: 'amphure',
                                      childsId: ['amphure_id', 'tambon_id'],
                                      setChilds: [setAmphures, setTambons],
                                      index: index,
                                    ),
                                  ),
                                  SizedBox(height: 10.0),
                                  IgnorePointer(
                                    child: dropdownList(
                                      label: 'District: ',
                                      id: 'amphure_id',
                                      list: amphures![index],
                                      child: 'tambon',
                                      childsId: ['tambon_id'],
                                      setChilds: [setTambons],
                                      index: index,
                                    ),
                                  ),
                                  SizedBox(height: 10.0),
                                  IgnorePointer(
                                    child: dropdownList(
                                      label: 'Sub-district: ',
                                      id: 'tambon_id',
                                      list: tambons![index],
                                      setChilds: null,
                                      childsId: null,
                                      index: index,
                                    ),
                                  ),
                                  const SizedBox(
                                    height: 5,
                                  ),
                                  // Align(
                                  //   alignment:
                                  //       AlignmentDirectional(0.00, 0.00),
                                  //   child: Padding(
                                  //     padding:
                                  //         EdgeInsetsDirectional.fromSTEB(
                                  //             0.0, 5.0, 0.0, 5.0),
                                  //     child: FlutterFlowDropDown<String>(
                                  //       controller:
                                  //           dropDownValueControllerProvince[
                                  //               index],
                                  //       options: [
                                  //         'เชียงใหม่',
                                  //         'นครราชสีมา',
                                  //         'กาญจนบุรี'
                                  //       ],
                                  //       onChanged: (val) => setState(
                                  //         () {
                                  //           _model.dropDownValue3 = val;
                                  //           //  dropDownValueControllerProvince[
                                  //           //       index] = val!;
                                  //           resultList[index]
                                  //               ['Province'] = val;
                                  //         },
                                  //       ),
                                  //       height: 45.0,
                                  //       textStyle:
                                  //           FlutterFlowTheme.of(context)
                                  //               .bodyMedium,
                                  //       hintText: 'จังหวัด',
                                  //       icon: Icon(
                                  //         Icons.arrow_left_outlined,
                                  //         color:
                                  //             FlutterFlowTheme.of(context)
                                  //                 .secondaryText,
                                  //         size: 24.0,
                                  //       ),
                                  //       elevation: 2.0,
                                  //       borderColor:
                                  //           FlutterFlowTheme.of(context)
                                  //               .alternate,
                                  //       borderWidth: 2.0,
                                  //       borderRadius: 8.0,
                                  //       margin: EdgeInsetsDirectional
                                  //           .fromSTEB(
                                  //               16.0, 4.0, 16.0, 4.0),
                                  //       hidesUnderline: true,
                                  //       isSearchable: false,
                                  //       isMultiSelect: false,
                                  //     ),
                                  //   ),
                                  // ), //=============================================================
                                  // Padding(
                                  //   padding:
                                  //       EdgeInsetsDirectional.fromSTEB(
                                  //           0.0, 5.0, 0.0, 5.0),
                                  //   child: FlutterFlowDropDown<String>(
                                  //     controller: _model
                                  //             .dropDownValueController4 ??=
                                  //         FormFieldController<String>(
                                  //             null),
                                  //     options: [
                                  //       '\tเมืองเชียงใหม่',
                                  //       'จอมทอง',
                                  //       '\tแม่แจ่ม'
                                  //     ],
                                  //     onChanged: (val) => setState(() {
                                  //       _model.dropDownValue4 = val;
                                  //       resultList[index]['District'] =
                                  //           val;
                                  //     }),
                                  //     height: 45.0,
                                  //     textStyle:
                                  //         FlutterFlowTheme.of(context)
                                  //             .bodyMedium,
                                  //     hintText: 'อำเภอ',
                                  //     icon: Icon(
                                  //       Icons.arrow_left_outlined,
                                  //       color:
                                  //           FlutterFlowTheme.of(context)
                                  //               .secondaryText,
                                  //       size: 24.0,
                                  //     ),
                                  //     elevation: 2.0,
                                  //     borderColor:
                                  //         FlutterFlowTheme.of(context)
                                  //             .alternate,
                                  //     borderWidth: 2.0,
                                  //     borderRadius: 8.0,
                                  //     margin:
                                  //         EdgeInsetsDirectional.fromSTEB(
                                  //             16.0, 4.0, 16.0, 4.0),
                                  //     hidesUnderline: true,
                                  //     isSearchable: false,
                                  //     isMultiSelect: false,
                                  //   ),
                                  // ), //=============================================================
                                  // Padding(
                                  //   padding:
                                  //       EdgeInsetsDirectional.fromSTEB(
                                  //           0.0, 5.0, 0.0, 5.0),
                                  //   child: FlutterFlowDropDown<String>(
                                  //     controller: _model
                                  //             .dropDownValueController5 ??=
                                  //         FormFieldController<String>(
                                  //             null),
                                  //     options: [
                                  //       '\tศรีภูมิ',
                                  //       'พระสิงห์',
                                  //       'หายยา\t'
                                  //     ],
                                  //     onChanged: (val) => setState(() {
                                  //       _model.dropDownValue5 = val;
                                  //       resultList[index]['SubDistrict'] =
                                  //           val;
                                  //     }),
                                  //     height: 45.0,
                                  //     textStyle:
                                  //         FlutterFlowTheme.of(context)
                                  //             .bodyMedium,
                                  //     hintText: 'ตำบล',
                                  //     icon: Icon(
                                  //       Icons.arrow_left_outlined,
                                  //       color:
                                  //           FlutterFlowTheme.of(context)
                                  //               .secondaryText,
                                  //       size: 24.0,
                                  //     ),
                                  //     elevation: 2.0,
                                  //     borderColor:
                                  //         FlutterFlowTheme.of(context)
                                  //             .alternate,
                                  //     borderWidth: 2.0,
                                  //     borderRadius: 8.0,
                                  //     margin:
                                  //         EdgeInsetsDirectional.fromSTEB(
                                  //             16.0, 4.0, 16.0, 4.0),
                                  //     hidesUnderline: true,
                                  //     isSearchable: false,
                                  //     isMultiSelect: false,
                                  //   ),
                                  // ),
                                  //======================= รหัสไปรษณีย์ ======================================
                                  Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        0.0, 5.0, 0.0, 5.0),
                                    child: TextFormField(
                                      readOnly: true,

                                      // controller: _model.textController17,
                                      initialValue: resultList[index]
                                          ['PostalCode'],
                                      onChanged: (value) {
                                        resultList[index]['PostalCode'] = value;

                                        refreshAddressForDropdown(
                                            setState, index);

                                        toSetState();
                                      },
                                      focusNode:
                                          textFieldFocusPostalCode![index],
                                      autofocus: false,
                                      obscureText: false,
                                      decoration: InputDecoration(
                                        isDense: true,
                                        labelStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        labelText: 'รหัสไปรษณีย์',
                                        hintText: 'รหัสไปรษณีย์',
                                        hintStyle: FlutterFlowTheme.of(context)
                                            .labelMedium,
                                        enabledBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .primary,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        errorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        focusedErrorBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: FlutterFlowTheme.of(context)
                                                .error,
                                            width: 2.0,
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                      ),
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      textAlign: TextAlign.start,
                                      // validator: _model
                                      //     .textController17Validator
                                      //     .asValidator(context),
                                      keyboardType: TextInputType.number,
                                      inputFormatters: [
                                        FilteringTextInputFormatter.allow(
                                            RegExp(r'[0-9]')),
                                      ],
                                      validator: (value) {
                                        if (value!.isNotEmpty) {
                                          if (value.length > 5) {
                                            return 'กรุณาใส่รหัสไปรษณีย์ 5 หลักค่ะ';
                                          }
                                        }

                                        return null;
                                      },
                                    ),
                                  ),
                                  const SizedBox(
                                    height: 5,
                                  ),
                                  TextFormField(
                                    // controller: _model.textController15,
                                    readOnly: true,

                                    initialValue: resultList[index]
                                        ['ผู้ติดต่อ'],
                                    onChanged: (value) {
                                      resultList[index]['ผู้ติดต่อ'] = value;

                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    },
                                    focusNode:
                                        textFieldFocusNameContract![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText: 'กรุณาพิมพ์ชื่อผู้ติดต่อ',
                                      hintText: 'กรุณาพิมพ์ชื่อผู้ติดต่อ',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    validator: _model.textController15Validator
                                        .asValidator(context),
                                  ),
                                  const SizedBox(
                                    height: 10,
                                  ),
                                  TextFormField(
                                    // controller: _model.textController15,
                                    readOnly: true,

                                    initialValue: resultList[index]['ตำแหน่ง'],
                                    onChanged: (value) {
                                      resultList[index]['ตำแหน่ง'] = value;

                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    },
                                    focusNode: textFieldFocusType![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText: 'กรุณาพิมพ์ชื่อตำแหน่ง',
                                      hintText: 'กรุณาพิมพ์ชื่อตำแหน่ง',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    validator: _model.textController15Validator
                                        .asValidator(context),
                                  ),
                                  const SizedBox(
                                    height: 10,
                                  ),
                                  TextFormField(
                                    // controller: _model.textController15,
                                    readOnly: true,

                                    initialValue: resultList[index]['โทรศัพท์'],
                                    onChanged: (value) {
                                      resultList[index]['โทรศัพท์'] = value;

                                      refreshAddressForDropdown(
                                          setState, index);

                                      toSetState();
                                    },
                                    focusNode: textFieldFocusPhone![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText: 'กรุณาพิมพ์โทรศัพท์',
                                      hintText: 'กรุณาพิมพ์โทรศัพท์',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    validator: _model.textController15Validator
                                        .asValidator(context),
                                  ),
                                  SizedBox(
                                    height: 5,
                                  ),
                                  //======================= ละติจูด ลองติจูด ======================================
                                  Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        0.0, 5.0, 0.0, 15.0),
                                    child: Column(
                                      mainAxisSize: MainAxisSize.min,
                                      mainAxisAlignment:
                                          MainAxisAlignment.start,
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: [
                                        // Text(
                                        //   ' ละติดจูด ลองติจูด สามารถค้นหาได้จากการค้นหาในแผนที่',
                                        //   style:
                                        //       FlutterFlowTheme.of(context)
                                        //           .bodySmall,
                                        // ),
                                        Row(
                                          mainAxisSize: MainAxisSize.max,
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceAround,
                                          children: [
                                            Expanded(
                                              child: TextFormField(
                                                readOnly: true,

                                                controller: latList![index],
                                                onChanged: (value) {
                                                  resultList[index]
                                                      ['Latitude'] = value;
                                                  refreshAddressForDropdown(
                                                      setState, index);

                                                  toSetState();
                                                },
                                                focusNode:
                                                    textFieldFocusLatitude![
                                                        index],
                                                autofocus: false,
                                                obscureText: false,
                                                decoration: InputDecoration(
                                                  isDense: true,
                                                  labelStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .labelMedium,
                                                  labelText: 'ละติจูด',
                                                  hintText: 'ละติจูด',
                                                  hintStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .labelMedium,
                                                  enabledBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .alternate,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                  focusedBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                  errorBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .error,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                  focusedErrorBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .error,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium,
                                                textAlign: TextAlign.start,
                                                // validator: _model
                                                //     .textController171Validator
                                                //     .asValidator(context),
                                                keyboardType:
                                                    TextInputType.number,
                                                // inputFormatters: [
                                                //   FilteringTextInputFormatter
                                                //       .allow(RegExp(
                                                //           r'[0-9]')),
                                                // ],
                                                validator: (value) {
                                                  return null;
                                                },
                                              ),
                                            ),
                                            SizedBox(
                                              width: 10,
                                            ),
                                            Expanded(
                                              child: TextFormField(
                                                readOnly: true,

                                                controller: lotList![index],
                                                onChanged: (value) {
                                                  resultList[index]
                                                      ['Longitude'] = value;

                                                  refreshAddressForDropdown(
                                                      setState, index);

                                                  toSetState();
                                                },
                                                focusNode:
                                                    textFieldFocusLongitude![
                                                        index],
                                                autofocus: false,
                                                obscureText: false,
                                                decoration: InputDecoration(
                                                  isDense: true,
                                                  labelStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .labelMedium,
                                                  hintText: 'ลองติจูด',
                                                  labelText: 'ลองติจูด',
                                                  hintStyle:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .labelMedium,
                                                  enabledBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .alternate,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                  focusedBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                  errorBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .error,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                  focusedErrorBorder:
                                                      OutlineInputBorder(
                                                    borderSide: BorderSide(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .error,
                                                      width: 2.0,
                                                    ),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8.0),
                                                  ),
                                                ),
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium,
                                                textAlign: TextAlign.start,
                                                // validator: _model
                                                //     .textController172Validator
                                                //     .asValidator(context),
                                                keyboardType:
                                                    TextInputType.number,
                                                // inputFormatters: [
                                                //   FilteringTextInputFormatter
                                                //       .allow(RegExp(
                                                //           r'[0-9]')),
                                                // ],
                                                validator: (value) {
                                                  // if (value!.isNotEmpty) {
                                                  //   if (value.length >
                                                  //       5) {
                                                  //     return 'กรุณาใส่รหัสไปรษณีย์ 5 หลักค่ะ';
                                                  //   }
                                                  // }

                                                  return null;
                                                },
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),

                                  //======================= รูปภาพอ้างอิง ======================================
                                  Align(
                                    alignment: AlignmentDirectional(0.00, 0.00),
                                    child: Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0.0, 0.0, 0.0, 10.0),
                                      child: FlutterFlowDropDown<String>(
                                        disabled: true,
                                        controller:
                                            dropDownControllersimageAddress[
                                                index],
                                        options: imageAddressAllForDropdown,
                                        onChanged: (val) => setState(() {
                                          String result = val!.replaceAll(
                                              RegExp(r'[^0-9]'), '');
                                          print('rrrr');
                                          print(result);
                                          resultList[index]['Image'] = result;
                                        }),
                                        height: 55.0,
                                        textStyle: FlutterFlowTheme.of(context)
                                            .bodyMedium,
                                        hintText:
                                            'เลือก 1 รูปภาพไว้อ้างอิงร้านค้า',
                                        icon: Icon(
                                          Icons.arrow_left_outlined,
                                          color: FlutterFlowTheme.of(context)
                                              .secondaryText,
                                          size: 24.0,
                                        ),
                                        elevation: 2.0,
                                        borderColor: checkSummit
                                            ? Colors.red.shade700
                                            : FlutterFlowTheme.of(context)
                                                .alternate,
                                        borderWidth: 2.0,
                                        borderRadius: 8.0,
                                        margin: EdgeInsetsDirectional.fromSTEB(
                                            16.0, 4.0, 16.0, 4.0),
                                        hidesUnderline: true,
                                        isSearchable: false,
                                        isMultiSelect: false,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            //=========================== ปุ่ม เพิ่มที่อยู่ ==================================
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  0.0, 5.0, 0.0, 5.0),
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  GestureDetector(
                                    onTap: () {},
                                    //  => setState(
                                    //     () => total3 = total3 + 1),
                                    child: Column(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        Row(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Icon(
                                              Icons.add_circle,
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondaryText,
                                              size: 24.0,
                                            ),
                                          ],
                                        ),
                                        Row(
                                          mainAxisSize: MainAxisSize.max,
                                          children: [
                                            Text(
                                              'เพิ่มที่อยู่',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      );
                    }),
                    //=============================================================

                    //==================== ตารางราคา API =========================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' ตารางราคา (MFOOD API) (เพื่อใช้ผูกกับที่อยู่ในการจัดสง)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    Align(
                      alignment: AlignmentDirectional(0.00, 0.00),
                      child: Padding(
                        padding:
                            EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
                        child: SizedBox(
                          height: 55.0,
                          child: FlutterFlowDropDown<String>(
                            disabled: true,
                            controller: _model.dropDownValueController6 ??=
                                FormFieldController<String>(null),
                            options: [
                              'ตารางราคา 1',
                              'ตารางราคา 2',
                              'ตารางราคา 3'
                            ],
                            onChanged: (val) =>
                                setState(() => _model.dropDownValue6 = val),
                            height: 45.0,
                            textStyle: FlutterFlowTheme.of(context).bodyMedium,
                            hintText:
                                'ตารางราคา (MFOOD API) (เพื่อใช้ผูกกับที่อยู่ในการจัดสง)',
                            icon: Icon(
                              Icons.arrow_left_outlined,
                              color: FlutterFlowTheme.of(context).secondaryText,
                              size: 24.0,
                            ),
                            elevation: 2.0,
                            borderColor: FlutterFlowTheme.of(context).alternate,
                            borderWidth: 2.0,
                            borderRadius: 8.0,
                            margin: EdgeInsetsDirectional.fromSTEB(
                                16.0, 4.0, 16.0, 4.0),
                            hidesUnderline: true,
                            isSearchable: false,
                            isMultiSelect: false,
                          ),
                        ),
                      ),
                    ),
                    //========================== หัวข้อ แผนที่ ===================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 5.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            'พิกัด GPS (Google Map Pin location)',
                            style: FlutterFlowTheme.of(context).bodyMedium,
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                5.0, 0.0, 0.0, 0.0),
                            child: Icon(
                              FFIcons.kstoreMarker,
                              color: FlutterFlowTheme.of(context).secondaryText,
                              size: 24.0,
                            ),
                          ),
                        ],
                      ),
                    ),

                    //======================= แผนที่ ======================================
                    Align(
                      alignment: AlignmentDirectional(0.00, 0.00),
                      child: Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(
                            10.0, 5.0, 10.0, 5.0),
                        child: Stack(
                          children: [
                            Container(
                              width: MediaQuery.sizeOf(context).width * 1.0,
                              height: 500.0,
                              decoration: BoxDecoration(
                                color: FlutterFlowTheme.of(context)
                                    .secondaryBackground,
                                borderRadius: BorderRadius.circular(0.0),
                                shape: BoxShape.rectangle,
                              ),
                              // child: FlutterFlowGoogleMap(
                              //   controller: _model.googleMapsController,
                              //   onCameraIdle: (latLng) =>
                              //       _model.googleMapsCenter = latLng,
                              //   initialLocation: _model.googleMapsCenter ??=
                              //       LatLng(13.7120469, 100.7913919),
                              //   markerColor: GoogleMarkerColor.violet,
                              //   mapType: MapType.normal,
                              //   style: GoogleMapStyle.standard,
                              //   initialZoom: 14.0,
                              //   allowInteraction: true,
                              //   allowZoom: true,
                              //   showZoomControls: true,
                              //   showLocation: true,
                              //   showCompass: false,
                              //   showMapToolbar: false,
                              //   showTraffic: false,
                              //   centerMapOnMarkerTap: true,
                              // ),
                              child: GoogleMap(
                                // onTap: (argument) async => await _launchUrl(),
                                onTap: (argument) async {
                                  // await showQucikAlertMap(
                                  //     context, resultList);
                                  // setState(() {});
                                },
                                // mapType: MapType.hybrid,
                                // initialCameraPosition: _kGooglePlex,
                                // onMapCreated: (GoogleMapController controller) {
                                //   _controller.complete(controller);
                                // },
                                mapType: ui_maps.MapType.hybrid,
                                initialCameraPosition: _kGooglePlex,
                                markers: markers, // เพิ่มนี่
                                onMapCreated: (GoogleMapController controller) {
                                  _mapController.complete(controller);
                                },
                              ),
                            ),
                            //=============================================================
                            GestureDetector(
                              onTap: () async {
                                // await showQucikAlertMap(
                                //     context, resultList);
                                // setState(() {});
                              },
                              child: Align(
                                alignment: Alignment.topCenter,
                                child: Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      30.0, 15.0, 30.0, 5.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      Container(
                                        width:
                                            MediaQuery.sizeOf(context).width *
                                                0.4,
                                        height: 25.0,
                                        decoration: BoxDecoration(
                                          color: FlutterFlowTheme.of(context)
                                              .accent3,
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        alignment:
                                            AlignmentDirectional(0.00, 0.00),
                                        child: Row(
                                          children: [
                                            Expanded(
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 10.0),
                                                child: GestureDetector(
                                                  onTap: () async {
                                                    // await showQucikAlertMap(
                                                    //     context,
                                                    //     resultList);
                                                    // setState(() {});
                                                  },
                                                  child: TextFormField(
                                                    readOnly: true,

                                                    enabled: false,
                                                    // controller: _model
                                                    //     .textController18,
                                                    // focusNode: _model
                                                    //     .textFieldFocusNode18,
                                                    autofocus: false,
                                                    obscureText: false,
                                                    decoration: InputDecoration(
                                                      isDense: true,
                                                      labelStyle:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .labelMedium,
                                                      hintText:
                                                          '        ค้นหาสถานที่',
                                                      hintStyle:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .labelMedium
                                                              .override(
                                                                fontFamily:
                                                                    'Kanit',
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .primaryText,
                                                              ),
                                                      enabledBorder:
                                                          InputBorder.none,
                                                      focusedBorder:
                                                          InputBorder.none,
                                                      errorBorder:
                                                          InputBorder.none,
                                                      focusedErrorBorder:
                                                          InputBorder.none,
                                                      // suffixIcon: Icon(
                                                      //   Icons.search_sharp,
                                                      // ),
                                                    ),
                                                    style: FlutterFlowTheme.of(
                                                            context)
                                                        .bodyMedium,
                                                    textAlign: TextAlign.center,
                                                    // validator: _model
                                                    //     .textController18Validator
                                                    //     .asValidator(
                                                    //         context),
                                                  ),
                                                ),
                                              ),
                                            ),
                                            Icon(
                                              Icons.search_sharp,
                                            ),
                                          ],
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    //========================= หัวข้อ รูปภาพร้านค้า ====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(0.0, 5.0, 0.0, 5.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 0.0, 5.0),
                            child: Text(
                              'รูปภาพร้านค้า อัพโหลดได้หลายภาพ (ต้องมีอยางน้อย 1 รูป)',
                              style: FlutterFlowTheme.of(context).bodyMedium,
                            ),
                          ),
                        ],
                      ),
                    ),
                    //==========================  รูปถ่ายร้านค้า  ===================================
                    imageFile.length > 3
                        ? Padding(
                            padding: const EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 0.0, 0.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Align(
                                  alignment:
                                      const AlignmentDirectional(0.00, 0.00),
                                  child: Padding(
                                    padding:
                                        const EdgeInsetsDirectional.fromSTEB(
                                            0.0, 5.0, 8.0, 5.0),
                                    child: Container(
                                      width: MediaQuery.of(context).size.width *
                                          0.63,
                                      decoration: BoxDecoration(
                                        color: FlutterFlowTheme.of(context)
                                            .accent3,
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      child: Padding(
                                        padding: const EdgeInsetsDirectional
                                            .fromSTEB(10.0, 10.0, 10.0, 10.0),
                                        child: SingleChildScrollView(
                                          scrollDirection: Axis.horizontal,
                                          child: Container(
                                            color: null,
                                            width: MediaQuery.of(context)
                                                        .size
                                                        .width *
                                                    0.63 +
                                                (((MediaQuery.of(context)
                                                                .size
                                                                .width *
                                                            0.63) /
                                                        4.5) *
                                                    (imageUrl.length - 2)),
                                            height: 100,
                                            child: Row(
                                              mainAxisSize: MainAxisSize.max,
                                              children: [
                                                ListView.builder(
                                                  padding:
                                                      const EdgeInsets.fromLTRB(
                                                          20, 0, 0, 0),
                                                  shrinkWrap: true,
                                                  scrollDirection:
                                                      Axis.horizontal,
                                                  physics:
                                                      const NeverScrollableScrollPhysics(),
                                                  itemCount:
                                                      imageUint8List.length,
                                                  itemBuilder:
                                                      (context, index) {
                                                    return imageFile[index] ==
                                                            null
                                                        ? Padding(
                                                            padding:
                                                                const EdgeInsets
                                                                    .fromLTRB(0,
                                                                    0, 10, 0),
                                                            child: ClipRRect(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8),
                                                              child: Stack(
                                                                children: [
                                                                  Image.network(
                                                                    imageUrl[
                                                                        index],
                                                                    width: (MediaQuery.of(context).size.width *
                                                                            0.63) /
                                                                        4.5,
                                                                    height:
                                                                        100.0,
                                                                    fit: BoxFit
                                                                        .cover,
                                                                  ),
                                                                  Positioned(
                                                                    right: 0,
                                                                    bottom: 0,
                                                                    child:
                                                                        Container(
                                                                      width: 20,
                                                                      height:
                                                                          15,
                                                                      decoration:
                                                                          const BoxDecoration(
                                                                        color: Colors
                                                                            .white,
                                                                        borderRadius:
                                                                            BorderRadius.only(
                                                                          topLeft:
                                                                              Radius.circular(8),
                                                                          bottomRight:
                                                                              Radius.circular(10),
                                                                        ),
                                                                      ),
                                                                      child:
                                                                          Padding(
                                                                        padding: const EdgeInsets
                                                                            .only(
                                                                            top:
                                                                                2),
                                                                        child:
                                                                            Text(
                                                                          '${index + 1}/${imageFile.length}',
                                                                          style: const TextStyle(
                                                                              color: Colors.black,
                                                                              fontSize: 10),
                                                                          textAlign:
                                                                              TextAlign.center,
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                  Positioned(
                                                                    top: 4,
                                                                    right: 4,
                                                                    child:
                                                                        Container(
                                                                      width: 25,
                                                                      height:
                                                                          25,
                                                                      decoration:
                                                                          BoxDecoration(
                                                                        color: Colors
                                                                            .white,
                                                                        borderRadius:
                                                                            BorderRadius.circular(30),
                                                                        boxShadow: [
                                                                          BoxShadow(
                                                                            color:
                                                                                Colors.black.withOpacity(0.2),
                                                                            spreadRadius:
                                                                                1,
                                                                            blurRadius:
                                                                                1,
                                                                            offset:
                                                                                const Offset(
                                                                              0,
                                                                              1,
                                                                            ), // changes position of shadow
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      child:
                                                                          GestureDetector(
                                                                        child:
                                                                            const Icon(
                                                                          Icons
                                                                              .delete,
                                                                          size:
                                                                              20,
                                                                          color:
                                                                              Colors.black,
                                                                        ),
                                                                        onTap:
                                                                            () {
                                                                          // imageUrlFromFirestore.removeAt(index);
                                                                          // imageUint8List.removeAt(index);
                                                                          // imageFile.removeAt(index);
                                                                          // image!.removeAt(index);
                                                                          // imageUrl.removeAt(index);
                                                                          // imageLength = imageLength - 1;

                                                                          // setState(() {});
                                                                        },
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          )
                                                        : Padding(
                                                            padding:
                                                                const EdgeInsets
                                                                    .fromLTRB(0,
                                                                    0, 10, 0),
                                                            child: ClipRRect(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8),
                                                              child: Stack(
                                                                children: [
                                                                  Image.memory(
                                                                    imageUint8List[
                                                                        index],
                                                                    width: (MediaQuery.of(context).size.width *
                                                                            0.63) /
                                                                        4.5,
                                                                    height:
                                                                        100.0,
                                                                    fit: BoxFit
                                                                        .cover,
                                                                  ),
                                                                  Positioned(
                                                                    right: 0,
                                                                    bottom: 0,
                                                                    child:
                                                                        Container(
                                                                      width: 20,
                                                                      height:
                                                                          15,
                                                                      decoration:
                                                                          const BoxDecoration(
                                                                        color: Colors
                                                                            .white,
                                                                        borderRadius:
                                                                            BorderRadius.only(
                                                                          topLeft:
                                                                              Radius.circular(8),
                                                                          bottomRight:
                                                                              Radius.circular(10),
                                                                        ),
                                                                      ),
                                                                      child:
                                                                          Padding(
                                                                        padding: const EdgeInsets
                                                                            .only(
                                                                            top:
                                                                                2),
                                                                        child:
                                                                            Text(
                                                                          '${index + 1}/${imageFile.length}',
                                                                          style: const TextStyle(
                                                                              color: Colors.black,
                                                                              fontSize: 10),
                                                                          textAlign:
                                                                              TextAlign.center,
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                  Positioned(
                                                                    top: 4,
                                                                    right: 4,
                                                                    child:
                                                                        Container(
                                                                      width: 25,
                                                                      height:
                                                                          25,
                                                                      decoration:
                                                                          BoxDecoration(
                                                                        color: Colors
                                                                            .white,
                                                                        borderRadius:
                                                                            BorderRadius.circular(30),
                                                                        boxShadow: [
                                                                          BoxShadow(
                                                                            color:
                                                                                Colors.black.withOpacity(0.2),
                                                                            spreadRadius:
                                                                                1,
                                                                            blurRadius:
                                                                                1,
                                                                            offset:
                                                                                const Offset(
                                                                              0,
                                                                              1,
                                                                            ), // changes position of shadow
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      child:
                                                                          GestureDetector(
                                                                        child:
                                                                            const Icon(
                                                                          Icons
                                                                              .delete,
                                                                          size:
                                                                              20,
                                                                          color:
                                                                              Colors.black,
                                                                        ),
                                                                        onTap:
                                                                            () {
                                                                          // imageUrlFromFirestore.removeAt(index);
                                                                          // imageUint8List.removeAt(index);
                                                                          // imageFile.removeAt(index);
                                                                          // image!.removeAt(index);
                                                                          // imageUrl.removeAt(index);
                                                                          // imageLength = imageLength - 1;

                                                                          // setState(() {});
                                                                        },
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          );
                                                  },
                                                ),
                                                InkWell(
                                                  onTap: () {
                                                    // showQucikAlert(
                                                    //     context);
                                                  },
                                                  child: Container(
                                                    width:
                                                        (MediaQuery.of(context)
                                                                    .size
                                                                    .width *
                                                                0.63) /
                                                            4.5,
                                                    height: 100.0,
                                                    decoration: BoxDecoration(
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8),
                                                    ),
                                                    child: Column(
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .center,
                                                      children: [
                                                        CircleAvatar(
                                                          maxRadius: 30,
                                                          backgroundColor:
                                                              Colors.black,
                                                          child: Icon(
                                                            FFIcons
                                                                .kpaperclipPlus,
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primaryBackground,
                                                            size: 30.0,
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          )
                        : Padding(
                            padding: const EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 0.0, 0.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Align(
                                  alignment:
                                      const AlignmentDirectional(0.00, 0.00),
                                  child: Padding(
                                    padding:
                                        const EdgeInsetsDirectional.fromSTEB(
                                            0.0, 5.0, 8.0, 5.0),
                                    child: Container(
                                      width: MediaQuery.of(context).size.width *
                                          0.63,
                                      decoration: BoxDecoration(
                                        color: FlutterFlowTheme.of(context)
                                            .accent3,
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      child: Padding(
                                        padding: const EdgeInsetsDirectional
                                            .fromSTEB(10.0, 10.0, 10.0, 10.0),
                                        child: SingleChildScrollView(
                                          scrollDirection: Axis.horizontal,
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            mainAxisAlignment:
                                                MainAxisAlignment.spaceBetween,
                                            children: [
                                              imageUrl.length >= 1
                                                  ? imageFile[0] == null
                                                      ? Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .fromLTRB(
                                                                  0, 0, 10, 0),
                                                          child: ClipRRect(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8),
                                                            child: Stack(
                                                              children: [
                                                                Image.network(
                                                                  imageUrl[0],
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                                Positioned(
                                                                  right: 0,
                                                                  bottom: 0,
                                                                  child:
                                                                      Container(
                                                                    width: 20,
                                                                    height: 15,
                                                                    decoration:
                                                                        const BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        topLeft:
                                                                            Radius.circular(8),
                                                                        bottomRight:
                                                                            Radius.circular(10),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              2),
                                                                      child:
                                                                          Text(
                                                                        '${0 + 1}/${imageFile.length}',
                                                                        style: const TextStyle(
                                                                            color:
                                                                                Colors.black,
                                                                            fontSize: 10),
                                                                        textAlign:
                                                                            TextAlign.center,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Positioned(
                                                                  top: 4,
                                                                  right: 4,
                                                                  child:
                                                                      Container(
                                                                    width: 25,
                                                                    height: 25,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              30),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors
                                                                              .black
                                                                              .withOpacity(0.2),
                                                                          spreadRadius:
                                                                              1,
                                                                          blurRadius:
                                                                              1,
                                                                          offset:
                                                                              const Offset(
                                                                            0,
                                                                            1,
                                                                          ), // changes position of shadow
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        GestureDetector(
                                                                      child:
                                                                          const Icon(
                                                                        Icons
                                                                            .delete,
                                                                        size:
                                                                            20,
                                                                        color: Colors
                                                                            .black,
                                                                      ),
                                                                      onTap:
                                                                          () {
                                                                        // imageUrlFromFirestore.removeAt(0);
                                                                        // imageUint8List.removeAt(0);
                                                                        // imageFile.removeAt(0);
                                                                        // image!.removeAt(0);
                                                                        // imageUrl.removeAt(0);
                                                                        // imageLength = imageLength - 1;

                                                                        // setState(() {});
                                                                      },
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        )
                                                      : Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .fromLTRB(
                                                                  0, 0, 10, 0),
                                                          child: ClipRRect(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8),
                                                            child: Stack(
                                                              children: [
                                                                Image.memory(
                                                                  imageUint8List[
                                                                      0],
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                                Positioned(
                                                                  right: 0,
                                                                  bottom: 0,
                                                                  child:
                                                                      Container(
                                                                    width: 20,
                                                                    height: 15,
                                                                    decoration:
                                                                        const BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        topLeft:
                                                                            Radius.circular(8),
                                                                        bottomRight:
                                                                            Radius.circular(10),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              2),
                                                                      child:
                                                                          Text(
                                                                        '${0 + 1}/${imageFile.length}',
                                                                        style: const TextStyle(
                                                                            color:
                                                                                Colors.black,
                                                                            fontSize: 10),
                                                                        textAlign:
                                                                            TextAlign.center,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Positioned(
                                                                  top: 4,
                                                                  right: 4,
                                                                  child:
                                                                      Container(
                                                                    width: 25,
                                                                    height: 25,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              30),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors
                                                                              .black
                                                                              .withOpacity(0.2),
                                                                          spreadRadius:
                                                                              1,
                                                                          blurRadius:
                                                                              1,
                                                                          offset:
                                                                              const Offset(
                                                                            0,
                                                                            1,
                                                                          ), // changes position of shadow
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        GestureDetector(
                                                                      child:
                                                                          const Icon(
                                                                        Icons
                                                                            .delete,
                                                                        size:
                                                                            20,
                                                                        color: Colors
                                                                            .black,
                                                                      ),
                                                                      onTap:
                                                                          () {
                                                                        // imageUrlFromFirestore.removeAt(0);
                                                                        // imageUint8List.removeAt(0);
                                                                        // imageFile.removeAt(0);
                                                                        // image!.removeAt(0);
                                                                        // imageUrl.removeAt(0);
                                                                        // imageLength = imageLength - 1;

                                                                        // setState(() {});
                                                                      },
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        )
                                                  : Padding(
                                                      padding:
                                                          const EdgeInsetsDirectional
                                                              .fromSTEB(5.0,
                                                              0.0, 5.0, 0.0),
                                                      child: Container(
                                                        color: null,
                                                        width: (MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width *
                                                                0.63) /
                                                            4.5,
                                                        height: 100.0,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryBackground,
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        child: Icon(
                                                          FFIcons.kimagePlus,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          size: 40.0,
                                                        ),
                                                      ),
                                                    ),
                                              imageUrl.length >= 2
                                                  ? imageFile[1] == null
                                                      ? Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .fromLTRB(
                                                                  0, 0, 10, 0),
                                                          child: ClipRRect(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8),
                                                            child: Stack(
                                                              children: [
                                                                Image.network(
                                                                  imageUrl[1],
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                                Positioned(
                                                                  right: 0,
                                                                  bottom: 0,
                                                                  child:
                                                                      Container(
                                                                    width: 20,
                                                                    height: 15,
                                                                    decoration:
                                                                        const BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        topLeft:
                                                                            Radius.circular(8),
                                                                        bottomRight:
                                                                            Radius.circular(10),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              2),
                                                                      child:
                                                                          Text(
                                                                        '${1 + 1}/${imageFile.length}',
                                                                        style: const TextStyle(
                                                                            color:
                                                                                Colors.black,
                                                                            fontSize: 10),
                                                                        textAlign:
                                                                            TextAlign.center,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Positioned(
                                                                  top: 4,
                                                                  right: 4,
                                                                  child:
                                                                      Container(
                                                                    width: 25,
                                                                    height: 25,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              30),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors
                                                                              .black
                                                                              .withOpacity(0.2),
                                                                          spreadRadius:
                                                                              1,
                                                                          blurRadius:
                                                                              1,
                                                                          offset:
                                                                              const Offset(
                                                                            0,
                                                                            1,
                                                                          ), // changes position of shadow
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        GestureDetector(
                                                                      child:
                                                                          const Icon(
                                                                        Icons
                                                                            .delete,
                                                                        size:
                                                                            20,
                                                                        color: Colors
                                                                            .black,
                                                                      ),
                                                                      onTap:
                                                                          () {
                                                                        // imageUrlFromFirestore.removeAt(1);
                                                                        // imageUint8List.removeAt(1);
                                                                        // imageFile.removeAt(1);
                                                                        // image!.removeAt(1);
                                                                        // imageUrl.removeAt(1);
                                                                        // imageLength = imageLength - 1;

                                                                        // setState(() {});
                                                                      },
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        )
                                                      : Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .fromLTRB(
                                                                  0, 0, 10, 0),
                                                          child: ClipRRect(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8),
                                                            child: Stack(
                                                              children: [
                                                                Image.memory(
                                                                  imageUint8List[
                                                                      1],
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                                Positioned(
                                                                  right: 0,
                                                                  bottom: 0,
                                                                  child:
                                                                      Container(
                                                                    width: 20,
                                                                    height: 15,
                                                                    decoration:
                                                                        const BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        topLeft:
                                                                            Radius.circular(8),
                                                                        bottomRight:
                                                                            Radius.circular(10),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              2),
                                                                      child:
                                                                          Text(
                                                                        '${1 + 1}/${imageFile.length}',
                                                                        style: const TextStyle(
                                                                            color:
                                                                                Colors.black,
                                                                            fontSize: 10),
                                                                        textAlign:
                                                                            TextAlign.center,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Positioned(
                                                                  top: 4,
                                                                  right: 4,
                                                                  child:
                                                                      Container(
                                                                    width: 25,
                                                                    height: 25,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              30),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors
                                                                              .black
                                                                              .withOpacity(0.2),
                                                                          spreadRadius:
                                                                              1,
                                                                          blurRadius:
                                                                              1,
                                                                          offset:
                                                                              const Offset(
                                                                            0,
                                                                            1,
                                                                          ), // changes position of shadow
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        GestureDetector(
                                                                      child:
                                                                          const Icon(
                                                                        Icons
                                                                            .delete,
                                                                        size:
                                                                            20,
                                                                        color: Colors
                                                                            .black,
                                                                      ),
                                                                      onTap:
                                                                          () {
                                                                        // imageUrlFromFirestore.removeAt(1);
                                                                        // imageUint8List.removeAt(1);
                                                                        // imageFile.removeAt(1);
                                                                        // image!.removeAt(1);
                                                                        // imageUrl.removeAt(1);
                                                                        // imageLength = imageLength - 1;

                                                                        // // imageListFile
                                                                        // //     .removeAt(
                                                                        // //         index);
                                                                        // setState(() {});
                                                                      },
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        )
                                                  : Padding(
                                                      padding:
                                                          const EdgeInsetsDirectional
                                                              .fromSTEB(5.0,
                                                              0.0, 5.0, 0.0),
                                                      child: Container(
                                                        width: (MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width *
                                                                0.63) /
                                                            4.5,
                                                        height: 100.0,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryBackground,
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        child: Icon(
                                                          FFIcons.kimagePlus,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          size: 40.0,
                                                        ),
                                                      ),
                                                    ),
                                              imageUrl.length >= 3
                                                  ? imageFile[2] == null
                                                      ? Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .fromLTRB(
                                                                  0, 0, 10, 0),
                                                          child: ClipRRect(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8),
                                                            child: Stack(
                                                              children: [
                                                                Image.network(
                                                                  imageUrl[2],
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                                Positioned(
                                                                  right: 0,
                                                                  bottom: 0,
                                                                  child:
                                                                      Container(
                                                                    width: 20,
                                                                    height: 15,
                                                                    decoration:
                                                                        const BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        topLeft:
                                                                            Radius.circular(8),
                                                                        bottomRight:
                                                                            Radius.circular(10),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              2),
                                                                      child:
                                                                          Text(
                                                                        '${2 + 1}/${imageFile.length}',
                                                                        style: const TextStyle(
                                                                            color:
                                                                                Colors.black,
                                                                            fontSize: 10),
                                                                        textAlign:
                                                                            TextAlign.center,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Positioned(
                                                                  top: 4,
                                                                  right: 4,
                                                                  child:
                                                                      Container(
                                                                    width: 25,
                                                                    height: 25,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              30),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors
                                                                              .black
                                                                              .withOpacity(0.2),
                                                                          spreadRadius:
                                                                              1,
                                                                          blurRadius:
                                                                              1,
                                                                          offset:
                                                                              const Offset(
                                                                            0,
                                                                            1,
                                                                          ), // changes position of shadow
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        GestureDetector(
                                                                      child:
                                                                          const Icon(
                                                                        Icons
                                                                            .delete,
                                                                        size:
                                                                            20,
                                                                        color: Colors
                                                                            .black,
                                                                      ),
                                                                      onTap:
                                                                          () {
                                                                        // imageUrlFromFirestore.removeAt(2);
                                                                        // imageUint8List.removeAt(2);
                                                                        // imageFile.removeAt(2);
                                                                        // image!.removeAt(2);
                                                                        // imageUrl.removeAt(2);
                                                                        // imageLength = imageLength - 1;

                                                                        // setState(() {});
                                                                      },
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        )
                                                      : Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .fromLTRB(
                                                                  0, 0, 10, 0),
                                                          child: ClipRRect(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8),
                                                            child: Stack(
                                                              children: [
                                                                Image.memory(
                                                                  imageUint8List[
                                                                      2],
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                                Positioned(
                                                                  right: 0,
                                                                  bottom: 0,
                                                                  child:
                                                                      Container(
                                                                    width: 20,
                                                                    height: 15,
                                                                    decoration:
                                                                        const BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        topLeft:
                                                                            Radius.circular(8),
                                                                        bottomRight:
                                                                            Radius.circular(10),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              2),
                                                                      child:
                                                                          Text(
                                                                        '${2 + 1}/${imageFile.length}',
                                                                        style: const TextStyle(
                                                                            color:
                                                                                Colors.black,
                                                                            fontSize: 10),
                                                                        textAlign:
                                                                            TextAlign.center,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Positioned(
                                                                  top: 4,
                                                                  right: 4,
                                                                  child:
                                                                      Container(
                                                                    width: 25,
                                                                    height: 25,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: Colors
                                                                          .white,
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              30),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors
                                                                              .black
                                                                              .withOpacity(0.2),
                                                                          spreadRadius:
                                                                              1,
                                                                          blurRadius:
                                                                              1,
                                                                          offset:
                                                                              const Offset(
                                                                            0,
                                                                            1,
                                                                          ), // changes position of shadow
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        GestureDetector(
                                                                      child:
                                                                          const Icon(
                                                                        Icons
                                                                            .delete,
                                                                        size:
                                                                            20,
                                                                        color: Colors
                                                                            .black,
                                                                      ),
                                                                      onTap:
                                                                          () {
                                                                        // imageUrlFromFirestore.removeAt(2);
                                                                        // imageUint8List.removeAt(2);
                                                                        // imageFile.removeAt(2);
                                                                        // image!.removeAt(2);
                                                                        // imageUrl.removeAt(2);
                                                                        // imageLength = imageLength - 1;

                                                                        // setState(() {});
                                                                      },
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        )
                                                  : Padding(
                                                      padding:
                                                          const EdgeInsetsDirectional
                                                              .fromSTEB(5.0,
                                                              0.0, 6.0, 0.0),
                                                      child: Container(
                                                        width: (MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width *
                                                                0.63) /
                                                            4.5,
                                                        height: 100.0,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryBackground,
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        child: Icon(
                                                          FFIcons.kimagePlus,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          size: 40.0,
                                                        ),
                                                      ),
                                                    ),
                                              Padding(
                                                padding:
                                                    const EdgeInsetsDirectional
                                                        .fromSTEB(
                                                        5.0, 0.0, 5.0, 0.0),
                                                child: InkWell(
                                                  onTap: () {
                                                    // showQucikAlert(
                                                    //     context);
                                                  },
                                                  child: Container(
                                                    width:
                                                        (MediaQuery.of(context)
                                                                    .size
                                                                    .width *
                                                                0.63) /
                                                            4.5,
                                                    height: 100.0,
                                                    decoration: BoxDecoration(
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8),
                                                    ),
                                                    child: Column(
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .center,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .center,
                                                      children: [
                                                        CircleAvatar(
                                                          maxRadius: 30,
                                                          backgroundColor:
                                                              Colors.black,
                                                          child: Icon(
                                                            FFIcons
                                                                .kpaperclipPlus,
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .primaryBackground,
                                                            size: 30.0,
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                    //================== หัวข้อ กำหนดที่อยูในการจัดส่ง ===========================================
                    const SizedBox(
                      height: 10,
                    ),
                    StatefulBuilder(builder: (context, setState) {
                      if (resultListSendAndBill.length == total4) {
                      } else {
                        for (int i = resultListSendAndBill.length;
                            i < total4;
                            i++) {
                          resultListSendAndBill.add({
                            'ที่อยู่จัดส่ง': '',
                            'ชื่อออกบิล': '',
                            'ที่อยู่ออกบิล': '',
                          });

                          dropDownControllersSend
                              .add(FormFieldController<String>(''));
                          dropDownControllersBill
                              .add(FormFieldController<String>(''));

                          sendAndBillList!.add(TextEditingController());

                          textFieldFocusSendAndBill!.add(FocusNode());
                        }
                      }

                      return Column(
                        children: [
                          for (int index = 0; index < total4; index++)
                            Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Row(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceBetween,
                                  mainAxisSize: MainAxisSize.max,
                                  children: [
                                    Text(
                                      '  กำหนดที่อยู่ในการจัดส่งและออกบิล ลำดับที่ ${index + 1}',
                                      style: FlutterFlowTheme.of(context)
                                          .labelLarge,
                                    ),
                                    total4 == 1
                                        ? SizedBox()
                                        : index + 1 == total4
                                            ? Padding(
                                                padding: EdgeInsets.only(
                                                  right: 5.0,
                                                ),
                                                child: GestureDetector(
                                                  onTap: () {},
                                                  //   setState(() {
                                                  // total4 =
                                                  //     total4 - 1;
                                                  // resultListSendAndBill
                                                  //     .removeLast();

                                                  // dropDownControllersSend
                                                  //     .removeLast();

                                                  // dropDownControllersBill
                                                  //     .removeLast();

                                                  // sendAndBillList!
                                                  //     .removeLast();

                                                  // textFieldFocusSendAndBill!
                                                  //     .removeLast();
                                                  // }),
                                                  child: Icon(
                                                    Icons
                                                        .remove_circle_outline_outlined,
                                                    size: 12,
                                                    color: Colors.red.shade900,
                                                  ),
                                                ),
                                              )
                                            : SizedBox()
                                  ],
                                ),
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' กำหนดที่อยูในการจัดส่ง ',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                //======================= กำหนดที่อยูในการจัดส่ง ======================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 0.0, 8.0, 5.0),
                                  child: SizedBox(
                                    height: 55,
                                    child: FlutterFlowDropDown<String>(
                                      disabled: true,
                                      controller:
                                          dropDownControllersSend[index],
                                      options: addressAllForDropdown,
                                      // options: resultList
                                      //     .map((item) =>
                                      //         item['รหัสสาขา'].toString() +
                                      //         (' ') +
                                      //         item['ชื่อสาขา'].toString() +
                                      //         (' ') +
                                      //         item['HouseNumber'].toString() +
                                      //         (' ') +
                                      //         item['VillageName'].toString() +
                                      //         (' ') +
                                      //         item['Road'].toString() +
                                      //         (' ') +
                                      //         item['Province'].toString() +
                                      //         (' ') +
                                      //         item['District'].toString() +
                                      //         (' ') +
                                      //         item['SubDistrict'].toString() +
                                      //         (' ') +
                                      //         item['PostalCode'].toString() +
                                      //         (' ') +
                                      //         item['ผู้ติดต่อ'].toString() +
                                      //         (' ') +
                                      //         item['ตำแหน่ง'].toString() +
                                      //         (' ') +
                                      //         item['โทรศัพท์'].toString())
                                      //     .toList(),
                                      onChanged: (val) => setState(() {
                                        resultListSendAndBill[index]
                                            ['ที่อยู่จัดส่ง'] = val;
                                      }),
                                      height: 45.0,
                                      textStyle: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      hintText: 'ที่อยู่',
                                      icon: Icon(
                                        Icons.arrow_left_outlined,
                                        color: FlutterFlowTheme.of(context)
                                            .secondaryText,
                                        size: 24.0,
                                      ),
                                      elevation: 2.0,
                                      borderColor: FlutterFlowTheme.of(context)
                                          .alternate,
                                      borderWidth: 2.0,
                                      borderRadius: 8.0,
                                      margin: EdgeInsetsDirectional.fromSTEB(
                                          16.0, 4.0, 16.0, 4.0),
                                      hidesUnderline: true,
                                      isSearchable: false,
                                      isMultiSelect: false,
                                    ),
                                  ),
                                ),

                                //======================== ที่อยู่ กำหนดที่อยูในการออกบิล =====================================
                                //=========================== วงเงินเครดิต ==================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 8.0, 5.0),
                                  child: TextFormField(
                                    readOnly: true,
                                    controller: sendAndBillList![index],

                                    // controller: _model.textController15,
                                    focusNode:
                                        textFieldFocusSendAndBill![index],
                                    autofocus: false,
                                    obscureText: false,
                                    decoration: InputDecoration(
                                      isDense: true,
                                      labelStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      labelText:
                                          'ชื่อจ่าหน้าที่อยู่ในการออกบิล',
                                      hintText: 'ชื่อจ่าหน้าที่อยู่ในการออกบิล',
                                      hintStyle: FlutterFlowTheme.of(context)
                                          .labelMedium,
                                      enabledBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .primary,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      errorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                      focusedErrorBorder: OutlineInputBorder(
                                        borderSide: BorderSide(
                                          color: FlutterFlowTheme.of(context)
                                              .error,
                                          width: 2.0,
                                        ),
                                        borderRadius:
                                            BorderRadius.circular(8.0),
                                      ),
                                    ),
                                    style:
                                        FlutterFlowTheme.of(context).bodyMedium,
                                    textAlign: TextAlign.start,
                                    // validator: _model.textController19Validator
                                    //     .asValidator(context),
                                  ),
                                ),

                                //========================  หัวข้อ กำหนดที่อยูในการออกบิล =====================================
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 0.0, 0.0, 0.0),
                                  child: Row(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Text(
                                        ' กำหนดที่อยูในการออกบิล',
                                        style: FlutterFlowTheme.of(context)
                                            .bodySmall,
                                      ),
                                    ],
                                  ),
                                ),
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      8.0, 5.0, 8.0, 5.0),
                                  child: SizedBox(
                                    height: 55,
                                    child: FlutterFlowDropDown<String>(
                                      disabled: true,
                                      controller:
                                          dropDownControllersBill[index],
                                      options: addressAllForDropdown,
                                      // options: resultList
                                      //     .map((item) =>
                                      //         item['รหัสสาขา'].toString() +
                                      //         (' ') +
                                      //         item['ชื่อสาขา'].toString() +
                                      //         (' ') +
                                      //         item['HouseNumber'].toString() +
                                      //         (' ') +
                                      //         item['VillageName'].toString() +
                                      //         (' ') +
                                      //         item['Road'].toString() +
                                      //         (' ') +
                                      //         item['Province'].toString() +
                                      //         (' ') +
                                      //         item['District'].toString() +
                                      //         (' ') +
                                      //         item['SubDistrict'].toString() +
                                      //         (' ') +
                                      //         item['PostalCode'].toString() +
                                      //         (' ') +
                                      //         item['ผู้ติดต่อ'].toString() +
                                      //         (' ') +
                                      //         item['ตำแหน่ง'].toString() +
                                      //         (' ') +
                                      //         item['โทรศัพท์'].toString())
                                      //     .toList(),
                                      onChanged: (val) => setState(() {
                                        resultListSendAndBill[index]
                                            ['ที่อยู่ออกบิล'] = val;
                                      }
                                          // _model.dropDownValue8 = val
                                          ),
                                      height: 45.0,
                                      textStyle: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                      hintText: 'ที่อยู่',
                                      // 'ถ้าเป็นที่อยูอื่นที่อยูในโปรไฟล์ลูกค้าให้เป็น Dropdown ให้เลือก ใน Dropdown แสดงรหัสสาขา',
                                      icon: Icon(
                                        Icons.arrow_left_outlined,
                                        color: FlutterFlowTheme.of(context)
                                            .secondaryText,
                                        size: 24.0,
                                      ),
                                      elevation: 2.0,
                                      borderColor: FlutterFlowTheme.of(context)
                                          .alternate,
                                      borderWidth: 2.0,
                                      borderRadius: 8.0,
                                      margin: EdgeInsetsDirectional.fromSTEB(
                                          16.0, 4.0, 16.0, 4.0),
                                      hidesUnderline: true,
                                      isSearchable: false,
                                      isMultiSelect: false,
                                    ),
                                  ),
                                ),
                                SizedBox(
                                  height: 10,
                                ),
                              ],
                            ),
                          //=============================================================
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                0.0, 15.0, 0.0, 15.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                GestureDetector(
                                  onTap: () {},
                                  // setState(() {
                                  //   total4 = total4 + 1;
                                  // }),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Icon(
                                            Icons.add_circle,
                                            color: FlutterFlowTheme.of(context)
                                                .secondaryText,
                                            size: 24.0,
                                          ),
                                        ],
                                      ),
                                      Row(
                                        mainAxisSize: MainAxisSize.max,
                                        children: [
                                          Text(
                                            'เพิ่มที่อยู่อื่นสำหรับการจัดส่ง',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium,
                                          ),
                                        ],
                                      ),
                                    ],
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ],
                      );
                    }),
                    //======================= เงื่อนไขการชำระเงิน ======================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' เงื่อนไขการชำระเงิน (Dropdown จาก API)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('เงื่อนไขการชำระเงิน')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['PTERM_DESC'] != '' &&
                                docData['IS_ACTIVE'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['PTERM_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: SizedBox(
                              height: 55,
                              child: FlutterFlowDropDown<String>(
                                disabled: true,

                                controller: _model.dropDownValueController12 ??=
                                    FormFieldController<String>(null),
                                // options: ['มัดจำ 50%', 'มัดจำ 60%', 'มัดจำ 70%'],
                                options: dropdown,
                                onChanged: (val) => setState(
                                    () => _model.dropDownValue12 = val),
                                height: 45.0,
                                textStyle:
                                    FlutterFlowTheme.of(context).bodyMedium,
                                hintText:
                                    'เงื่อนไขการชำระเงิน (Dropdown จาก API)',
                                icon: Icon(
                                  Icons.arrow_left_outlined,
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryText,
                                  size: 24.0,
                                ),
                                elevation: 2.0,
                                borderColor:
                                    FlutterFlowTheme.of(context).alternate,
                                borderWidth: 2.0,
                                borderRadius: 8.0,
                                margin: EdgeInsetsDirectional.fromSTEB(
                                    16.0, 4.0, 16.0, 4.0),
                                hidesUnderline: true,
                                isSearchable: false,
                                isMultiSelect: false,
                              ),
                            ),
                          );
                        }),
                    //======================== ระยะเวลาชำระหนี้ =====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' ระยะเวลาชำระหนี้ (Credit terms)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                      child: TextFormField(
                        readOnly: true,
                        controller: _model.textController191,
                        focusNode: _model.textFieldFocusNode191,
                        autofocus: false,
                        obscureText: false,
                        decoration: InputDecoration(
                          isDense: true,
                          labelStyle: FlutterFlowTheme.of(context).labelMedium,
                          labelText: 'ระยะเวลาชำระหนี้',
                          hintText: 'ระยะเวลาชำระหนี้',
                          hintStyle: FlutterFlowTheme.of(context).labelMedium,
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).alternate,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium,
                        textAlign: TextAlign.start,
                        validator: _model.textController19Validator1
                            .asValidator(context),
                      ),
                    ),

                    //=========================== วงเงินเครดิต ==================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                      child: TextFormField(
                        readOnly: true,
                        controller: _model.textController19,
                        focusNode: _model.textFieldFocusNode19,
                        autofocus: false,
                        obscureText: false,
                        decoration: InputDecoration(
                          isDense: true,
                          labelStyle: FlutterFlowTheme.of(context).labelMedium,
                          labelText:
                              'วงเงินเครดิต (กรณีไม่มีการกำหนดเครดิตให้ใสเป็น 0 ค่าเริ่มต้น',
                          hintText:
                              'วงเงินเครดิต (กรณีไม่มีการกำหนดเครดิตให้ใสเป็น 0 ค่าเริ่มต้น',
                          hintStyle: FlutterFlowTheme.of(context).labelMedium,
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).alternate,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium,
                        textAlign: TextAlign.start,
                        validator: _model.textController19Validator
                            .asValidator(context),
                      ),
                    ),
                    //=========================  สวนลดท้ายบิล ====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                      child: TextFormField(
                        readOnly: true,
                        controller: _model.textController20,
                        focusNode: _model.textFieldFocusNode20,
                        autofocus: false,
                        obscureText: false,
                        decoration: InputDecoration(
                          isDense: true,
                          labelStyle: FlutterFlowTheme.of(context).labelMedium,
                          labelText: 'ส่วนลดท้ายบิล (จำนวนบาท หรือ x%)',
                          hintText: 'ส่วนลดท้ายบิล (จำนวนบาท หรือ x%)',
                          hintStyle: FlutterFlowTheme.of(context).labelMedium,
                          enabledBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).alternate,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).primary,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          errorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          focusedErrorBorder: OutlineInputBorder(
                            borderSide: BorderSide(
                              color: FlutterFlowTheme.of(context).error,
                              width: 2.0,
                            ),
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                        ),
                        style: FlutterFlowTheme.of(context).bodyMedium,
                        textAlign: TextAlign.start,
                        validator: _model.textController20Validator
                            .asValidator(context),
                      ),
                    ),
                    //=========================  ประเภทการจ่ายเงิน ====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' ประเภทการจ่ายเงิน (Dropdown จาก API)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('ประเภทการจ่ายเงิน')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['PAYMENT_DESC'] != '') {
                              data['key${index}'] = docData;
                              dropdown.add(docData['PAYMENT_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: SizedBox(
                              height: 55,
                              child: FlutterFlowDropDown<String>(
                                disabled: true,

                                controller: _model.dropDownValueController11 ??=
                                    FormFieldController<String>(null),
                                options: dropdown,
                                //  [
                                //   'เงินสด',
                                //   'โอนผ่านบัญชี',
                                //   'Gb Pay'
                                // ],
                                onChanged: (val) => setState(
                                    () => _model.dropDownValue11 = val),
                                height: 45.0,
                                textStyle:
                                    FlutterFlowTheme.of(context).bodyMedium,
                                hintText:
                                    'ประเภทการจ่ายเงิน (Dropdown จาก API)',
                                icon: Icon(
                                  Icons.arrow_left_outlined,
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryText,
                                  size: 24.0,
                                ),
                                elevation: 2.0,
                                borderColor:
                                    FlutterFlowTheme.of(context).alternate,
                                borderWidth: 2.0,
                                borderRadius: 8.0,
                                margin: EdgeInsetsDirectional.fromSTEB(
                                    16.0, 4.0, 16.0, 4.0),
                                hidesUnderline: true,
                                isSearchable: false,
                                isMultiSelect: false,
                              ),
                            ),
                          );
                        }),

                    //====================== เลือกบัญชีธนาคารของบริษัท =======================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' เลือกบัญชีธนาคารของบริษัท (MFOOD API)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('บัญชีธนาคารของบริษัท')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['BBOOK_DESC'] != '' &&
                                docData['RESULT'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['BBOOK_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: SizedBox(
                              height: 55,
                              child: FlutterFlowDropDown<String>(
                                disabled: true,
                                controller: _model.dropDownValueController13 ??=
                                    FormFieldController<String>(null),
                                options: dropdown,
                                onChanged: (val) => setState(
                                    () => _model.dropDownValue13 = val),
                                height: 45.0,
                                textStyle:
                                    FlutterFlowTheme.of(context).bodyMedium,
                                hintText:
                                    'เลือกบัญชีธนาคารของบริษัท (MFOOD API)',
                                icon: Icon(
                                  Icons.arrow_left_outlined,
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryText,
                                  size: 24.0,
                                ),
                                elevation: 2.0,
                                borderColor:
                                    FlutterFlowTheme.of(context).alternate,
                                borderWidth: 2.0,
                                borderRadius: 8.0,
                                margin: EdgeInsetsDirectional.fromSTEB(
                                    16.0, 4.0, 16.0, 4.0),
                                hidesUnderline: true,
                                isSearchable: false,
                                isMultiSelect: false,
                              ),
                            ),
                          );
                        }),
                    //========================= แผนก ====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' แผนก (MFOOD API)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('แผนก')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['DEPARTMENT_NAME'] != '' &&
                                docData['IS_ACTIVE'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['DEPARTMENT_NAME']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: SizedBox(
                              height: 55,
                              child: FlutterFlowDropDown<String>(
                                disabled: true,
                                controller: _model.dropDownValueController14 ??=
                                    FormFieldController<String>(null),
                                options: dropdown,
                                onChanged: (val) => setState(
                                    () => _model.dropDownValue14 = val),
                                height: 45.0,
                                textStyle:
                                    FlutterFlowTheme.of(context).bodyMedium,
                                hintText: 'แผนก (MFOOD API)',
                                icon: Icon(
                                  Icons.arrow_left_outlined,
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryText,
                                  size: 24.0,
                                ),
                                elevation: 2.0,
                                borderColor:
                                    FlutterFlowTheme.of(context).alternate,
                                borderWidth: 2.0,
                                borderRadius: 8.0,
                                margin: EdgeInsetsDirectional.fromSTEB(
                                    16.0, 4.0, 16.0, 4.0),
                                hidesUnderline: true,
                                isSearchable: false,
                                isMultiSelect: false,
                              ),
                            ),
                          );
                        }),
                    //======================== รหัสบัญชี =====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' รหัสบัญชี (MFOOD API)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('รหัสบัญชี')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['ACC_DESC'] != '') {
                              data['key${index}'] = docData;
                              dropdown.add(docData['ACC_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: SizedBox(
                              height: 55,
                              child: FlutterFlowDropDown<String>(
                                disabled: true,
                                controller: _model.dropDownValueController15 ??=
                                    FormFieldController<String>(null),
                                options: dropdown,
                                onChanged: (val) => setState(
                                    () => _model.dropDownValue15 = val),
                                height: 45.0,
                                textStyle:
                                    FlutterFlowTheme.of(context).bodyMedium,
                                hintText: 'รหัสบัญชี (MFOOD API)',
                                icon: Icon(
                                  Icons.arrow_left_outlined,
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryText,
                                  size: 24.0,
                                ),
                                elevation: 2.0,
                                borderColor:
                                    FlutterFlowTheme.of(context).alternate,
                                borderWidth: 2.0,
                                borderRadius: 8.0,
                                margin: EdgeInsetsDirectional.fromSTEB(
                                    16.0, 4.0, 16.0, 4.0),
                                hidesUnderline: true,
                                isSearchable: false,
                                isMultiSelect: false,
                              ),
                            ),
                          );
                        }),
                    //========================  รหัสพนักงาน =====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' รหัสพนักงานขาย (อ้างอิงจากรหัสพนักงานจากบัญชีผู้ใช้งานที่ Login เข้าระบบ)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),

                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
                      child: IgnorePointer(
                        child: TextFormField(
                          readOnly: true,
                          // controller: _model.textController1Company,
                          // focusNode: _model.textFieldFocusNode1Company,
                          autofocus: false,
                          obscureText: false,
                          decoration: InputDecoration(
                            label: Text(userData!['EmployeeID']),
                            // labelText: 'ชื่อบริษัn',
                            isDense: true,
                            labelStyle:
                                FlutterFlowTheme.of(context).labelMedium,
                            hintText: userData!['EmployeeID'],
                            hintStyle: FlutterFlowTheme.of(context).labelMedium,
                            enabledBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).alternate,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            focusedBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).primary,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            errorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            focusedErrorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                          ),
                          style: FlutterFlowTheme.of(context).bodyMedium,
                          textAlign: TextAlign.start,
                          // validator: _model.textController1Validator
                          //     .asValidator(context),
                        ),
                      ),
                    ),
                    //========================  ชื่อ-สกุล พนักงาน  =====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' ชื่อ-สกุล พนักงานขาย (อ้างอิงจากชื่อผู้ใช้จากบัญชีผู้ใช้งานที่ Login เข้าระบบ)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),

                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 0.0, 8.0, 5.0),
                      child: IgnorePointer(
                        child: TextFormField(
                          readOnly: true,
                          // controller: _model.textController1Company,
                          // focusNode: _model.textFieldFocusNode1Company,
                          autofocus: false,
                          obscureText: false,
                          decoration: InputDecoration(
                            label: Text(
                                userData!['Name'] + ' ' + userData!['Surname']),
                            // labelText: 'ชื่อบริษัn',
                            isDense: true,
                            labelStyle:
                                FlutterFlowTheme.of(context).labelMedium,
                            hintText:
                                userData!['Name'] + ' ' + userData!['Surname'],
                            hintStyle: FlutterFlowTheme.of(context).labelMedium,
                            enabledBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).alternate,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            focusedBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).primary,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            errorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                            focusedErrorBorder: OutlineInputBorder(
                              borderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).error,
                                width: 2.0,
                              ),
                              borderRadius: BorderRadius.circular(8.0),
                            ),
                          ),
                          style: FlutterFlowTheme.of(context).bodyMedium,
                          textAlign: TextAlign.start,
                          // validator: _model.textController1Validator
                          //     .asValidator(context),
                        ),
                      ),
                    ),
                    //======================== รหัสกลุ่มลูกค้า =====================================
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' รหัสกลุ่มลูกค้า กลุ่ม 1 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('รหัสกลุ่มลูกค้าที่1')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['GROUP_DESC'] != '' &&
                                docData['IS_ACTIVE'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['GROUP_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: FlutterFlowDropDown<String>(
                              disabled: true,
                              controller: _model.dropDownValueController18 ??=
                                  FormFieldController<String>(null),
                              options: dropdown,
                              onChanged: (val) =>
                                  setState(() => _model.dropDownValue18 = val),
                              height: 55.0,
                              textStyle:
                                  FlutterFlowTheme.of(context).bodyMedium,
                              hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 1',
                              icon: Icon(
                                Icons.arrow_left_outlined,
                                color:
                                    FlutterFlowTheme.of(context).secondaryText,
                                size: 24.0,
                              ),
                              elevation: 2.0,
                              borderColor:
                                  FlutterFlowTheme.of(context).alternate,
                              borderWidth: 2.0,
                              borderRadius: 8.0,
                              margin: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 4.0, 16.0, 4.0),
                              hidesUnderline: true,
                              isSearchable: false,
                              isMultiSelect: false,
                            ),
                          );
                        }),
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' รหัสกลุ่มลูกค้า กลุ่ม 2 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('รหัสกลุ่มลูกค้าที่2')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['GROUP_DESC'] != '' &&
                                docData['IS_ACTIVE'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['GROUP_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: FlutterFlowDropDown<String>(
                              disabled: true,
                              controller: _model.dropDownValueController182 ??=
                                  FormFieldController<String>(null),
                              options: dropdown,
                              onChanged: (val) =>
                                  setState(() => _model.dropDownValue182 = val),
                              height: 55.0,
                              textStyle:
                                  FlutterFlowTheme.of(context).bodyMedium,
                              hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 2',
                              icon: Icon(
                                Icons.arrow_left_outlined,
                                color:
                                    FlutterFlowTheme.of(context).secondaryText,
                                size: 24.0,
                              ),
                              elevation: 2.0,
                              borderColor:
                                  FlutterFlowTheme.of(context).alternate,
                              borderWidth: 2.0,
                              borderRadius: 8.0,
                              margin: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 4.0, 16.0, 4.0),
                              hidesUnderline: true,
                              isSearchable: false,
                              isMultiSelect: false,
                            ),
                          );
                        }),
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' รหัสกลุ่มลูกค้า กลุ่ม 3 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('รหัสกลุ่มลูกค้าที่3')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['GROUP_DESC'] != '' &&
                                docData['IS_ACTIVE'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['GROUP_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: FlutterFlowDropDown<String>(
                              disabled: true,
                              controller: _model.dropDownValueController183 ??=
                                  FormFieldController<String>(null),
                              options: dropdown,
                              onChanged: (val) =>
                                  setState(() => _model.dropDownValue183 = val),
                              height: 55.0,
                              textStyle:
                                  FlutterFlowTheme.of(context).bodyMedium,
                              hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 3',
                              icon: Icon(
                                Icons.arrow_left_outlined,
                                color:
                                    FlutterFlowTheme.of(context).secondaryText,
                                size: 24.0,
                              ),
                              elevation: 2.0,
                              borderColor:
                                  FlutterFlowTheme.of(context).alternate,
                              borderWidth: 2.0,
                              borderRadius: 8.0,
                              margin: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 4.0, 16.0, 4.0),
                              hidesUnderline: true,
                              isSearchable: false,
                              isMultiSelect: false,
                            ),
                          );
                        }),
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' รหัสกลุ่มลูกค้า กลุ่ม 4 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('รหัสกลุ่มลูกค้าที่4')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['GROUP_DESC'] != '' &&
                                docData['IS_ACTIVE'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['GROUP_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: FlutterFlowDropDown<String>(
                              disabled: true,
                              controller: _model.dropDownValueController184 ??=
                                  FormFieldController<String>(null),
                              options: dropdown,
                              onChanged: (val) =>
                                  setState(() => _model.dropDownValue184 = val),
                              height: 55.0,
                              textStyle:
                                  FlutterFlowTheme.of(context).bodyMedium,
                              hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 4',
                              icon: Icon(
                                Icons.arrow_left_outlined,
                                color:
                                    FlutterFlowTheme.of(context).secondaryText,
                                size: 24.0,
                              ),
                              elevation: 2.0,
                              borderColor:
                                  FlutterFlowTheme.of(context).alternate,
                              borderWidth: 2.0,
                              borderRadius: 8.0,
                              margin: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 4.0, 16.0, 4.0),
                              hidesUnderline: true,
                              isSearchable: false,
                              isMultiSelect: false,
                            ),
                          );
                        }),
                    Padding(
                      padding:
                          EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 0.0, 0.0),
                      child: Row(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Text(
                            ' รหัสกลุ่มลูกค้า กลุ่ม 5 / MFOOD API\' (Require กลุ่มลูกค้า 1 ต้องเลือกข้อมูล)',
                            style: FlutterFlowTheme.of(context).bodySmall,
                          ),
                        ],
                      ),
                    ),
                    StreamBuilder(
                        stream: FirebaseFirestore.instance
                            .collection('รหัสกลุ่มลูกค้าที่5')
                            .snapshots(),
                        builder: (context, snapshot) {
                          if (snapshot.connectionState ==
                              ConnectionState.waiting) {
                            return SizedBox();
                          }
                          if (snapshot.hasError) {
                            return Text('เกิดข้อผิดพลาด: ${snapshot.error}');
                          }
                          if (!snapshot.hasData) {
                            return Text('ไม่พบข้อมูล');
                          }
                          if (snapshot.data!.docs.isEmpty) {
                            print(snapshot.data);
                          }

                          Map<String, dynamic> data = {};
                          List<String> dropdown = [];

                          for (int index = 0;
                              index < snapshot.data!.docs.length;
                              index++) {
                            final Map<String, dynamic> docData =
                                snapshot.data!.docs[index].data()
                                    as Map<String, dynamic>;

                            if (docData['GROUP_DESC'] != '' &&
                                docData['IS_ACTIVE'] == true) {
                              data['key${index}'] = docData;
                              dropdown.add(docData['GROUP_DESC']);
                            }
                          }
                          return Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: FlutterFlowDropDown<String>(
                              disabled: true,
                              controller: _model.dropDownValueController185 ??=
                                  FormFieldController<String>(null),
                              options: dropdown,
                              onChanged: (val) =>
                                  setState(() => _model.dropDownValue185 = val),
                              height: 55.0,
                              textStyle:
                                  FlutterFlowTheme.of(context).bodyMedium,
                              hintText: 'รหัสกลุ่มลูกค้า กลุ่ม 5',
                              icon: Icon(
                                Icons.arrow_left_outlined,
                                color:
                                    FlutterFlowTheme.of(context).secondaryText,
                                size: 24.0,
                              ),
                              elevation: 2.0,
                              borderColor:
                                  FlutterFlowTheme.of(context).alternate,
                              borderWidth: 2.0,
                              borderRadius: 8.0,
                              margin: EdgeInsetsDirectional.fromSTEB(
                                  16.0, 4.0, 16.0, 4.0),
                              hidesUnderline: true,
                              isSearchable: false,
                              isMultiSelect: false,
                            ),
                          );
                        }),
                    //=========================  รหัสบัญชี  ====================================

                    widget.type == 'Company'
                        ? const SizedBox()
                        : Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 5.0, 0.0, 0.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              children: [
                                Text(
                                  ' รหัสบัญชี (MFOOD API)',
                                  style: FlutterFlowTheme.of(context).bodySmall,
                                ),
                              ],
                            ),
                          ),
                    widget.type == 'Company'
                        ? SizedBox()
                        : Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                8.0, 0.0, 8.0, 5.0),
                            child: SizedBox(
                              height: 55,
                              child: FlutterFlowDropDown<String>(
                                disabled: true,
                                controller: _model.dropDownValueController19 ??=
                                    FormFieldController<String>(null),
                                options: [
                                  'รหัสบัญชี   1',
                                  'รหัสบัญชี   2',
                                  'รหัสบัญชี   3'
                                ],
                                onChanged: (val) => setState(
                                    () => _model.dropDownValue19 = val),
                                height: 45.0,
                                textStyle:
                                    FlutterFlowTheme.of(context).bodyMedium,
                                hintText: 'รหัสบัญชี (MFOOD API)',
                                icon: Icon(
                                  Icons.arrow_left_outlined,
                                  color: FlutterFlowTheme.of(context)
                                      .secondaryText,
                                  size: 24.0,
                                ),
                                elevation: 2.0,
                                borderColor:
                                    FlutterFlowTheme.of(context).alternate,
                                borderWidth: 2.0,
                                borderRadius: 8.0,
                                margin: EdgeInsetsDirectional.fromSTEB(
                                    16.0, 4.0, 16.0, 4.0),
                                hidesUnderline: true,
                                isSearchable: false,
                                isMultiSelect: false,
                              ),
                            ),
                          ),
                    //======================  รูปสำหรับเอกสาร =======================================
                    IgnorePointer(
                      child: Padding(
                        padding: const EdgeInsetsDirectional.fromSTEB(
                            8.0, 5.0, 0.0, 5.0),
                        child: Column(
                          mainAxisSize: MainAxisSize.max,
                          mainAxisAlignment: MainAxisAlignment.center,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              'กรุณาแนบเอกสารดั่งต่อไปนี้',
                              style: FlutterFlowTheme.of(context).bodyMedium,
                            ),
                            Column(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                Row(
                                  children: [
                                    Icon(
                                      Icons.check_circle,
                                      color: imageUint8ListList2![0]!.isEmpty &&
                                              finalFileResultString![0]!.isEmpty
                                          ? Colors.grey.shade500
                                          : Colors.green.shade900,
                                      size: 15.0,
                                    ),
                                    const SizedBox(width: 5),
                                    Text(
                                      widget.type == 'Company'
                                          ? '1) สําเนาบัตรประชาชนของกรรมการ (บังคับ)'
                                          : '1) สําเนาบัตรประชาชน (บังคับ)',
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                    ),
                                    const SizedBox(width: 10),
                                    GestureDetector(
                                      onTap: () {
                                        imageDialog2(
                                          widget.type == 'Company'
                                              ? '(สําเนาบัตรประชาชนของกรรมการ)'
                                              : '(สําเนาบัตรประชาชน)',
                                          0,
                                        );
                                      },
                                      child: Icon(
                                        FFIcons.kpaperclipPlus,
                                        color: Colors.black,
                                        size: 15.0,
                                      ),
                                    ),
                                  ],
                                ),
                                for (int index = 0;
                                    index < finalFileResultString![0]!.length;
                                    index++)
                                  Container(
                                    color: null,
                                    width: 600,
                                    child: Row(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        SizedBox(
                                          width: 20,
                                        ),
                                        GestureDetector(
                                          onTap: () {
                                            OpenFile.open(
                                                finalFileResultString![0]![
                                                    index]);
                                          },
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Text(
                                                '- ไฟล์ที่ ${index + 1}',
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium,
                                              ),
                                              SizedBox(width: 5),
                                              Icon(
                                                Icons.search,
                                                size: 16,
                                              ),
                                            ],
                                          ),
                                        ),
                                        Spacer(),
                                        Row(
                                          mainAxisSize: MainAxisSize.min,
                                          children: [
                                            GestureDetector(
                                              onTap: () {
                                                finalFileResultString![0]!
                                                    .removeAt(index);
                                                setState(() {});
                                              },
                                              child: Icon(
                                                Icons.remove_circle_outline,
                                                size: 16,
                                                color: Colors.red.shade900,
                                              ),
                                            ),
                                          ],
                                        ),
                                        SizedBox(
                                          width: 10,
                                        ),
                                      ],
                                    ),
                                  ),
                              ],
                            ),
                            Column(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                Row(
                                  children: [
                                    Icon(
                                      Icons.check_circle,
                                      color: imageUint8ListList2![1]!.isEmpty &&
                                              finalFileResultString![1]!.isEmpty
                                          ? Colors.grey.shade500
                                          : Colors.green.shade900,
                                      size: 15.0,
                                    ),
                                    const SizedBox(width: 5),
                                    Text(
                                      widget.type == 'Company'
                                          ? '2) หนังสือรับรองบริษัทไม่หมดอายุเกิน 6 เดือน (บังคับ)'
                                          : '2) ทะเบียนบ้าน',
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                    ),
                                    const SizedBox(width: 10),
                                    GestureDetector(
                                      onTap: () {
                                        imageDialog2(
                                          widget.type == 'Company'
                                              ? '(หนังสือรับรองบริษัทไม่หมดอายุเกิน 6 เดือน)'
                                              : '(ทะเบียนบ้าน)',
                                          1,
                                        );
                                      },
                                      child: Icon(
                                        FFIcons.kpaperclipPlus,
                                        color: Colors.black,
                                        size: 15.0,
                                      ),
                                    ),
                                  ],
                                ),
                                for (int index = 0;
                                    index < finalFileResultString![1]!.length;
                                    index++)
                                  Container(
                                    color: null,
                                    width: 600,
                                    child: Row(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        SizedBox(
                                          width: 20,
                                        ),
                                        GestureDetector(
                                          onTap: () {
                                            OpenFile.open(
                                                finalFileResultString![1]![
                                                    index]);
                                          },
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Text(
                                                '- ไฟล์ที่ ${index + 1}',
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium,
                                              ),
                                              SizedBox(width: 5),
                                              Icon(
                                                Icons.search,
                                                size: 16,
                                              ),
                                            ],
                                          ),
                                        ),
                                        Spacer(),
                                        Row(
                                          mainAxisSize: MainAxisSize.min,
                                          children: [
                                            GestureDetector(
                                              onTap: () {
                                                finalFileResultString![1]!
                                                    .removeAt(index);
                                                setState(() {});
                                              },
                                              child: Icon(
                                                Icons.remove_circle_outline,
                                                size: 16,
                                                color: Colors.red.shade900,
                                              ),
                                            ),
                                          ],
                                        ),
                                        SizedBox(
                                          width: 10,
                                        ),
                                      ],
                                    ),
                                  ),
                              ],
                            ),
                            Column(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                Row(
                                  children: [
                                    Icon(
                                      Icons.check_circle,
                                      color: imageUint8ListList2![2]!.isEmpty &&
                                              finalFileResultString![2]!.isEmpty
                                          ? Colors.grey.shade500
                                          : Colors.green.shade900,
                                      size: 15.0,
                                    ),
                                    const SizedBox(width: 5),
                                    Text(
                                      widget.type == 'Company'
                                          ? _model.radioButtonValueControllerVat!
                                                      .value ==
                                                  'มี'
                                              ? '3) ภพ.20 (บังคับ)'
                                              : '3) ภพ.20'
                                          : '3) แผนที่ในการจัดส่งสินค้า (บังคับ)',
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                    ),
                                    const SizedBox(width: 10),
                                    GestureDetector(
                                      onTap: () {
                                        imageDialog2(
                                          widget.type == 'Company'
                                              ? '(ภพ.20)'
                                              : '(แผนที่ในการจัดส่งสินค้า)',
                                          2,
                                        );
                                      },
                                      child: Icon(
                                        FFIcons.kpaperclipPlus,
                                        color: Colors.black,
                                        size: 15.0,
                                      ),
                                    ),
                                  ],
                                ),
                                for (int index = 0;
                                    index < finalFileResultString![2]!.length;
                                    index++)
                                  Container(
                                    color: null,
                                    width: 600,
                                    child: Row(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        SizedBox(
                                          width: 20,
                                        ),
                                        GestureDetector(
                                          onTap: () {
                                            OpenFile.open(
                                                finalFileResultString![2]![
                                                    index]);
                                          },
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Text(
                                                '- ไฟล์ที่ ${index + 1}',
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium,
                                              ),
                                              SizedBox(width: 5),
                                              Icon(
                                                Icons.search,
                                                size: 16,
                                              ),
                                            ],
                                          ),
                                        ),
                                        Spacer(),
                                        Row(
                                          mainAxisSize: MainAxisSize.min,
                                          children: [
                                            GestureDetector(
                                              onTap: () {
                                                finalFileResultString![2]!
                                                    .removeAt(index);
                                                setState(() {});
                                              },
                                              child: Icon(
                                                Icons.remove_circle_outline,
                                                size: 16,
                                                color: Colors.red.shade900,
                                              ),
                                            ),
                                          ],
                                        ),
                                        SizedBox(
                                          width: 10,
                                        ),
                                      ],
                                    ),
                                  ),
                              ],
                            ),
                            Column(
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                Row(
                                  children: [
                                    Icon(
                                      Icons.check_circle,
                                      color: imageUint8ListList2![3]!.isEmpty &&
                                              finalFileResultString![3]!.isEmpty
                                          ? Colors.grey.shade500
                                          : Colors.green.shade900,
                                      size: 15.0,
                                    ),
                                    const SizedBox(width: 5),
                                    Text(
                                      widget.type == 'Company'
                                          ? '4) แผนที่ในการจัดส่งสินค้า (บังคับ)'
                                          : '4) เอกสารอื่นๆ',
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                    ),
                                    const SizedBox(width: 10),
                                    GestureDetector(
                                      onTap: () {
                                        imageDialog2(
                                          widget.type == 'Company'
                                              ? '(แผนที่ในการจัดส่งสินค้า)'
                                              : '(เอกสารอื่นๆ)',
                                          3,
                                        );
                                      },
                                      child: Icon(
                                        FFIcons.kpaperclipPlus,
                                        color: Colors.black,
                                        size: 15.0,
                                      ),
                                    ),
                                  ],
                                ),
                                for (int index = 0;
                                    index < finalFileResultString![3]!.length;
                                    index++)
                                  Container(
                                    color: null,
                                    width: 600,
                                    child: Row(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        SizedBox(
                                          width: 20,
                                        ),
                                        GestureDetector(
                                          onTap: () {
                                            OpenFile.open(
                                                finalFileResultString![3]![
                                                    index]);
                                          },
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              Text(
                                                '- ไฟล์ที่ ${index + 1}',
                                                style:
                                                    FlutterFlowTheme.of(context)
                                                        .bodyMedium,
                                              ),
                                              SizedBox(width: 5),
                                              Icon(
                                                Icons.search,
                                                size: 16,
                                              ),
                                            ],
                                          ),
                                        ),
                                        Spacer(),
                                        Row(
                                          mainAxisSize: MainAxisSize.min,
                                          children: [
                                            GestureDetector(
                                              onTap: () {
                                                finalFileResultString![3]!
                                                    .removeAt(index);
                                                setState(() {});
                                              },
                                              child: Icon(
                                                Icons.remove_circle_outline,
                                                size: 16,
                                                color: Colors.red.shade900,
                                              ),
                                            ),
                                          ],
                                        ),
                                        SizedBox(
                                          width: 10,
                                        ),
                                      ],
                                    ),
                                  ),
                              ],
                            ),
                            widget.type == 'Company'
                                ? Column(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      Row(
                                        children: [
                                          Icon(
                                            Icons.check_circle,
                                            color: imageUint8ListList2![4]!
                                                        .isEmpty &&
                                                    finalFileResultString![4]!
                                                        .isEmpty
                                                ? Colors.grey.shade500
                                                : Colors.green.shade900,
                                            size: 15.0,
                                          ),
                                          const SizedBox(width: 5),
                                          Text(
                                            '5) เอกสารอื่นๆ',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium,
                                          ),
                                          const SizedBox(width: 10),
                                          GestureDetector(
                                            onTap: () {
                                              imageDialog2(
                                                '(เอกสารอื่นๆ)',
                                                4,
                                              );
                                            },
                                            child: Icon(
                                              FFIcons.kpaperclipPlus,
                                              color: Colors.black,
                                              size: 15.0,
                                            ),
                                          ),
                                        ],
                                      ),
                                      for (int index = 0;
                                          index <
                                              finalFileResultString![4]!.length;
                                          index++)
                                        Container(
                                          color: null,
                                          width: 600,
                                          child: Row(
                                            mainAxisSize: MainAxisSize.max,
                                            children: [
                                              SizedBox(
                                                width: 20,
                                              ),
                                              GestureDetector(
                                                onTap: () {
                                                  OpenFile.open(
                                                      finalFileResultString![
                                                          4]![index]);
                                                },
                                                child: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.max,
                                                  children: [
                                                    Text(
                                                      '- ไฟล์ที่ ${index + 1}',
                                                      style:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .bodyMedium,
                                                    ),
                                                    SizedBox(width: 5),
                                                    Icon(
                                                      Icons.search,
                                                      size: 16,
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Spacer(),
                                              Row(
                                                mainAxisSize: MainAxisSize.min,
                                                children: [
                                                  GestureDetector(
                                                    onTap: () {
                                                      finalFileResultString![4]!
                                                          .removeAt(index);
                                                      setState(() {});
                                                    },
                                                    child: Icon(
                                                      Icons
                                                          .remove_circle_outline,
                                                      size: 16,
                                                      color:
                                                          Colors.red.shade900,
                                                    ),
                                                  ),
                                                ],
                                              ),
                                              SizedBox(
                                                width: 10,
                                              ),
                                            ],
                                          ),
                                        ),
                                    ],
                                  )
                                : SizedBox(),
                            Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  0.0, 0.0, 0.0, 0.0),
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Align(
                                    alignment: AlignmentDirectional(0.00, 0.00),
                                    child: Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0.0, 5.0, 8.0, 5.0),
                                      child: Container(
                                        width:
                                            MediaQuery.of(context).size.width *
                                                0.63,
                                        decoration: BoxDecoration(
                                          color: FlutterFlowTheme.of(context)
                                              .accent3,
                                          borderRadius:
                                              BorderRadius.circular(8.0),
                                        ),
                                        child: Padding(
                                          padding:
                                              EdgeInsetsDirectional.fromSTEB(
                                                  10.0, 10.0, 10.0, 10.0),
                                          child: SingleChildScrollView(
                                            scrollDirection: Axis.horizontal,
                                            child: Container(
                                              width: (MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width *
                                                          0.63 +
                                                      (((MediaQuery.of(context).size.width * 0.63) / 4.5) *
                                                          (imageUint8ListList2![0]!.length -
                                                              2))) +
                                                  (MediaQuery.of(context).size.width * 0.63 +
                                                      (((MediaQuery.of(context).size.width * 0.63) / 4.5) *
                                                          (imageUint8ListList2![1]!.length -
                                                              2))) +
                                                  (MediaQuery.of(context).size.width * 0.63 +
                                                      (((MediaQuery.of(context).size.width * 0.63) / 4.5) *
                                                          (imageUint8ListList2![2]!.length -
                                                              2))) +
                                                  (MediaQuery.of(context).size.width * 0.63 +
                                                      (((MediaQuery.of(context).size.width * 0.63) / 4.5) *
                                                          (imageUint8ListList2![3]!.length -
                                                              2))) +
                                                  (MediaQuery.of(context).size.width * 0.63 +
                                                      (((MediaQuery.of(context).size.width * 0.63) / 4.5) *
                                                          (imageUint8ListList2![4]!.length - 2))),
                                              height: 100,
                                              child: Row(
                                                mainAxisSize: MainAxisSize.max,
                                                children: [
                                                  ListView.builder(
                                                    padding:
                                                        EdgeInsets.fromLTRB(
                                                            0, 0, 0, 0),
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    physics:
                                                        NeverScrollableScrollPhysics(),
                                                    itemCount:
                                                        imageUint8ListList2![0]!
                                                            .length,
                                                    itemBuilder:
                                                        (context, index) {
                                                      return Padding(
                                                        padding:
                                                            EdgeInsets.fromLTRB(
                                                                0, 0, 10, 0),
                                                        child: ClipRRect(
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(8),
                                                          child: Stack(
                                                            children: [
                                                              GestureDetector(
                                                                onTap: () =>
                                                                    showPreviewImage2(
                                                                  index,
                                                                  'network',
                                                                  0,
                                                                ),
                                                                // child: Image
                                                                //     .memory(
                                                                //   imageUint8ListList2![0]![
                                                                //       index]!,
                                                                child: Image
                                                                    .network(
                                                                  imageUrlFromFirestoreList2![
                                                                          0]![
                                                                      index],
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                              ),
                                                              Positioned(
                                                                right: 0,
                                                                bottom: 0,
                                                                child:
                                                                    Container(
                                                                  width: 20,
                                                                  height: 15,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              8),
                                                                      bottomRight:
                                                                          Radius.circular(
                                                                              10),
                                                                    ),
                                                                  ),
                                                                  child:
                                                                      Padding(
                                                                    padding: const EdgeInsets
                                                                        .only(
                                                                        top: 2),
                                                                    child: Text(
                                                                      '${index + 1}/${imageFile2.length}',
                                                                      style: TextStyle(
                                                                          color: Colors.black,
                                                                          // fontSize: (lang ==
                                                                          //         'my')
                                                                          //     ? 10
                                                                          //     : 10),
                                                                          fontSize: 10),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .center,
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                              Positioned(
                                                                top: 4,
                                                                right: 4,
                                                                child:
                                                                    Container(
                                                                  width: 25,
                                                                  height: 25,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            30),
                                                                    boxShadow: [
                                                                      BoxShadow(
                                                                        color: Colors
                                                                            .black
                                                                            .withOpacity(0.2),
                                                                        spreadRadius:
                                                                            1,
                                                                        blurRadius:
                                                                            1,
                                                                        offset:
                                                                            Offset(
                                                                          0,
                                                                          1,
                                                                        ), // changes position of shadow
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  child:
                                                                      GestureDetector(
                                                                    child: Icon(
                                                                      Icons
                                                                          .delete,
                                                                      size: 20,
                                                                      color: Colors
                                                                          .black,
                                                                    ),
                                                                    onTap: () {
                                                                      imageUint8List2
                                                                          .removeAt(
                                                                              index);
                                                                      imageFile2
                                                                          .removeAt(
                                                                              index);
                                                                      image2!.removeAt(
                                                                          index);
                                                                      imageUrl2
                                                                          .removeAt(
                                                                              index);
                                                                      imageLength2 =
                                                                          imageLength2 -
                                                                              1;
                                                                      //==========================================
                                                                      imageUint8ListList2![
                                                                              0]!
                                                                          .removeAt(
                                                                              index);

                                                                      setState(
                                                                          () {});
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  ),
                                                  ListView.builder(
                                                    padding:
                                                        EdgeInsets.fromLTRB(
                                                            0, 0, 0, 0),
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    physics:
                                                        NeverScrollableScrollPhysics(),
                                                    itemCount:
                                                        imageUint8ListList2![1]!
                                                            .length,
                                                    itemBuilder:
                                                        (context, index) {
                                                      return Padding(
                                                        padding:
                                                            EdgeInsets.fromLTRB(
                                                                0, 0, 10, 0),
                                                        child: ClipRRect(
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(8),
                                                          child: Stack(
                                                            children: [
                                                              GestureDetector(
                                                                onTap: () =>
                                                                    showPreviewImage2(
                                                                  index,
                                                                  'network',
                                                                  1,
                                                                ),
                                                                child: Image
                                                                    .network(
                                                                  imageUrlFromFirestoreList2![
                                                                          1]![
                                                                      index],
                                                                  // child: Image
                                                                  //     .memory(
                                                                  //   imageUint8ListList2![1]![
                                                                  //       index]!,
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                              ),
                                                              Positioned(
                                                                right: 0,
                                                                bottom: 0,
                                                                child:
                                                                    Container(
                                                                  width: 20,
                                                                  height: 15,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              8),
                                                                      bottomRight:
                                                                          Radius.circular(
                                                                              10),
                                                                    ),
                                                                  ),
                                                                  child:
                                                                      Padding(
                                                                    padding: const EdgeInsets
                                                                        .only(
                                                                        top: 2),
                                                                    child: Text(
                                                                      '${index + 1 + imageUint8ListList2![0]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                                      style: TextStyle(
                                                                          color: Colors.black,
                                                                          // fontSize: (lang ==
                                                                          //         'my')
                                                                          //     ? 10
                                                                          //     : 10),
                                                                          fontSize: 10),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .center,
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                              Positioned(
                                                                top: 4,
                                                                right: 4,
                                                                child:
                                                                    Container(
                                                                  width: 25,
                                                                  height: 25,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            30),
                                                                    boxShadow: [
                                                                      BoxShadow(
                                                                        color: Colors
                                                                            .black
                                                                            .withOpacity(0.2),
                                                                        spreadRadius:
                                                                            1,
                                                                        blurRadius:
                                                                            1,
                                                                        offset:
                                                                            Offset(
                                                                          0,
                                                                          1,
                                                                        ), // changes position of shadow
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  child:
                                                                      GestureDetector(
                                                                    child: Icon(
                                                                      Icons
                                                                          .delete,
                                                                      size: 20,
                                                                      color: Colors
                                                                          .black,
                                                                    ),
                                                                    onTap: () {
                                                                      imageUint8List2
                                                                          .removeAt(
                                                                              index);
                                                                      imageFile2
                                                                          .removeAt(
                                                                              index);
                                                                      image2!.removeAt(
                                                                          index);
                                                                      imageUrl2
                                                                          .removeAt(
                                                                              index);
                                                                      imageLength2 =
                                                                          imageLength2 -
                                                                              1;
                                                                      //==========================================
                                                                      imageUint8ListList2![
                                                                              1]!
                                                                          .removeAt(
                                                                              index);

                                                                      setState(
                                                                          () {});
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  ),
                                                  ListView.builder(
                                                    padding:
                                                        EdgeInsets.fromLTRB(
                                                            0, 0, 0, 0),
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    physics:
                                                        NeverScrollableScrollPhysics(),
                                                    itemCount:
                                                        imageUint8ListList2![2]!
                                                            .length,
                                                    itemBuilder:
                                                        (context, index) {
                                                      return Padding(
                                                        padding:
                                                            EdgeInsets.fromLTRB(
                                                                0, 0, 10, 0),
                                                        child: ClipRRect(
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(8),
                                                          child: Stack(
                                                            children: [
                                                              GestureDetector(
                                                                onTap: () =>
                                                                    showPreviewImage2(
                                                                        index,
                                                                        'network',
                                                                        2),
                                                                child: Image
                                                                    .network(
                                                                  imageUrlFromFirestoreList2![
                                                                          2]![
                                                                      index],
                                                                  // child: Image
                                                                  //     .memory(
                                                                  //   imageUint8ListList2![2]![
                                                                  //       index]!,
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                              ),
                                                              Positioned(
                                                                right: 0,
                                                                bottom: 0,
                                                                child:
                                                                    Container(
                                                                  width: 20,
                                                                  height: 15,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              8),
                                                                      bottomRight:
                                                                          Radius.circular(
                                                                              10),
                                                                    ),
                                                                  ),
                                                                  child:
                                                                      Padding(
                                                                    padding: const EdgeInsets
                                                                        .only(
                                                                        top: 2),
                                                                    child: Text(
                                                                      '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                                      style: TextStyle(
                                                                          color: Colors.black,
                                                                          // fontSize: (lang ==
                                                                          //         'my')
                                                                          //     ? 10
                                                                          //     : 10),
                                                                          fontSize: 10),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .center,
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                              Positioned(
                                                                top: 4,
                                                                right: 4,
                                                                child:
                                                                    Container(
                                                                  width: 25,
                                                                  height: 25,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            30),
                                                                    boxShadow: [
                                                                      BoxShadow(
                                                                        color: Colors
                                                                            .black
                                                                            .withOpacity(0.2),
                                                                        spreadRadius:
                                                                            1,
                                                                        blurRadius:
                                                                            1,
                                                                        offset:
                                                                            Offset(
                                                                          0,
                                                                          1,
                                                                        ), // changes position of shadow
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  child:
                                                                      GestureDetector(
                                                                    child: Icon(
                                                                      Icons
                                                                          .delete,
                                                                      size: 20,
                                                                      color: Colors
                                                                          .black,
                                                                    ),
                                                                    onTap: () {
                                                                      imageUint8List2
                                                                          .removeAt(
                                                                              index);
                                                                      imageFile2
                                                                          .removeAt(
                                                                              index);
                                                                      image2!.removeAt(
                                                                          index);
                                                                      imageUrl2
                                                                          .removeAt(
                                                                              index);
                                                                      imageLength2 =
                                                                          imageLength2 -
                                                                              1;
                                                                      //==========================================
                                                                      imageUint8ListList2![
                                                                              2]!
                                                                          .removeAt(
                                                                              index);

                                                                      setState(
                                                                          () {});
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  ),
                                                  ListView.builder(
                                                    padding:
                                                        EdgeInsets.fromLTRB(
                                                            0, 0, 0, 0),
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    physics:
                                                        NeverScrollableScrollPhysics(),
                                                    itemCount:
                                                        imageUint8ListList2![3]!
                                                            .length,
                                                    itemBuilder:
                                                        (context, index) {
                                                      return Padding(
                                                        padding:
                                                            EdgeInsets.fromLTRB(
                                                                0, 0, 10, 0),
                                                        child: ClipRRect(
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(8),
                                                          child: Stack(
                                                            children: [
                                                              GestureDetector(
                                                                onTap: () =>
                                                                    showPreviewImage2(
                                                                        index,
                                                                        'network',
                                                                        3),
                                                                child: Image
                                                                    .network(
                                                                  imageUrlFromFirestoreList2![
                                                                          3]![
                                                                      index],
                                                                  // child: Image
                                                                  //     .memory(
                                                                  //   imageUint8ListList2![3]![
                                                                  //       index]!,
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                              ),
                                                              Positioned(
                                                                right: 0,
                                                                bottom: 0,
                                                                child:
                                                                    Container(
                                                                  width: 20,
                                                                  height: 15,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              8),
                                                                      bottomRight:
                                                                          Radius.circular(
                                                                              10),
                                                                    ),
                                                                  ),
                                                                  child:
                                                                      Padding(
                                                                    padding: const EdgeInsets
                                                                        .only(
                                                                        top: 2),
                                                                    child: Text(
                                                                      '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                                      style: TextStyle(
                                                                          color: Colors.black,
                                                                          // fontSize: (lang ==
                                                                          //         'my')
                                                                          //     ? 10
                                                                          //     : 10),
                                                                          fontSize: 10),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .center,
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                              Positioned(
                                                                top: 4,
                                                                right: 4,
                                                                child:
                                                                    Container(
                                                                  width: 25,
                                                                  height: 25,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            30),
                                                                    boxShadow: [
                                                                      BoxShadow(
                                                                        color: Colors
                                                                            .black
                                                                            .withOpacity(0.2),
                                                                        spreadRadius:
                                                                            1,
                                                                        blurRadius:
                                                                            1,
                                                                        offset:
                                                                            Offset(
                                                                          0,
                                                                          1,
                                                                        ), // changes position of shadow
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  child:
                                                                      GestureDetector(
                                                                    child: Icon(
                                                                      Icons
                                                                          .delete,
                                                                      size: 20,
                                                                      color: Colors
                                                                          .black,
                                                                    ),
                                                                    onTap: () {
                                                                      imageUint8List2
                                                                          .removeAt(
                                                                              index);
                                                                      imageFile2
                                                                          .removeAt(
                                                                              index);
                                                                      image2!.removeAt(
                                                                          index);
                                                                      imageUrl2
                                                                          .removeAt(
                                                                              index);
                                                                      imageLength2 =
                                                                          imageLength2 -
                                                                              1;
                                                                      //==========================================
                                                                      imageUint8ListList2![
                                                                              3]!
                                                                          .removeAt(
                                                                              index);

                                                                      setState(
                                                                          () {});
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  ),
                                                  ListView.builder(
                                                    padding:
                                                        EdgeInsets.fromLTRB(
                                                            0, 0, 0, 0),
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    physics:
                                                        NeverScrollableScrollPhysics(),
                                                    itemCount:
                                                        imageUint8ListList2![4]!
                                                            .length,
                                                    itemBuilder:
                                                        (context, index) {
                                                      return Padding(
                                                        padding:
                                                            EdgeInsets.fromLTRB(
                                                                0, 0, 10, 0),
                                                        child: ClipRRect(
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(8),
                                                          child: Stack(
                                                            children: [
                                                              GestureDetector(
                                                                onTap: () =>
                                                                    showPreviewImage2(
                                                                        index,
                                                                        'network',
                                                                        4),
                                                                child: Image
                                                                    .network(
                                                                  imageUrlFromFirestoreList2![
                                                                          4]![
                                                                      index],
                                                                  // child: Image
                                                                  //     .memory(
                                                                  //   imageUint8ListList2![4]![
                                                                  //       index]!,
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.63) /
                                                                      4.5,
                                                                  height: 100.0,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                              ),
                                                              Positioned(
                                                                right: 0,
                                                                bottom: 0,
                                                                child:
                                                                    Container(
                                                                  width: 20,
                                                                  height: 15,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              8),
                                                                      bottomRight:
                                                                          Radius.circular(
                                                                              10),
                                                                    ),
                                                                  ),
                                                                  child:
                                                                      Padding(
                                                                    padding: const EdgeInsets
                                                                        .only(
                                                                        top: 2),
                                                                    child: Text(
                                                                      '${index + 1 + imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length}/${imageUint8ListList2![0]!.length + imageUint8ListList2![1]!.length + imageUint8ListList2![2]!.length + imageUint8ListList2![3]!.length + imageUint8ListList2![4]!.length}',
                                                                      style: TextStyle(
                                                                          color: Colors.black,
                                                                          // fontSize: (lang ==
                                                                          //         'my')
                                                                          //     ? 10
                                                                          //     : 10),
                                                                          fontSize: 10),
                                                                      textAlign:
                                                                          TextAlign
                                                                              .center,
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                              Positioned(
                                                                top: 4,
                                                                right: 4,
                                                                child:
                                                                    Container(
                                                                  width: 25,
                                                                  height: 25,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Colors
                                                                        .white,
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            30),
                                                                    boxShadow: [
                                                                      BoxShadow(
                                                                        color: Colors
                                                                            .black
                                                                            .withOpacity(0.2),
                                                                        spreadRadius:
                                                                            1,
                                                                        blurRadius:
                                                                            1,
                                                                        offset:
                                                                            Offset(
                                                                          0,
                                                                          1,
                                                                        ), // changes position of shadow
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  child:
                                                                      GestureDetector(
                                                                    child: Icon(
                                                                      Icons
                                                                          .delete,
                                                                      size: 20,
                                                                      color: Colors
                                                                          .black,
                                                                    ),
                                                                    onTap: () {
                                                                      imageUint8List2
                                                                          .removeAt(
                                                                              index);
                                                                      imageFile2
                                                                          .removeAt(
                                                                              index);
                                                                      image2!.removeAt(
                                                                          index);
                                                                      imageUrl2
                                                                          .removeAt(
                                                                              index);
                                                                      imageLength2 =
                                                                          imageLength2 -
                                                                              1;
                                                                      //==========================================
                                                                      imageUint8ListList2![
                                                                              4]!
                                                                          .removeAt(
                                                                              index);

                                                                      setState(
                                                                          () {});
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  ),

                                                  //=======================================
                                                  for (int i = imageUint8List2
                                                          .length;
                                                      i < 4;
                                                      i++)
                                                    Padding(
                                                      padding:
                                                          EdgeInsetsDirectional
                                                              .fromSTEB(
                                                                  5.0,
                                                                  0.0,
                                                                  6.0,
                                                                  0.0),
                                                      child: Container(
                                                        width: (MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width *
                                                                0.63) /
                                                            4.5,
                                                        height: 100.0,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryBackground,
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      0.0),
                                                        ),
                                                        child: Icon(
                                                          FFIcons.kimagePlus,
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryText,
                                                          size: 40.0,
                                                        ),
                                                      ),
                                                    ),
                                                  //=======================================
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    //========================== ลายเซ็น  ===================================
                    Align(
                      alignment: const AlignmentDirectional(0.00, 0.00),
                      child: Padding(
                        padding: const EdgeInsetsDirectional.fromSTEB(
                            8.0, 15.0, 8.0, 5.0),
                        child: Padding(
                          padding: const EdgeInsetsDirectional.fromSTEB(
                              5.0, 0.0, 5.0, 0.0),
                          child: imageSignFirestore.isNotEmpty
                              ? Container(
                                  width:
                                      MediaQuery.of(context).size.width * 0.63,
                                  height: 200.0,
                                  decoration: BoxDecoration(
                                    // color: Colors.white,
                                    // color: FlutterFlowTheme.of(context)
                                    //     .secondaryBackground,
                                    borderRadius: BorderRadius.circular(10.0),
                                    border: Border.all(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryText,
                                      width: 1.0,
                                    ),
                                  ),
                                  child: ClipRRect(
                                    borderRadius: BorderRadius.circular(10.0),
                                    child: Image.network(
                                      imageSignFirestore,
                                      fit: BoxFit.fill,
                                    ),
                                  ),

                                  //  Signature(
                                  //   color: Colors.blue.shade800,
                                  //   // color: FlutterFlowTheme.of(context)
                                  //   //     .secondaryText,
                                  //   key: _sign,
                                  //   onSign: () {
                                  //     final sign = _sign.currentState;
                                  //     debugPrint(
                                  //         '${sign!.points.length} points in the signature');
                                  //   },
                                  //   backgroundPainter:
                                  //       WatermarkPaint("2.0", "2.0"),
                                  //   strokeWidth: strokeWidth,
                                  // ),
                                )
                              : Container(
                                  width:
                                      MediaQuery.of(context).size.width * 0.63,
                                  height: 200.0,
                                  decoration: BoxDecoration(
                                    // color: Colors.white,
                                    // color: FlutterFlowTheme.of(context)
                                    //     .secondaryBackground,
                                    borderRadius: BorderRadius.circular(10.0),
                                    border: Border.all(
                                      color: FlutterFlowTheme.of(context)
                                          .secondaryText,
                                      width: 1.0,
                                    ),
                                  ),
                                  // child: ClipRRect(
                                  //   borderRadius:
                                  //       BorderRadius.circular(10.0),
                                  //   child: Image.network(
                                  //     imageSignFirestore,
                                  //     fit: BoxFit.fill,
                                  //   ),
                                  // ),

                                  //  Signature(
                                  //   color: Colors.blue.shade800,
                                  //   // color: FlutterFlowTheme.of(context)
                                  //   //     .secondaryText,
                                  //   key: _sign,
                                  //   onSign: () {
                                  //     final sign = _sign.currentState;
                                  //     debugPrint(
                                  //         '${sign!.points.length} points in the signature');
                                  //   },
                                  //   backgroundPainter:
                                  //       WatermarkPaint("2.0", "2.0"),
                                  //   strokeWidth: strokeWidth,
                                  // ),
                                ),
                        ),
                      ),
                    ),
                    //=============================================================
                    // Padding(
                    //   padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                    //   child: FFButtonWidget(
                    //     onPressed: () {
                    //       print('Button pressed ...');
                    //     },
                    //     text: 'เซฟไว้ทำทีหลัง',
                    //     options: FFButtonOptions(
                    //       width: MediaQuery.sizeOf(context).width * 1.0,
                    //       height: 40.0,
                    //       padding: EdgeInsetsDirectional.fromSTEB(24.0, 0.0, 24.0, 0.0),
                    //       iconPadding:
                    //           EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
                    //       color: FlutterFlowTheme.of(context).tertiary,
                    //       textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                    //             fontFamily: 'Kanit',
                    //             color: Colors.white,
                    //           ),
                    //       elevation: 3.0,
                    //       borderSide: BorderSide(
                    //         color: Colors.transparent,
                    //         width: 1.0,
                    //       ),
                    //       borderRadius: BorderRadius.circular(8.0),
                    //     ),
                    //   ),
                    // ),
                    // Padding(
                    //   padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                    //   child: FFButtonWidget(
                    //     onPressed: () {
                    //       print('Button pressed ...');
                    //     },
                    //     text: 'เซฟแล้วดำเนินการต่อไป',
                    //     options: FFButtonOptions(
                    //       width: MediaQuery.sizeOf(context).width * 1.0,
                    //       height: 40.0,
                    //       padding: EdgeInsetsDirectional.fromSTEB(24.0, 0.0, 24.0, 0.0),
                    //       iconPadding:
                    //           EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
                    //       color: FlutterFlowTheme.of(context).secondary,
                    //       textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                    //             fontFamily: 'Kanit',
                    //             color: Colors.white,
                    //           ),
                    //       elevation: 3.0,
                    //       borderSide: BorderSide(
                    //         color: Colors.transparent,
                    //         width: 1.0,
                    //       ),
                    //       borderRadius: BorderRadius.circular(8.0),
                    //     ),
                    //   ),
                    // ),
                  ],
                ),
              ),
            ),
          ),
        ),
        const SizedBox(
          height: 10,
        ),
        //========================== เซฟไว้ทำทีหลัง  ===================================
        (widget.entryMap!['value']['สถานะ'] == true &&
                    widget.entryMap!['value']['รอการอนุมัติ'] == false &&
                    widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == false) ||
                (widget.entryMap!['value']['สถานะ'] == false &&
                    widget.entryMap!['value']['รอการอนุมัติ'] == true &&
                    widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == false)
            ? SizedBox()
            : checkStatusToButtonEdit
                ? Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                    child: FFButtonWidget(
                      onPressed: () {
                        print('Button pressed ...');
                        setState(
                          () => checkStatusToEdit = true,
                        );
                        // trySummit(true);
                      },
                      text: 'แก้ไขข้อมูล',
                      options: FFButtonOptions(
                        width: MediaQuery.sizeOf(context).width * 1.0,
                        height: 40.0,
                        padding: EdgeInsetsDirectional.fromSTEB(
                            24.0, 0.0, 24.0, 0.0),
                        iconPadding:
                            EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
                        color: FlutterFlowTheme.of(context).tertiary,
                        textStyle:
                            FlutterFlowTheme.of(context).titleSmall.override(
                                  fontFamily: 'Kanit',
                                  color: Colors.white,
                                ),
                        elevation: 3.0,
                        borderSide: BorderSide(
                          color: Colors.transparent,
                          width: 1.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                  )
                : Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 5.0),
                    child: FFButtonWidget(
                      onPressed: () {
                        print('Button pressed ...');
                        trySummit(true);
                      },
                      text: 'เซฟไว้ทำทีหลัง',
                      options: FFButtonOptions(
                        width: MediaQuery.sizeOf(context).width * 1.0,
                        height: 40.0,
                        padding: EdgeInsetsDirectional.fromSTEB(
                            24.0, 0.0, 24.0, 0.0),
                        iconPadding:
                            EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
                        color: FlutterFlowTheme.of(context).tertiary,
                        textStyle:
                            FlutterFlowTheme.of(context).titleSmall.override(
                                  fontFamily: 'Kanit',
                                  color: Colors.white,
                                ),
                        elevation: 3.0,
                        borderSide: BorderSide(
                          color: Colors.transparent,
                          width: 1.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                  ),
        //========================== เซฟแล้วดำเนินการต่อไป  ===================================
        (widget.entryMap!['value']['สถานะ'] == true &&
                    widget.entryMap!['value']['รอการอนุมัติ'] == false &&
                    widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == false) ||
                (widget.entryMap!['value']['สถานะ'] == false &&
                    widget.entryMap!['value']['รอการอนุมัติ'] == true &&
                    widget.entryMap!['value']['บันทึกพร้อมตรวจ'] == false)
            ? SizedBox()
            : Padding(
                padding: EdgeInsetsDirectional.fromSTEB(8.0, 5.0, 8.0, 0.0),
                child: FFButtonWidget(
                  onPressed: () {
                    print('Button pressed ...');
                    trySummit(false);
                  },
                  text: 'เซฟแล้วดำเนินการต่อไป',
                  options: FFButtonOptions(
                    width: MediaQuery.sizeOf(context).width * 1.0,
                    height: 40.0,
                    padding:
                        EdgeInsetsDirectional.fromSTEB(24.0, 0.0, 24.0, 0.0),
                    iconPadding:
                        EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 0.0),
                    color: FlutterFlowTheme.of(context).secondary,
                    textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                          fontFamily: 'Kanit',
                          color: Colors.white,
                        ),
                    elevation: 3.0,
                    borderSide: BorderSide(
                      color: Colors.transparent,
                      width: 1.0,
                    ),
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                ),
              ),
      ],
    );
  }

  Future<dynamic> signBottomSheet() async {
    return showModalBottomSheet(
      context: context,
      builder: (context) {
        return StatefulBuilder(builder: (context, setState) {
          return Container(
            width: double.infinity,
            height: 500,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(100.0),
                topRight: Radius.circular(100.0),
              ),
            ),
            child: Column(
              children: [
                SizedBox(
                  height: 30,
                ),
                Padding(
                  padding: EdgeInsets.only(left: 20, right: 20),
                  child: Container(
                    width: MediaQuery.of(context).size.width * 80,
                    height: 350.0,
                    decoration: BoxDecoration(
                      // color: Colors.white,
                      // color: FlutterFlowTheme.of(context)
                      //     .secondaryBackground,
                      borderRadius: BorderRadius.circular(10.0),
                      border: Border.all(
                        color: FlutterFlowTheme.of(context).secondaryText,
                        width: 1.0,
                      ),
                    ),
                    child: Signature(
                      color: Colors.blue.shade800,
                      // color: FlutterFlowTheme.of(context)
                      //     .secondaryText,
                      key: _sign,
                      onSign: () {
                        final sign = _sign.currentState;
                        debugPrint(
                            '${sign!.points.length} points in the signature');
                      },
                      backgroundPainter: WatermarkPaint("2.0", "2.0"),
                      strokeWidth: strokeWidth,
                    ),
                  ),
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.end,
                  children: [
                    SizedBox(
                      width: 20,
                    ),
                    TextButton(
                      onPressed: () async {
                        final sign = _sign.currentState;
                        sign!.clear();
                        if (mounted) {
                          setState(
                            () {},
                          );
                        }

                        // Navigator.pop(context);
                      },
                      child: Text(
                        'clear',
                        style: FlutterFlowTheme.of(context).titleSmall.override(
                              fontFamily: 'Kanit',
                              color: Colors.red.shade900,
                            ),
                      ),
                    ),
                    Spacer(),
                    TextButton(
                      onPressed: () async {
                        final sign = _sign.currentState;
                        //retrieve image data, do whatever you want with it (send to server, save locally...)
                        final imageSign = await sign!.getData();

                        var data = await imageSign.toByteData(
                            format: ui.ImageByteFormat.png);
                        final encoded =
                            base64.encode(data!.buffer.asUint8List());

                        base64ImgSign = encoded;

                        Uint8List uint8list = base64.decode(encoded);

                        imageSignToShow = Image.memory(uint8list);

                        signConfirm = true;
                        print(signConfirm);
                        if (mounted) {
                          setState(
                            () {},
                          );
                        }

                        Navigator.pop(context);
                      },
                      child: Text(
                        'บันทึก',
                        style: FlutterFlowTheme.of(context).titleSmall.override(
                              fontFamily: 'Kanit',
                              color: Colors.blue.shade900,
                            ),
                      ),
                    ),
                    SizedBox(
                      width: 20,
                    ),
                  ],
                ),
              ],
            ),
          );
        });
      },
    );
  }

  void toSetState() {
    setState(() {});
  }

  showPreviewImage(int index, String typeImage) {
    showCupertinoDialog(
      context: context,
      barrierDismissible: true,
      builder: (BuildContext context) {
        return Container(
          child: Stack(
            children: [
              typeImage == 'network'
                  ? PhotoView(
                      // imageProvider: FileImage(images),
                      // imageProvider: MemoryImage(imageUint8List[index]),
                      imageProvider: NetworkImage(imageUrl[index]),
                    )
                  : PhotoView(
                      // imageProvider: FileImage(images),
                      imageProvider: MemoryImage(imageUint8List[index]),
                      // imageProvider: NetworkImage('URL ของรูปภาพ'),
                    ),
              Positioned(
                right: 10,
                top: 40,
                child: GestureDetector(
                  onTap: () {
                    Navigator.of(context).pop();
                  },
                  child: Container(
                    width: 40,
                    height: 40,
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(30),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withOpacity(0.2),
                          spreadRadius: 1,
                          blurRadius: 1,
                          offset: Offset(0, 1), // changes position of shadow
                        ),
                      ],
                    ),
                    child: Icon(
                      Icons.cancel_outlined,
                      color: Colors.black,
                      size: 40,
                    ),
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }

  showPreviewImage2(int index, String typeImage, int indexList) {
    showCupertinoDialog(
      context: context,
      barrierDismissible: true,
      builder: (BuildContext context) {
        return Container(
          child: Stack(
            children: [
              typeImage == 'network'
                  ? PhotoView(
                      // imageProvider: FileImage(images),
                      // imageProvider: MemoryImage(imageUint8List[index]),
                      imageProvider: NetworkImage(
                          imageUrlFromFirestoreList2![indexList]![index]),
                    )
                  : PhotoView(
                      // imageProvider: FileImage(images),
                      imageProvider:
                          MemoryImage(imageUint8ListList2![indexList]![index]!),
                      // imageProvider: NetworkImage('URL ของรูปภาพ'),
                    ),
              Positioned(
                right: 10,
                top: 40,
                child: GestureDetector(
                  onTap: () {
                    Navigator.of(context).pop();
                  },
                  child: Container(
                    width: 40,
                    height: 40,
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(30),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withOpacity(0.2),
                          spreadRadius: 1,
                          blurRadius: 1,
                          offset: Offset(0, 1), // changes position of shadow
                        ),
                      ],
                    ),
                    child: Icon(
                      Icons.cancel_outlined,
                      color: Colors.black,
                      size: 40,
                    ),
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }

  Future<dynamic> mapDialog(
    List<Map<String, dynamic>> address,
    String? idMarker,
  ) async {
    String? idMarkerIn = idMarker;
    late MarkerId markerId;
    List<bool> boolCheck = [];

    double? lat;
    double? lot;
    List<Map<String, dynamic>> addressThai = [];

    if (idMarkerIn == null) {
      markersDialog.clear();
      _kGooglePlexDialog = CameraPosition(
        target: google_maps.LatLng(13.7563309, 100.5017651),
        zoom: 14.4746,
      );
    } else {
      for (int i = 0; i < address.length; i++) {
        if (address[i]['ID'] == idMarkerIn) {
          _kGooglePlexDialog = CameraPosition(
            target: google_maps.LatLng(double.parse(address[i]['Latitude']!),
                double.parse(address[i]['Longitude']!)),
            zoom: 14.4746,
          );
          markersDialog.add(
            Marker(
              markerId: MarkerId("your_marker_id"),
              position: google_maps.LatLng(
                  double.parse(address[i]['Latitude']!),
                  double.parse(address[i]['Longitude']!)), // ตำแหน่ง
              // infoWindow: InfoWindow(
              //   title: _model.textController18.text, // ชื่อของปักหมุด
              //   // snippet: "Your Marker Description", // คำอธิบายของปักหมุด
              // ),
            ),
          );
        }
      }
    }

    for (int i = 0; i < address.length; i++) {
      //====================================================================
      if (address[i]['ID'] == idMarkerIn) {
        boolCheck.add(true);
        // _kGooglePlexDialog = CameraPosition(
        //   target: google_maps.LatLng(double.parse(address[i]['Latitude']!),
        //       double.parse(address[i]['Longitude']!)),
        //   zoom: 15,
        // );

        // markersDialog.add(
        //   Marker(
        //     markerId: MarkerId("your_marker_id"),
        //     position: google_maps.LatLng(double.parse(address[i]['Latitude']!),
        //         double.parse(address[i]['Longitude']!)), // ตำแหน่ง
        //     // infoWindow: InfoWindow(
        //     //   title: _model.textController18.text, // ชื่อของปักหมุด
        //     //   // snippet: "Your Marker Description", // คำอธิบายของปักหมุด
        //     // ),
        //   ),
        // );

        _mapKeyDialog = GlobalKey();
      } else {
        boolCheck.add(false);
      }
      print(boolCheck);
      print(idMarkerIn);
//====================================================================

      List<Map<String, dynamic>> mapProvincesList =
          provinces!.cast<Map<String, dynamic>>();

      List<Map<String, dynamic>> mapList =
          amphures![i].cast<Map<String, dynamic>>();
      List<Map<String, dynamic>> tambonList =
          tambons![i].cast<Map<String, dynamic>>();
      String? provincesName;
      String? amphorName;
      String? tambonName;
      print('Check map errorr $i');
//====================================================================
      if (address[i]['Province'] == '' || address[i]['Province'] == null) {
        provincesName = '';
      } else {
        Map<String, dynamic> resultProvince = mapProvincesList.firstWhere(
            (element) => element['name_th'] == address[i]['Province'],
            orElse: () => {});

        provincesName = resultProvince['name_th'] ?? '';
      }
//====================================================================
      if (address[i]['District'] == '' || address[i]['District'] == null) {
        amphorName = '';
      } else {
        Map<String, dynamic> resultAmphure = mapList.firstWhere(
            (element) => element['name_th'] == address[i]['District'],
            orElse: () => {});

        amphorName = resultAmphure['name_th'] ?? '';
      }

      //====================================================================
      if (address[i]['SubDistrict'] == '' ||
          address[i]['SubDistrict'] == null) {
        tambonName = '';
      } else {
        Map<String, dynamic> resultTambon = tambonList.firstWhere(
            (element) => element['name_th'] == address[i]['SubDistrict'],
            orElse: () => {});
        tambonName = resultTambon['name_th'] ?? '';
      }
      //====================================================================
      addressThai.add({
        'province_name':
            provincesName! == '' ? provincesName : 'จ.' + provincesName,
        'amphure_name': amphorName! == '' ? amphorName : 'อ.' + amphorName,
        'tambon_name': tambonName! == '' ? tambonName : 'ต.' + tambonName,
      });
      print('Check map errorr');
      print(addressThai);

      //     '${address[i]['HouseNumber']} ${address[i]['VillageName']} ${addressThai[i]['province_name']} ${addressThai[i]['amphure_name']} ${addressThai[i]['tambon_name']}';

      // textList[i]!.add(text.trimLeft());
    }

    double mapZoom = 14.4746;

    return showDialog(
      context: context,
      builder: (BuildContext context) {
        return StatefulBuilder(builder: (context, setStateMapDialog) {
          void getLatLngFromAddress(String address) async {
            try {
              List<Location> locations = await locationFromAddress(address);

              if (locations.isNotEmpty) {
                Location location = locations.first;
                print(address);
                print(
                    'Latitude: ${location.latitude}, Longitude: ${location.longitude}');
                lat = location.latitude;
                lot = location.longitude;

                _kGooglePlexDialog = CameraPosition(
                  target: google_maps.LatLng(lat!, lot!),
                  zoom: 14.4746,
                );
                markersDialog.clear();
                markersDialog.add(
                  Marker(
                    markerId: MarkerId("your_marker_id"),
                    position: google_maps.LatLng(lat!, lot!), // ตำแหน่ง
                    infoWindow: InfoWindow(
                      title: '_model.textController18.text', // ชื่อของปักหมุด
                      // snippet: "Your Marker Description", // คำอธิบายของปักหมุด
                      onTap: () async {
                        await mapDialog(resultList, null);
                        _mapKey = GlobalKey();
                        if (mounted) {
                          setStateMapDialog(() {});
                        }
                      },
                    ),
                  ),
                );
                _mapKeyDialog = GlobalKey();

                if (mounted) {
                  setStateMapDialog(() {});
                  (() {},);
                }
              } else {
                print('No location found for the given address');
              }
            } catch (e) {
              print('Error: $e');
              await Fluttertoast.showToast(
                  msg: "   ไม่มีสถานที่นี้ค่ะ กรุณากรอกชื่อสถานที่ใหม่ค่ะ   ",
                  toastLength: Toast.LENGTH_SHORT,
                  gravity: ToastGravity.CENTER,
                  timeInSecForIosWeb: 5,
                  backgroundColor: Colors.red,
                  textColor: Colors.white,
                  fontSize: 16.0);
            }
          }

          return AlertDialog(
            actionsPadding: EdgeInsets.all(20),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(20.0),
            ),
            actions: [
              SizedBox(
                height: 20,
              ),
              SizedBox(
                // height: 700,
                child: SingleChildScrollView(
                  physics: ScrollPhysics(),
                  scrollDirection: Axis.vertical,
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.start,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Align(
                        alignment: Alignment.center,
                        child: Padding(
                          padding: EdgeInsets.only(bottom: 8.0, top: 0.0),
                          child: Text(
                            "  กรุณาพิมพ์ชื่อสถานที่เพื่อบันทึกโลเคชั่นค่ะ",
                            style: FlutterFlowTheme.of(context).headlineSmall,
                          ),
                        ),
                      ),
                      Align(
                        alignment: Alignment.center,
                        child: Padding(
                          padding: EdgeInsets.only(bottom: 0.0, top: 0.0),
                          child: Text(
                            "   *กรุณาเลือกที่อยู่ ให้ตรงกับสถานที่ที่คุณค้นหาค่ะ",
                            style: FlutterFlowTheme.of(context).labelLarge,
                          ),
                        ),
                      ),
                      for (int i = 0; i < address.length; i++)
                        SizedBox(
                          height: 30,
                          child: CheckboxListTile(
                            title: Text(
                                '${address[i]['HouseNumber']} ${address[i]['VillageName']} ${addressThai[i]['tambon_name']} ${addressThai[i]['amphure_name']} ${addressThai[i]['province_name']} '
                                    .trimLeft()),
                            value: boolCheck[i],
                            onChanged: (value) {
                              for (int j = 0; j < boolCheck.length; j++) {
                                boolCheck[j] = (i == j) ? value! : false;
                                // print(boolCheck[j]);
                                if (boolCheck[j]) {
                                  idMarkerIn = address[j]['ID'];
                                }
                              }
                              if (mounted) {
                                setStateMapDialog(() {});
                              }
                              print('change checkbox');
                              print(boolCheck);
                              print(idMarkerIn);
                            },
                            controlAffinity: ListTileControlAffinity.leading,
                            contentPadding: EdgeInsets.only(bottom: 4),
                          ),
                        ),
                      SizedBox(
                        height: 40,
                      ),
                      Stack(
                        children: [
                          Container(
                            width: MediaQuery.sizeOf(context).width * 1.0,
                            height: 500.0,
                            decoration: BoxDecoration(
                              color: FlutterFlowTheme.of(context)
                                  .secondaryBackground,
                              borderRadius: BorderRadius.circular(0.0),
                              shape: BoxShape.rectangle,
                            ),
                            child: GoogleMap(
                              key: _mapKeyDialog,
                              // onTap: (argument) async {},
                              onTap: (argument) async {
                                // _mapController =
                                //     Completer<GoogleMapController>();
                                print('argument');
                                print(argument);
                                lat = argument.latitude;
                                lot = argument.longitude;

                                _kGooglePlexDialog = CameraPosition(
                                  target: google_maps.LatLng(lat!, lot!),
                                  zoom: mapZoom,
                                );

                                markersDialog.clear();
                                markersDialog.add(
                                  Marker(
                                    markerId: MarkerId("your_marker_id"),
                                    position: google_maps.LatLng(
                                        lat!, lot!), // ตำแหน่ง
                                    infoWindow: InfoWindow(
                                      title: _model.textController18
                                          .text, // ชื่อของปักหมุด
                                      // snippet: "Your Marker Description", // คำอธิบายของปักหมุด
                                    ),
                                  ),
                                );

                                _mapKeyDialog = GlobalKey();
                                final GoogleMapController controller =
                                    await _mapController.future;

                                controller.animateCamera(
                                    CameraUpdate.newCameraPosition(
                                        _kGooglePlexDialog));

                                if (mounted) {
                                  setStateMapDialog(() {});
                                }
                              },

                              mapType: ui_maps.MapType.hybrid,
                              initialCameraPosition: _kGooglePlexDialog,
                              markers: markersDialog, // เพิ่มนี่
                              onMapCreated: (GoogleMapController controller) {
                                _mapController.complete(controller);
                              },
                              onCameraMove: (CameraPosition position) {
                                mapZoom = position.zoom;
                              },
                            ),
                          ),
                          //=============================================================
                          Align(
                            alignment: Alignment.topCenter,
                            child: Padding(
                              padding: EdgeInsetsDirectional.fromSTEB(
                                  30.0, 15.0, 30.0, 5.0),
                              child: Row(
                                mainAxisSize: MainAxisSize.max,
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Container(
                                    width:
                                        MediaQuery.sizeOf(context).width * 0.4,
                                    height: 25.0,
                                    decoration: BoxDecoration(
                                      color:
                                          FlutterFlowTheme.of(context).accent3,
                                      borderRadius: BorderRadius.circular(8.0),
                                    ),
                                    alignment: AlignmentDirectional(0.00, 0.00),
                                    child: Row(
                                      children: [
                                        Expanded(
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                top: 10.0),
                                            child: TextFormField(
                                              controller:
                                                  _model.textController18,
                                              focusNode:
                                                  _model.textFieldFocusNode18,
                                              autofocus: false,
                                              obscureText: false,
                                              decoration: InputDecoration(
                                                isDense: true,
                                                labelStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium,
                                                hintText:
                                                    '        ค้นหาสถานที่',
                                                hintStyle:
                                                    FlutterFlowTheme.of(context)
                                                        .labelMedium
                                                        .override(
                                                          fontFamily: 'Kanit',
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .primaryText,
                                                        ),
                                                enabledBorder: InputBorder.none,
                                                focusedBorder: InputBorder.none,
                                                errorBorder: InputBorder.none,
                                                focusedErrorBorder:
                                                    InputBorder.none,
                                              ),
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .bodyMedium,
                                              textAlign: TextAlign.center,
                                              validator: _model
                                                  .textController18Validator
                                                  .asValidator(context),
                                            ),
                                          ),
                                        ),
                                        GestureDetector(
                                          onTap: () async {
                                            getLatLngFromAddress(
                                                _model.textController18.text);
                                          },
                                          child: Icon(
                                            Icons.search_sharp,
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ],
                      ),
                      SizedBox(
                        height: 25,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        children: [
                          TextButton(
                              style: ButtonStyle(
                                shape: MaterialStateProperty.all<
                                    RoundedRectangleBorder>(
                                  RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(10.0),
                                  ),
                                ),
                                side: MaterialStatePropertyAll(
                                  BorderSide(
                                      color: Colors.red.shade300, width: 1),
                                ),
                              ),
                              onPressed: () {
                                Navigator.pop(context);
                              },
                              child: CustomText(
                                text: "               ยกเลิก               ",
                                size: MediaQuery.of(context).size.height * 0.15,
                                color: Colors.red.shade300,
                              )),
                          TextButton(
                              style: ButtonStyle(
                                shape: MaterialStateProperty.all<
                                    RoundedRectangleBorder>(
                                  RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(10.0),
                                  ),
                                ),
                                backgroundColor: MaterialStatePropertyAll(
                                    Colors.blue.shade900),
                              ),
                              onPressed: () async {
                                // CustomProgressDialog.show(context);
                                print('Map Dialog Summit');
                                print(lat);
                                print(lot);

                                if (lat == null && lot == null) {
                                  Navigator.pop(context);
                                } else {
                                  for (int i = 0; i < boolCheck.length; i++) {
                                    if (boolCheck[i] == true) {
                                      print('Get the map');
                                      print(i);
                                      resultList[i]['Latitude'] =
                                          lat == null ? "" : lat.toString();
                                      resultList[i]['Longitude'] =
                                          lat == null ? "" : lot.toString();
                                      latList![i].text =
                                          lat == null ? "" : lat.toString();
                                      lotList![i].text =
                                          lat == null ? "" : lot.toString();

                                      if (idMarkerIn != null) {
                                        _kGooglePlex = CameraPosition(
                                          target: google_maps.LatLng(
                                              resultList[0]['Latitude'] == ''
                                                  ? double.parse(resultList[i]
                                                      ['Latitude']!)
                                                  : double.parse(resultList[0]
                                                      ['Latitude']!),
                                              resultList[0]['Longitude'] == ''
                                                  ? double.parse(resultList[i]
                                                      ['Longitude']!)
                                                  : double.parse(resultList[0]
                                                      ['Longitude']!)),
                                          zoom: mapZoom,
                                        );

                                        markerId = MarkerId(idMarkerIn!);

                                        // ลบ Marker เดิมที่มี markerId เดียวกัน
                                        markers.removeWhere((marker) =>
                                            marker.markerId == markerId);

                                        markers.add(
                                          Marker(
                                            markerId:
                                                MarkerId(resultList[i]['ID']),
                                            position: google_maps.LatLng(
                                                lat!, lot!), // ตำแหน่ง
                                            infoWindow: InfoWindow(
                                              title:
                                                  'จุดที่ ${i + 1}', // ชื่อของปักหมุด
                                              snippet: resultList[i]
                                                  ['Latitude'],
                                              onTap: () async {
                                                await mapDialog(resultList,
                                                        resultList[i]['ID'])
                                                    .whenComplete(() {
                                                  _mapKey = GlobalKey();
                                                  // if (mounted) {
                                                  //   setState(() {});
                                                  // }
                                                });

                                                // setState(
                                                //   () {},
                                                // );
                                              }, // คำอธิบายของปักหมุด
                                            ),
                                          ),
                                        );
                                      }

                                      print(markers);
                                    }
                                  }

                                  _model.textController18!.clear();
                                  // _mapKeyDialog = GlobalKey();
                                  print(resultList);

                                  // CustomProgressDialog.hide(context);
                                  _mapKey = GlobalKey();
                                  _mapKeyDialog = GlobalKey();

                                  print('3333');

                                  await mapController2.future
                                      .then((controller) {
                                    controller.dispose();
                                  });

                                  if (mounted) {
                                    setState(() {});
                                  }
                                  Navigator.pop(context);
                                  print('5555');
                                }
                              },
                              child: CustomText(
                                text: "               บันทึก               ",
                                size: MediaQuery.of(context).size.height * 0.15,
                                color: Colors.white,
                              )),
                        ],
                      ),
                      SizedBox(
                        height: 25,
                      ),
                    ],
                  ),
                ),
              ),
            ],
          );
        });
      },
    );
  }

  Future<void> selectDateToWork(BuildContext context) async {
    print('selectDateToSend');
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(1900),
      lastDate: DateTime(2101),
    );

    if (picked != null && picked != DateTime.now()) {
      setState(() {
        int year = picked.year + 543;
        _model.textController12.text = picked.day.toString();
        _model.textController13.text = picked.month.toString();
        _model.textController14.text = year.toString();
      });
    }
  }

  Future<void> selectDateToSend(BuildContext context) async {
    print('selectDateToSend');
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(1900),
      lastDate: DateTime(2101),
    );

    if (picked != null && picked != DateTime.now()) {
      setState(() {
        int year = picked.year + 543;
        _model.textController7.text = picked.day.toString();
        _model.textController8.text = picked.month.toString();
        _model.textController9.text = year.toString();
      });
    }
  }

  Future<void> selectDate(BuildContext context) async {
    print('selectDate');
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(1900),
      lastDate: DateTime(2101),
    );

    if (picked != null && picked != DateTime.now()) {
      setState(() {
        int year = picked.year + 543;
        _model.textController2.text = picked.day.toString();
        _model.textController3.text = picked.month.toString();
        _model.textController4.text = year.toString();
      });
    }
  }

  Future<void> selectDateCompany(BuildContext context) async {
    print('selectDate');
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(1900),
      lastDate: DateTime(2101),
    );

    if (picked != null && picked != DateTime.now()) {
      setState(() {
        int year = picked.year + 543;
        _model.textController2Company.text = picked.day.toString();
        _model.textController3Company.text = picked.month.toString();
        _model.textController4Company.text = year.toString();
      });
    }
  }

  Future<dynamic> imageDialog() async {
    return showDialog(
      context: context,
      builder: (BuildContext context) {
        return StatefulBuilder(builder: (context, setState) {
          return AlertDialog(
            // title: Text('Dialog Title'),
            // content: Text('This is the dialog content.'),
            actionsPadding: EdgeInsets.all(20),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(20.0),
            ),
            actions: [
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Padding(
                      padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                      child: Text(
                        "กรุณาเลือกรูปแบบของรูปภาพค่ะ",
                        style: FlutterFlowTheme.of(context).headlineMedium,
                      ),
                    ),
                    const Divider(),
                    Container(
                      // color: Colors.white,
                      width: MediaQuery.of(context).size.width * 0.60,
                      height: MediaQuery.of(context).size.height * 0.06,
                      child: GestureDetector(
                        onTap: () async {
                          Navigator.pop(context);
                          _pickImageCamera();
                        },
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Icon(
                              Icons.camera_alt_outlined,
                              color: Colors.black,
                              size: MediaQuery.of(context).size.height * 0.025,
                            ),
                            SizedBox(
                              width: MediaQuery.of(context).size.width * 0.03,
                            ),
                            Text(
                              'กล้องถ่ายรูป',
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ],
                        ),
                      ),
                    ),
                    Container(
                      // color: Colors.white,
                      width: MediaQuery.of(context).size.width * 0.60,
                      height: MediaQuery.of(context).size.height * 0.06,
                      child: GestureDetector(
                        onTap: () async {
                          Navigator.pop(context);
                          _pickImageGallery();
                        },
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Icon(
                              Icons.image_outlined,
                              color: Colors.black,
                              size: MediaQuery.of(context).size.height * 0.025,
                            ),
                            SizedBox(
                              width: MediaQuery.of(context).size.width * 0.03,
                            ),
                            Text(
                              'แกลลอรี่',
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ],
                        ),
                      ),
                    ),
                    SizedBox(
                      height: 15,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.end,
                      children: [
                        TextButton(
                            style: ButtonStyle(
                              shape: MaterialStateProperty.all<
                                  RoundedRectangleBorder>(
                                RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(
                                      10.0), // ปรับค่าตามต้องการ
                                ),
                              ),
                              side: MaterialStatePropertyAll(
                                BorderSide(
                                    color: Colors.red.shade300, width: 1),
                              ),
                            ),
                            onPressed: () => Navigator.pop(context),
                            child: CustomText(
                              text: "   ยกเลิก   ",
                              size: MediaQuery.of(context).size.height * 0.15,
                              color: Colors.red.shade300,
                            )),
                        // TextButton(
                        //     style: ButtonStyle(
                        //       backgroundColor: MaterialStatePropertyAll(
                        //           Colors.blue.shade900),
                        //       // side: MaterialStatePropertyAll(
                        //       // BorderSide(
                        //       //     color: Colors.red.shade300, width: 1),
                        //       // ),
                        //     ),
                        //     onPressed: () {
                        //       Navigator.pop(context);
                        //     },
                        //     child: CustomText(
                        //       text: "   บันทึก   ",
                        //       size: MediaQuery.of(context).size.height * 0.15,
                        //       color: Colors.white,
                        //     )),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          );
        });
      },
    );
  }

  Future<dynamic> showQucikAlert(BuildContext context) async {
    return await QuickAlert.show(
      context: context,
      type: QuickAlertType.custom,
      barrierDismissible: true,
      confirmBtnText: 'ยกเลิก',

      // customAsset: 'assets/custom.gif',
      widget: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Padding(
              padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
              child: Text(
                "กรุณาเลือกรูปแบบค่ะ",
                style: TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: 20,
                  color: Colors.black,
                ),
              ),
            ),
            const Divider(),
            Container(
              // color: Colors.white,
              width: MediaQuery.of(context).size.width * 0.60,
              height: MediaQuery.of(context).size.height * 0.06,
              child: GestureDetector(
                onTap: () async {
                  Navigator.pop(context);
                  _pickImageCamera();
                },
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    Icon(
                      Icons.camera_alt,
                      color: Colors.black,
                      size: MediaQuery.of(context).size.height * 0.03,
                    ),
                    SizedBox(
                      width: MediaQuery.of(context).size.width * 0.03,
                    ),
                    Text(
                      'กล้องถ่ายรูป',
                      style: TextStyle(
                        fontSize: MediaQuery.of(context).size.height * 0.02,
                        color: Colors.black,
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Container(
              // color: Colors.white,
              width: MediaQuery.of(context).size.width * 0.60,
              height: MediaQuery.of(context).size.height * 0.06,
              child: GestureDetector(
                onTap: () async {
                  Navigator.pop(context);
                  _pickImageGallery();
                },
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    Icon(
                      Icons.image,
                      color: Colors.black,
                      size: MediaQuery.of(context).size.height * 0.03,
                    ),
                    SizedBox(
                      width: MediaQuery.of(context).size.width * 0.03,
                    ),
                    Text(
                      'แกลลอรี่',
                      style: TextStyle(
                        fontSize: MediaQuery.of(context).size.height * 0.02,
                        color: Colors.black,
                      ),
                    ),
                  ],
                ),
              ),
            ),
            // Container(
            //   // color: Colors.white,
            //   width: MediaQuery.of(context).size.width * 0.60,
            //   height: MediaQuery.of(context).size.height * 0.06,
            //   child: GestureDetector(
            //     onTap: () {
            //       setState(() {
            //         image = null;
            //       });
            //       Navigator.pop(context);
            //     },
            //     child: Row(
            //       mainAxisAlignment: MainAxisAlignment.start,
            //       children: [
            //         Icon(
            //           Icons.delete,
            //           color: Colors.red.shade500,
            //           size: MediaQuery.of(context).size.height * 0.03,
            //         ),
            //         SizedBox(
            //           width: MediaQuery.of(context).size.width * 0.03,
            //         ),
            //         Text(
            //           'ลบรูปภาพ',
            //           style: TextStyle(
            //             fontSize: MediaQuery.of(context).size.height * 0.02,
            //             color: Colors.red.shade500,
            //           ),
            //         ),
            //       ],
            //     ),
            //   ),
            // ),
            // Container(
            //   width: MediaQuery.of(context).size.width * 0.60,
            //   color: null,
            //   height: MediaQuery.of(context).size.height * 0.10,
            //   child: Row(
            //     mainAxisAlignment: MainAxisAlignment.end,
            //     children: [
            //       TextButton(
            //           style: ButtonStyle(
            //             side: MaterialStatePropertyAll(
            //               BorderSide(color: Colors.red.shade300, width: 1),
            //             ),
            //           ),
            //           onPressed: () => Navigator.pop(context),
            //           child: CustomText(
            //             text: "ยกเลิก",
            //             size: MediaQuery.of(context).size.height * 0.15,
            //             color: Colors.red.shade300,
            //           )),
            //     ],
            //   ),
            // )
          ],
        ),
      ),
      onConfirmBtnTap: () async {
        // await Future.delayed(const Duration(milliseconds: 1000));
        Navigator.pop(context);
      },
      confirmBtnColor: Colors.red.shade900,
    );
  }

  AlertDialog showDialogChooseImage(BuildContext context) {
    return AlertDialog(
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.all(Radius.circular(4.0)),
      ),
      actions: [
        Padding(
          padding: const EdgeInsets.all(8.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Padding(
                padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                child: Text(
                  "กรุณาเลือกรูปแบบค่ะ",
                  style: TextStyle(
                    fontWeight: FontWeight.bold,
                    fontSize: 20,
                    color: Colors.black,
                  ),
                ),
              ),
              const Divider(),
              Container(
                // color: Colors.white,
                width: MediaQuery.of(context).size.width * 0.60,
                height: MediaQuery.of(context).size.height * 0.06,
                child: GestureDetector(
                  onTap: () async {
                    Navigator.pop(context);
                    _pickImageCamera();
                  },
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.start,
                    children: [
                      Icon(
                        Icons.camera_alt,
                        color: Colors.black,
                        size: MediaQuery.of(context).size.height * 0.03,
                      ),
                      SizedBox(
                        width: MediaQuery.of(context).size.width * 0.03,
                      ),
                      Text(
                        'กล้องถ่ายรูป',
                        style: TextStyle(
                          fontSize: MediaQuery.of(context).size.height * 0.02,
                          color: Colors.black,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              Container(
                // color: Colors.white,
                width: MediaQuery.of(context).size.width * 0.60,
                height: MediaQuery.of(context).size.height * 0.06,
                child: GestureDetector(
                  onTap: () async {
                    Navigator.pop(context);
                    _pickImageGallery();
                  },
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.start,
                    children: [
                      Icon(
                        Icons.image,
                        color: Colors.black,
                        size: MediaQuery.of(context).size.height * 0.03,
                      ),
                      SizedBox(
                        width: MediaQuery.of(context).size.width * 0.03,
                      ),
                      Text(
                        'แกลลอรี่',
                        style: TextStyle(
                          fontSize: MediaQuery.of(context).size.height * 0.02,
                          color: Colors.black,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              // Container(
              //   // color: Colors.white,
              //   width: MediaQuery.of(context).size.width * 0.60,
              //   height: MediaQuery.of(context).size.height * 0.06,
              //   child: GestureDetector(
              //     onTap: () {
              //       setState(() {
              //         image = null;
              //       });
              //       Navigator.pop(context);
              //     },
              //     child: Row(
              //       mainAxisAlignment: MainAxisAlignment.start,
              //       children: [
              //         Icon(
              //           Icons.delete,
              //           color: Colors.red.shade500,
              //           size: MediaQuery.of(context).size.height * 0.03,
              //         ),
              //         SizedBox(
              //           width: MediaQuery.of(context).size.width * 0.03,
              //         ),
              //         Text(
              //           'ลบรูปภาพ',
              //           style: TextStyle(
              //             fontSize: MediaQuery.of(context).size.height * 0.02,
              //             color: Colors.red.shade500,
              //           ),
              //         ),
              //       ],
              //     ),
              //   ),
              // ),
              Container(
                width: MediaQuery.of(context).size.width * 0.60,
                color: null,
                height: MediaQuery.of(context).size.height * 0.10,
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.end,
                  children: [
                    TextButton(
                        style: ButtonStyle(
                          side: MaterialStatePropertyAll(
                            BorderSide(color: Colors.red.shade300, width: 1),
                          ),
                        ),
                        onPressed: () => Navigator.pop(context),
                        child: CustomText(
                          text: "ยกเลิก",
                          size: MediaQuery.of(context).size.height * 0.15,
                          color: Colors.red.shade300,
                        )),
                  ],
                ),
              )
            ],
          ),
        ),
      ],
    );
  }

  void _pickImageCamera() async {
    print('camera');
    final picker = ImagePicker();
    final pickedFile = await picker.pickImage(
      maxWidth: 1000,
      source: ImageSource.camera, // ใช้กล้องถ่ายรูป
    );

    File imageFileCrop = File(pickedFile!.path);
    CroppedFile? croppedFile = await ImageCropper().cropImage(
      sourcePath: imageFileCrop.path,
      aspectRatioPresets: [
        CropAspectRatioPreset.square,
        CropAspectRatioPreset.ratio3x2,
        CropAspectRatioPreset.original,
        CropAspectRatioPreset.ratio4x3,
        CropAspectRatioPreset.ratio16x9
      ],
      uiSettings: [
        AndroidUiSettings(
            toolbarTitle: 'Cropper',
            toolbarColor: Colors.deepOrange,
            toolbarWidgetColor: Colors.white,
            initAspectRatio: CropAspectRatioPreset.original,
            lockAspectRatio: false),
        IOSUiSettings(
          title: 'Cropper',
        ),
        WebUiSettings(
          context: context,
        ),
      ],
    );

    //print(pickedFile!.path);
    if (pickedFile!.path.isNotEmpty) {
      //print('not empty');
      if (croppedFile != null) {
        Uint8List imageRead = await croppedFile.readAsBytes();
        setState(() {
          if (imageUrl.length > imageLength) {
            //print('1a');
            imageUint8List[imageLength] = imageRead;
            //print(imageUint8List.length);
            //print('2a');
            imageFile[imageLength] = pickedFile;
            //print(imageFile.length);
            //print('3a');
            image![imageLength] = File(pickedFile.path);
            //print('4a');
            imageUrl[imageLength] = '';

            //print('aa');
            //print(imageLength);
            imageLength = imageLength + 1;
            imageUrlFromFirestore[imageLength] = '';
            //print('bb');
            //print(imageLength);
            //print(imageFile.length);
          } else {
            imageUint8List.add(imageRead);
            imageFile.add(pickedFile);

            // image!.add(File(pickedFile.path));
            XFile? pickedFileForFirebase = XFile(croppedFile.path);
            image!.add(File(pickedFileForFirebase.path));

            imageUrl.add('');

            imageLength = imageLength + 1;
            imageUrlFromFirestore.add('');
            //print(imageLength);
            //print(imageFile.length);
          }
          imageAddressAllForDropdown.clear();
          for (int i = 0; i < imageUrl.length; i++) {
            imageAddressAllForDropdown.add('รูปภาพ ${i + 1}');
          }
          for (int i = 0; i < resultList.length; i++) {
            resultList[i]['Image'] = '';
            dropDownControllersimageAddress[i].value = '';
          }
        });
      }
      //print(imageUrl.length);
      //print(imageLength);

      // //print(imageRead);
    }
  }

  void _pickImageGallery() async {
    //print('gallery');
    final ImagePicker _picker = ImagePicker();
    List<XFile>? images = await _picker.pickMultiImage(maxWidth: 1000);

    if (images.isNotEmpty) {
      //print(images.length);
      for (var element in images) {
        Uint8List imageRead = await element.readAsBytes();
        setState(() {
          if (imageUrl.length > imageLength) {
            //print('1b');
            imageUint8List[imageLength] = imageRead;
            //print('2b');
            imageFile[imageLength] = element;
            //print('3b');
            image![imageLength] = File(element.path);
            //print('4b');
            imageUrl[imageLength] = '';
            //print('aaa');
            //print(imageLength);
            imageLength = imageLength + 1;
            imageUrlFromFirestore[imageLength] = '';
            //print('bbb');
            //print(imageLength);
            //print(imageFile.length);
          } else {
            imageUint8List.add(imageRead);
            imageFile.add(element);
            image!.add(File(element.path));
            imageUrl.add('');
            imageLength = imageLength + 1;
            imageUrlFromFirestore.add('');
            //print(imageLength);
            //print(imageFile.length);
          }
          imageAddressAllForDropdown.clear();
          for (int i = 0; i < imageUrl.length; i++) {
            imageAddressAllForDropdown.add('รูปภาพ ${i + 1}');
          }
          for (int i = 0; i < resultList.length; i++) {
            resultList[i]['Image'] = '';
            dropDownControllersimageAddress[i].value = '';
          }
        });
      }
    }
  }

  Future<dynamic> imageDialog2(String text, int index) async {
    return showDialog(
      context: context,
      builder: (BuildContext context) {
        return StatefulBuilder(builder: (context, setState) {
          return AlertDialog(
            // content: Text('This is the dialog content.'),
            actionsPadding: EdgeInsets.all(20),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(20.0),
            ),
            actions: [
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Padding(
                      padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                      child: Text(
                        "กรุณาเลือกรูปแบบของเอกสารค่ะ",
                        style: FlutterFlowTheme.of(context).headlineMedium,
                      ),
                    ),
                    Padding(
                      padding: EdgeInsets.only(bottom: 8.0, top: 5.0),
                      child: Text(
                        text,
                        style: FlutterFlowTheme.of(context).headlineMedium,
                      ),
                    ),
                    const Divider(),
                    Container(
                      // color: Colors.white,
                      width: MediaQuery.of(context).size.width * 0.60,
                      height: MediaQuery.of(context).size.height * 0.06,
                      child: GestureDetector(
                        onTap: () async {
                          Navigator.pop(context);
                          pickPdfFile2(index);
                        },
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Icon(
                              FFIcons.kpaperclipPlus,
                              color: Colors.black,
                              size: MediaQuery.of(context).size.height * 0.025,
                            ),
                            SizedBox(
                              width: MediaQuery.of(context).size.width * 0.03,
                            ),
                            Text(
                              'แนบไฟล์',
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ],
                        ),
                      ),
                    ),
                    const Divider(),
                    Container(
                      // color: Colors.white,
                      width: MediaQuery.of(context).size.width * 0.60,
                      height: MediaQuery.of(context).size.height * 0.06,
                      child: GestureDetector(
                        onTap: () async {
                          Navigator.pop(context);
                          _pickImageCamera2(index);
                        },
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Icon(
                              Icons.camera_alt_outlined,
                              color: Colors.black,
                              size: MediaQuery.of(context).size.height * 0.025,
                            ),
                            SizedBox(
                              width: MediaQuery.of(context).size.width * 0.03,
                            ),
                            Text(
                              'กล้องถ่ายรูป',
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ],
                        ),
                      ),
                    ),
                    Container(
                      // color: Colors.white,
                      width: MediaQuery.of(context).size.width * 0.60,
                      height: MediaQuery.of(context).size.height * 0.06,
                      child: GestureDetector(
                        onTap: () async {
                          Navigator.pop(context);
                          _pickImageGallery2(index);
                        },
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Icon(
                              Icons.image_outlined,
                              color: Colors.black,
                              size: MediaQuery.of(context).size.height * 0.025,
                            ),
                            SizedBox(
                              width: MediaQuery.of(context).size.width * 0.03,
                            ),
                            Text(
                              'แกลลอรี่',
                              style:
                                  FlutterFlowTheme.of(context).headlineMedium,
                            ),
                          ],
                        ),
                      ),
                    ),
                    // Container(
                    //   // color: Colors.white,
                    //   width: MediaQuery.of(context).size.width * 0.60,
                    //   height: MediaQuery.of(context).size.height * 0.06,
                    //   child: GestureDetector(
                    //     onTap: () {
                    //       setState(() {
                    //         image = null;
                    //       });
                    //       Navigator.pop(context);
                    //     },
                    //     child: Row(
                    //       mainAxisAlignment: MainAxisAlignment.start,
                    //       children: [
                    //         Icon(
                    //           Icons.delete,
                    //           color: Colors.red.shade500,
                    //           size: MediaQuery.of(context).size.height * 0.03,
                    //         ),
                    //         SizedBox(
                    //           width: MediaQuery.of(context).size.width * 0.03,
                    //         ),
                    //         Text(
                    //           'ลบรูปภาพ',
                    //           style: TextStyle(
                    //             fontSize: MediaQuery.of(context).size.height * 0.02,
                    //             color: Colors.red.shade500,
                    //           ),
                    //         ),
                    //       ],
                    //     ),
                    //   ),
                    // ),
                    // Container(
                    //   width: MediaQuery.of(context).size.width * 0.60,
                    //   color: null,
                    //   height: MediaQuery.of(context).size.height * 0.10,
                    //   child: Row(
                    //     mainAxisAlignment: MainAxisAlignment.end,
                    //     children: [
                    //       TextButton(
                    //           style: ButtonStyle(
                    //             side: MaterialStatePropertyAll(
                    //               BorderSide(color: Colors.red.shade300, width: 1),
                    //             ),
                    //           ),
                    //           onPressed: () => Navigator.pop(context),
                    //           child: CustomText(
                    //             text: "ยกเลิก",
                    //             size: MediaQuery.of(context).size.height * 0.15,
                    //             color: Colors.red.shade300,
                    //           )),
                    //     ],
                    //   ),
                    // )
                    SizedBox(
                      height: 15,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.end,
                      children: [
                        TextButton(
                            style: ButtonStyle(
                              shape: MaterialStateProperty.all<
                                  RoundedRectangleBorder>(
                                RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(
                                      10.0), // ปรับค่าตามต้องการ
                                ),
                              ),
                              side: MaterialStatePropertyAll(
                                BorderSide(
                                    color: Colors.red.shade300, width: 1),
                              ),
                            ),
                            onPressed: () => Navigator.pop(context),
                            child: CustomText(
                              text: "   ยกเลิก   ",
                              size: MediaQuery.of(context).size.height * 0.15,
                              color: Colors.red.shade300,
                            )),
                        // TextButton(
                        //     style: ButtonStyle(
                        //       backgroundColor: MaterialStatePropertyAll(
                        //           Colors.blue.shade900),
                        //       // side: MaterialStatePropertyAll(
                        //       // BorderSide(
                        //       //     color: Colors.red.shade300, width: 1),
                        //       // ),
                        //     ),
                        //     onPressed: () {
                        //       Navigator.pop(context);
                        //     },
                        //     child: CustomText(
                        //       text: "   บันทึก   ",
                        //       size: MediaQuery.of(context).size.height * 0.15,
                        //       color: Colors.white,
                        //     )),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          );
        });
      },
    );
  }

  void pickPdfFile2(int index) async {
    // เลือกไฟล์ PDF
    FilePickerResult? result = await FilePicker.platform.pickFiles(
      allowMultiple: true,
      type: FileType.custom,
      allowedExtensions: ['pdf'],
    );

    if (result != null) {
      for (PlatformFile file in result.files) {
        String filePath = file.path!;
        setState(() {
          finalFileResultString![index]!.add(filePath);

          fileUrlFromFirestoreList![index]!.add('');

          // finalFileResult[index]!.add();
        });
        // String pdfPath = result.files.single.path!; (ไว้สำหรับ เลือกไฟล์เดียวแบบไม่ muiti)

        // Open PDF file using open_file package
        // OpenFile.open(filePath);
      }
      print(finalFileResultString);
    }
  }

  void _pickImageCamera2(int index) async {
    // //print('camera');
    final picker2 = ImagePicker();
    final pickedFile2 = await picker2.pickImage(
      maxWidth: 1000,
      source: ImageSource.camera, // ใช้กล้องถ่ายรูป
    );
    File imageFileCrop2 = File(pickedFile2!.path);
    CroppedFile? croppedFile2 = await ImageCropper().cropImage(
      sourcePath: imageFileCrop2.path,
      aspectRatioPresets: [
        CropAspectRatioPreset.square,
        CropAspectRatioPreset.ratio3x2,
        CropAspectRatioPreset.original,
        CropAspectRatioPreset.ratio4x3,
        CropAspectRatioPreset.ratio16x9
      ],
      uiSettings: [
        AndroidUiSettings(
            toolbarTitle: 'Cropper',
            toolbarColor: Colors.deepOrange,
            toolbarWidgetColor: Colors.white,
            initAspectRatio: CropAspectRatioPreset.original,
            lockAspectRatio: false),
        IOSUiSettings(
          title: 'Cropper',
        ),
        WebUiSettings(
          context: context,
        ),
      ],
    );

    //print(pickedFile!.path);
    if (pickedFile2.path.isNotEmpty) {
      //print('not empty');
      if (croppedFile2 != null) {
        Uint8List imageRead2 = await croppedFile2.readAsBytes();
        imageUrlFromFirestoreList2![index]!.add('');
        imageFileList2![index]!.add(pickedFile2);
        imageList2![index]!.add(File(pickedFile2.path));
        imageUint8ListList2![index]!.add(imageRead2);

        print(imageFileList2);
        print(imageList2);
        print(imageUint8ListList2);
        setState(() {});
      }
      //print(imageUrl.length);
      //print(imageLength);

      // //print(imageRead);
    }
  }

  void _pickImageGallery2(int index) async {
    //print('gallery');
    final ImagePicker _picker2 = ImagePicker();
    List<XFile>? images2 = await _picker2.pickMultiImage(maxWidth: 1000);

    if (images2.isNotEmpty) {
      //print(images.length);
      for (var element2 in images2) {
        Uint8List imageRead2 = await element2.readAsBytes();
        setState(() {
          imageUrlFromFirestoreList2![index]!.add('');
          imageFileList2![index]!.add(element2);
          imageList2![index]!.add(File(element2.path));
          imageUint8ListList2![index]!.add(imageRead2);

          print(imageFileList2);
          print(imageList2);
          print(imageUint8ListList2);
        });
      }
    }
  }

  //jak datepicker
  void bottomPicker(BuildContext context) {
    showModalBottomSheet(
        context: context,
        builder: (BuildContext context) {
          DateTime _selectDate = dateBirthday;
          return Container(
            height: 500,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(20),
                topRight: Radius.circular(20),
              ),
              color: Colors.white,
            ),
            child: Column(
              children: [
                Container(
                  height: 50,
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      TextButton(
                        onPressed: () {
                          Navigator.pop(context);
                        },
                        child: Text(
                          'ยกเลิก',
                          style: Theme.of(context).textTheme.titleMedium?.merge(
                              TextStyle(
                                  color: Colors.grey, fontFamily: 'Kanit')),
                        ),
                      ),
                      TextButton(
                        onPressed: () {
                          _model.textController2.text =
                              DateFormat('dd').format(_selectDate);
                          _model.textController3.text =
                              DateFormat('MM').format(_selectDate); //budda
                          _model.textController4.text = (int.parse(
                                      DateFormat('yyyy').format(_selectDate)) +
                                  543)
                              .toString();

                          dateBirthday = _selectDate;
                          Navigator.pop(context);
                        },
                        child: Text(
                          'ตกลง',
                          style: Theme.of(context).textTheme.titleMedium?.merge(
                              TextStyle(
                                  color: Colors.blueAccent,
                                  fontFamily: 'Kanit')),
                        ),
                      ),
                    ],
                  ),
                ),
                Container(
                  height: 350,
                  child: ScrollDatePicker(
                    onDateTimeChanged: (DateTime value) {
                      setState(() {
                        _selectDate = value;
                      });
                    },
                    minimumDate: DateTime(DateTime.now().year - 150,
                        DateTime.now().month, DateTime.now().day),
                    maximumDate: DateTime(DateTime.now().year, 12, 31),
                    selectedDate: _selectDate,
                    locale: Locale('th'),
                    viewType: [
                      DatePickerViewType.day,
                      DatePickerViewType.month,
                      DatePickerViewType.year,
                    ],
                    scrollViewOptions: DatePickerScrollViewOptions(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      day: ScrollViewDetailOptions(
                        alignment: Alignment.centerRight,
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                      month: ScrollViewDetailOptions(
                        label: '  ',
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                      year: ScrollViewDetailOptions(
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          );
        });
  }

  //jak datepicker
  void bottomPickerToSend(BuildContext context) {
    showModalBottomSheet(
        context: context,
        builder: (BuildContext context) {
          DateTime _selectDate = dateBirthday;
          return Container(
            height: 500,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(20),
                topRight: Radius.circular(20),
              ),
              color: Colors.white,
            ),
            child: Column(
              children: [
                Container(
                  height: 50,
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      TextButton(
                        onPressed: () {
                          Navigator.pop(context);
                        },
                        child: Text(
                          'ยกเลิก',
                          style: Theme.of(context).textTheme.titleMedium?.merge(
                              TextStyle(
                                  color: Colors.grey, fontFamily: 'Kanit')),
                        ),
                      ),
                      TextButton(
                        onPressed: () {
                          _model.textController7.text =
                              DateFormat('dd').format(_selectDate);
                          _model.textController8.text =
                              DateFormat('MM').format(_selectDate); //budda
                          _model.textController9.text = (int.parse(
                                      DateFormat('yyyy').format(_selectDate)) +
                                  543)
                              .toString();

                          dateBirthday = _selectDate;
                          Navigator.pop(context);
                        },
                        child: Text(
                          'ตกลง',
                          style: Theme.of(context).textTheme.titleMedium?.merge(
                              TextStyle(
                                  color: Colors.blueAccent,
                                  fontFamily: 'Kanit')),
                        ),
                      ),
                    ],
                  ),
                ),
                Container(
                  height: 350,
                  child: ScrollDatePicker(
                    onDateTimeChanged: (DateTime value) {
                      setState(() {
                        _selectDate = value;
                      });
                    },
                    minimumDate: DateTime(DateTime.now().year - 150,
                        DateTime.now().month, DateTime.now().day),
                    maximumDate: DateTime(DateTime.now().year + 10, 12, 31),
                    selectedDate: _selectDate,
                    locale: Locale('th'),
                    viewType: [
                      DatePickerViewType.day,
                      DatePickerViewType.month,
                      DatePickerViewType.year,
                    ],
                    scrollViewOptions: DatePickerScrollViewOptions(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      day: ScrollViewDetailOptions(
                        alignment: Alignment.centerRight,
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                      month: ScrollViewDetailOptions(
                        label: '  ',
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                      year: ScrollViewDetailOptions(
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          );
        });
  }

  //jak datepicker
  void bottomPickerCompany(BuildContext context) {
    showModalBottomSheet(
        context: context,
        builder: (BuildContext context) {
          DateTime _selectDate = dateBirthday;
          return Container(
            height: 500,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(20),
                topRight: Radius.circular(20),
              ),
              color: Colors.white,
            ),
            child: Column(
              children: [
                Container(
                  height: 50,
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      TextButton(
                        onPressed: () {
                          Navigator.pop(context);
                        },
                        child: Text(
                          'ยกเลิก',
                          style: Theme.of(context).textTheme.titleMedium?.merge(
                              TextStyle(
                                  color: Colors.grey, fontFamily: 'Kanit')),
                        ),
                      ),
                      TextButton(
                        onPressed: () {
                          _model.textController2Company.text =
                              DateFormat('dd').format(_selectDate);
                          _model.textController3Company.text =
                              DateFormat('MM').format(_selectDate); //budda
                          _model.textController4Company.text = (int.parse(
                                      DateFormat('yyyy').format(_selectDate)) +
                                  543)
                              .toString();

                          dateBirthday = _selectDate;
                          Navigator.pop(context);
                        },
                        child: Text(
                          'ตกลง',
                          style: Theme.of(context).textTheme.titleMedium?.merge(
                              TextStyle(
                                  color: Colors.blueAccent,
                                  fontFamily: 'Kanit')),
                        ),
                      ),
                    ],
                  ),
                ),
                Container(
                  height: 350,
                  child: ScrollDatePicker(
                    onDateTimeChanged: (DateTime value) {
                      setState(() {
                        _selectDate = value;
                      });
                    },
                    minimumDate: DateTime(DateTime.now().year - 150,
                        DateTime.now().month, DateTime.now().day),
                    maximumDate: DateTime(DateTime.now().year + 10, 12, 31),
                    selectedDate: _selectDate,
                    locale: Locale('th'),
                    viewType: [
                      DatePickerViewType.day,
                      DatePickerViewType.month,
                      DatePickerViewType.year,
                    ],
                    scrollViewOptions: DatePickerScrollViewOptions(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      day: ScrollViewDetailOptions(
                        alignment: Alignment.centerRight,
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                      month: ScrollViewDetailOptions(
                        label: '  ',
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                          // fontFamily: 'Kanit',
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                      year: ScrollViewDetailOptions(
                        textStyle: TextStyle(
                          color: Colors.black,
                          fontSize: 18,
                        ),
                        selectedTextStyle: TextStyle(
                          color: Colors.blueAccent,
                          fontSize: 18,
                        ),
                        // margin: const EdgeInsets.only(right: 10),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          );
        });
  }
}

class CustomProgressDialog {
  static void show(BuildContext context) {
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (BuildContext context) {
        return AlertDialog(
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              CircularProgressIndicator(),
              SizedBox(height: 16),
              Text("กำลังประมวลผล..."),
            ],
          ),
        );
      },
    );
  }

  static void hide(BuildContext context) {
    Navigator.of(context, rootNavigator: true).pop();
  }
}
